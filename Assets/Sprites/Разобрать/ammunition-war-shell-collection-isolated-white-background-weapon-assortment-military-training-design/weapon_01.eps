%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: weapon-01.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Cheremisinov Oleg
%%CreationDate: 08/10/2019
%%BoundingBox: 0 0 1200 1200
%%HiResBoundingBox: 0 0 1200 1200
%%CropBox: 0 0 1200 1200
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.1 x540 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2019-10-08T18:50:56+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-10-08T18:50:56+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-10-08T18:50:56+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>148</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAlAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7FXYq7FWM+ZfO9noeuaRpUgBfUZP37k09KI1VW+l/&#xA;wBynJmEZAd7n6XQyy45zH8I+bJsucB2KuxVjf5gee9I8keXX1rUleRTIlvbW8f25Z5KlUBOw2UsS&#xA;ewPyxVh/5V/n7pHnvVJNKk019K1CjNboZhOkoUFiA3CIhuIJpx7HfFXqmKuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxVK/M2tpoeiz6m6hkgKByxYKodwnJuCu5C8q0VSTjaoTyL5mj8y+WbTVRL&#xA;DJNKCLlbc1RJBuU6ncAjACqeSTQxAGV1QE0BYgVP04VX4q8nl/5yM8px+ez5W+qXDRLcNZyamCvA&#xA;To5jakf2igYH4q+4BxV6ZrOq22k6XdaldGkFrGZGHc06KPdjsMjOXCLLZhxHJMRHMlvSNTt9U0y1&#xA;1G3NYbqNZE705DcfQdsYS4hYTmxHHMxPMIvJNTsVdiry7z7YLdeay76Qb0pDEqT+sqUFGNApYdzl&#xA;GTGCfpv4uy0moMIUMvB5cN/oeo5e612KuxV47/zlFZ/W/Iukx8wlNat2qRX/AI97gfxwE0gmnkf/&#xA;ADj3optfzN0mb1w/F5vhAp1srkePvkRK2ImC+vsmzdirsVQWsa1pej2ZvNTuFtrcMEDNUlnb7KIq&#xA;gs7HsqgnFWJeZfzT0W0tEtrB501i7dY7OG6s7m2ND8TyUuY4qqEruK70xVk3lfUbrUtBs726AW4l&#xA;U+qF6clYr2/1cVTTFXYq7FXYq7FXYq7FXYq7FXYq87/Pu21a4/Li8XTY5JXSWGS5WPlX6urVlLBf&#xA;2QN29shk5MZcmH/84trrQ07XGulYacz2/wBVYl+BlHqerwBHGtOHKntkMSII383Pyn8zeaPMY1Gz&#xA;Zrm1aOOOKJLgQNDxFGB57Fa/F8PjhnAk22gvS/I+h3eheVNO0m7l9ae0RkZyxeil2ZF5NueCkL9G&#xA;WRFBBfJn6Bgl/NC4mUyCQapdycWeJRtcSMQOVBXwFcqlkpq4zdPrLzxF6vle8jKRyAmElJUMiGky&#xA;HdBu2WSFinIxT4ZA2R7jRVPJ0Yj8s2CBEQcCQkSGJACxOyHdfkcYihS5Z8Uidz7zZTnJNbsVdirA&#xA;PNRjl80w8EEzW7IJGD8fRJhc1ZR9qocDj/lVwoZ5DNFPCk0LiSGVQ8cimqsrCoII6gjAlfirsVeX&#xA;/wDOQtk135Q0yNZIoyNWt25TyJEv9zMNi5ArvlGoycEbon3C2Mo289/JTTLuy862Cm5spITJI7JD&#xA;NbyyE/VJwOPEl+/QZiYc0Z5AeGYPmJAfqRGJHUPpLNkzdirsVYpqItz+ZGl/X6ekunXDaRz+z9a9&#xA;RfrBWv8AuwQ8ePfjy98VecfnxrOlXmveV7W0uhNcWsszyC3ZXKNKYxECQSN2jNR4ZWT6hTG93qvk&#xA;dlPlmzAIJHqVA7VlfLGSe4q7FXYq7FUr8xeaNB8uWP13WbxLSEmkYapeRv5Y41q7n/VGAkDmtPL9&#xA;W/5yMs0Zho+iyzxVoLi8mW3X5hVEtfpYZSc4Z8CTf9DHa/8A9WzT/wDke+Dxz3LwJ3pP/ORdg7Aa&#xA;zo0trGTT6xaSrcr8yrCIj6CckMwXgeoeX/Mmh+YLEX2j3iXdudmKVDI3XjIjUZG9mGWggsKTLCqW&#xA;a95gtdGigaWCe6munMdvbWyB5GKxtKx+JkUBUQkkt+OKu8ta5HruhWmrRxmGO7UusTGrKAxWh6b7&#xA;b4qiJ9Rih1K1sGUl7tJpEbsPR4VB+fqZEzogd7IRsEovJMXyXcatBB58uvUtLcJHqN1zn4uXAFxJ&#xA;Vtm6/RmAcB4r4pfZ+ppM9+Qe9fmX5vs9Om03y/zQXWqs8kvNygjt4FLB+Q+yWlCKPblmfYHNyIwM&#xA;jQFlf+W/nCz1ObU/L4ZPrWifV+HBzIrwXFukgYOd34yM6k/Lxxu+SJRMTRFFm+KHYqhNXvzp+k3t&#xA;+IzMbOCWcRA0L+khfiDQ9aUxV4J+XmpaxqlmdV1Gykur6a/muXm5KnB5CymiuymgRiAPDAZEdG2G&#xA;OJFmQHwP6mZf845+Y9T1TyGun6jG4l0Z1tYZZAQXgKhoxv8AyD4fkBhanqmKuxV5P/zkl/yhWmf9&#xA;te3/AOTE+QnyYZOTyn8mLh4PP2kui8ibj0yDXpJBMjHbwDVyuHNqhzfV2XuQ7FXYqwP84pdHk8u2&#xA;ml6m0McWo3kSNcTUrBDFWW4nSu4ZYkK7b/FTvkJypBL5t82atoUfmlp/J1zJHoEShLdp0kdg3H95&#xA;wMzl6M3sMqlPuYEso/Kj8xrrSfMtvNq2qs2kmKRbyCO3PIkj92xo7FuLb7A/LfGOTfdRJ9PadqNj&#xA;qVjDfWE6XNncKHhnjNVZTmQC2IjFXYq7FXyB5280X+v6/qGr3jGSkjR2kBrxihVisaBe1AKt4tmH&#xA;OVltAYddTyvDJPIzOyqSAN6U8BiAqSDVXM3EMW/4rCtz+VKfxy7hCE0guL6IJLEZUduPJHCBKHqD&#xA;TfKiAln/AOX/AJovtA8z6bqVqxjjuJY4L6AV4yQvIEcEd6faXwOCEqKkPrjMxqeTf85I6kbXyVbw&#xA;pErST3QKysASgRSDxqOrB6bdq5XlkQNkEsP/AOcbPOGuTa5ceXbm4kuNN+qvPbxyEkRNG6L8HKpo&#xA;Q1OINMpwzJlRREvUPNusNpnnGyumHqRWemXlwsXSrAEkA9uXEA5DPk4cgPcC5WONxPvDM7K5F1Zw&#xA;XIXiJ40kC+HNQ1PxzLibALQRRp8bXt/pjfmRd2c8rEnVbqKWNkb/AJaZAwNVyut2jgNvqfzxp2hR&#xA;WR1+8tYjfWPpRxXpUGVI3mVSqsegPM7ZaZACy5OPGZy4RzKr5M07Q2sU1yytYlvdQjC3N6qgSSrG&#xA;eCh2G54hQBiJAiwuTGYSMZcwyPCwdirsVYB5s1OKDzK0LQyuxSKjItV6N75EzrZvx6cyF2Gf5Jod&#xA;irsVeQ/85OTwweRdMkmrwGsW4JAJpWCfrTIz5MZAkbPKPyA1GxuvzL0tbclmUzk/CRQfVJ/HIRBt&#xA;hGBBfWuWtrsVdir54/5yXu7q6ldUcra6T9Wtnj/mkv1nnZh7BbNMoy82Enh8gpHAo6CNdvn1yksF&#xA;SxYrewEGh9RR9BNDir6i/wCceJ5ZPJmoROxMdvqk8cKnoqtDDIQP9nIx+nMnFybIvUcsZOxV2Kvi&#xA;64u7W4vZlLLDMWYUk2jkUnueit89j1rXrhENqFutHMZ5ENb8unMEof8AVYVqMG4VD/o+b/fyU8d/&#xA;6Y8S0irLRJJ3Hpo90/hGp4/Sxw7lU6t7aTSNYsluo/8AS/Uib0l+zGhYbe5p9A/UgUVfX+ZrUkfn&#xA;PyfpXm3QZ9G1LkkUpVkni4+pGyMGBUsGG9KHbpkZRsUghjX5aflBoXkq9ub62vpNQv5UNu0jhFRE&#xA;LBuIReR5VXry+jK8eMA2CmqZbrFjpMkkM15aRTzSstoryKCeEpoy18CK5OcR1DKJKZRRRxRJFGoS&#xA;ONQqKOgUCgAyYFMXyBd6If8AoY+40yZfUWXXhcSCpFYrmeO4Ybb/AGJsj1ZdH1T5vNsNBmFxw9Jp&#xA;LdSJKcSWnQKN+pJ6ZKrQJEbhf5WNudBtRblDEvNP3dOIZJGVl27hgQffGlMidymuKHYq7FWAebdI&#xA;0yfzE889rHJP6cREjKCejgf8RyJxxO5DdDU5ICoyIDP8k0uxV2KvJ/8AnJzT2ufysmuh9nTb21um&#xA;PgC5g/XPgKQ8k/5xg05br8wXuF+zYQXE5O9K0WADp1/0jAEl9Z5Ji7FXYq+Zv+cjb65i1LVrRLOS&#xA;WCa40ySS8UjhG0drdKkbDrWQSMR/qnMefM/BhJ4xcXc49IC2cgRrv9Hyyshittr+5S4iZbR3ZXUh&#xA;R3IPTpjSKfTn/OMeqXt15d1u3n06W1ij1AzLcuQUZ5IY1aIDZuSCNWO37Qy/FybIvZstZOxV2Kvl&#xA;X83vy41Hy9rl1fLA50W6kMlrfxqWROZr6E4H2Sp2Vu48egx5RpmCli3txDY8fTlQ+lxWWL41J47U&#xA;4/vPvUZDh7mSVfX9Spy43Xz9Gbl/xCuDhkuzJ/JOpamGvAtrPeSuIgjO4VUpz+2XPNQf9Q5KAPVB&#xA;Zd5T/L3Xdf8AOlvq2pRLHp1mY5ZplB9NjGeSwRcvtE0AdvCvStMmI2UEvfcvYPNfzn/NaTyPZWVp&#xA;YwCbVdU9T0ZJK+nDHHxDOwH2mq44r9J90qu/Jvz4PN1lcloltb3TVgjvY4hyilDq4jlUndSxRuS7&#xA;9BvvlccfCdmRlfNH/miZRDpRjYj9+1fiZf2R4Zr+08hiI0adp2ViEzKxbOc2jqXwhNoH5wp+YP1e&#xA;4F5/j26VbuBjOpuioCyBvUD8QBFEV48tgONO2RZPrH81NK1bUPJtlKkjINNuLbUNRhSN5Zplt9zF&#xA;Gkf7Rc8u3TsMMiADeywNEFW/KDStR0/yvM927GDULubULGORGiljhuuMnpyIxJDBy1f8zjEggVus&#xA;zciWcYWLsVdirxHzl+YE/wDiXzbHarCy6HAkdszuqkyxwSSPVSQXpIeNB4ZEyogN2PDxRJ328if7&#xA;Hr+gavDrOh6fq0H91f28Vwo8PUQNT6K0yTSj8VdiryD/AJye86aboX5eTaNdW0txceYgba0KEKkb&#xA;RPG5eQk12qKADf2wFIeN/wDONfn3StB85xafe2ssk3mEmzs7iLgRFI0yD94GoeLlRuDtToewCS+w&#xA;8kxdirsVfPn/ADkVp19FZ6xeyQMtpdXulCCanwt6Vpeq9D/klhX55RkG/wAmEnhkv2Yf+MSfqyks&#xA;Cusv97IP+Mif8SGKvqD/AJx1BHlDVSRQHV5iD4/6PbjMjFybIvVMtZOxV2KrZYopY2ilRZI3BV0Y&#xA;BlYHYgg9RirFdV/KzyTqKuGsPqrSAhmtWMQoRTZB8A/4HIHGCniLHv8AoXvyP6nP6xf8f99+rFx/&#xA;5NcvxyHgRTxlkfl78sfJug8jZWZeR6eo88jy8uNaVUnh+0f2cnHGAgyLKVVVUKoCqooqjYADsMmh&#xA;vFWF/mX+Vmh+fbS1jv5pbS7sWY2t5BxLKJKc0ZWFGU8R/nXFVb8uPy10TyJps9pp8stzPdur3d3P&#xA;x5uUBCqAoAVVqaD3O+Kpj5q8qReYFtBJdS2xtHZ19MmjcgBRhUeGYuq0oy1ZqnO0WuOC6AN96eKv&#xA;FQoJIApUmp28ScynCJYzL+X+jSfmBB53Mk41OCzey9ISv6LKx2Ypypspb4acanlTkK4oZHcwJcW8&#xA;kD1CyKVJHUVFNsqzYhkgYHlIUyhLhII6NwQpBBHCn2Y1CLXrRRTDhxjHARHKIpZy4iSeq/LGLsVd&#xA;iryvzh5HuI/Ndn+g7HT49K1iUN5iScyetdepNSbejUJjkahG9Sa9sxM+sx4pxhL6p8m2GOUokjkH&#xA;pGj6TY6RplvpthGIrS1ThEgoKDqegA3JrsMy2pGYq7FXnP52flnovnTy99a1S7e1GhW95dWxDrFC&#xA;ZDEGVp3KSMI1MQLcRWmApDw//nGn8stL8yag3mS5u2hufLd5bPZ28JqSebyt64dSOL7BSjV2Ne2A&#xA;JL62yTF2KuxVKPNflfSfNGhXOi6oha1uQPiQ0dHU1V0O9GU/0O2Aiwgh4pJ/zizdgmOLzFG8Ck+i&#xA;z2xDhT2NJCDlRwseBEaf/wA4wTW9wsk2vo1D1W2NQPYGTr9OAYV4Hsvlfy1pnlvRYNI01WFvDUs7&#xA;mskkjnk8jnarMT/AbZcBQZAJrhS7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqoT2V&#xA;vPcQTyCslsS0fh8QpvmPl0sMk4zPOHJshlMQQOUlfMhrdirsVWyxRSxPFKiyRSKVkjYBlZWFCCDs&#xA;QRiqXeX/AC1oXl6zez0ayisraSaWd44lCgvNI0jdOwLkKOirRRsBiqZ4q7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYqkWtectM0u+XTUgudS1Vk9X9H2EXrSrGTQPISUjjUnpzYV7Yqwzz&#xA;d+ZqzPBoVtbX2lapKTLcRXSCF1hVTTiyM6tybujdjirPvLd1PdaJazztzlZWDOep4sVFfoGKplir&#xA;sVdirsVdiqVza8pmaGyt3vXjr6hj2UEbU5EUrmOdRvURxNox95pFadqCXsTMF4SRsUljJqVYb0ye&#xA;LJxhjONFFZawdirsVWySLHG0jfZQFm+QFcVUdNnaewglc1dkHMj+YbH8cETYTIUURhQ7FUk8xeab&#xA;TRLixhmTm14zVoacUSnJvvYUyjNnEKvq24sRnfkneXtTsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;Yl5CWH6z5laQ11VtYuRfFv7z0wQLMb78Pq3Dj260xV5h+bl1ZXH5k2IjlJlgSOMGPc+pu7Kf8ng3&#xA;xYq9k8o/8o7Z/J/+TjYqnGKuxV2KuxVLfMFxLFp5SH++uGWCPtu+3UePTKNTIiNDrs2Yhv7kXZWc&#xA;NnbJBEPhUbserN3Zvc5ZCAiKDCUrNoHQtmv1b+9+suxBNTQgAfiDlOm/iHXibMvT3JmssTsyq4Zk&#xA;2dQakfPMgSBa6XYUOxVA65N6Ok3LVoWT01PgZSEB+9sjM7MojdCeUrsXOjRsP2GIJ6V5ASf8b5HE&#xA;biyyiinOWNbsVeVfmdLJ/jHT46/AtvCwHu08gP8AxEZqtcfWPh+l2OkHoL0bQJnn0LTZn3eW1hdj&#xA;7tGpObHCbgD5BwcgqRHmj8sYOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvF/wA8b3y7YaxZzXIuYJWh&#xA;/wByMlhIsU06M3G3ifmHibiUdvjQ7DbIynwi0E08K1TzLOmt3F3ozOluBxtmu1ieYJTcH01SMEn+&#xA;RRmNLOeY5MeJmH5cfnRrvl3UXk1c/X9LmiZZIEULIripRlNQv2tjUHbIx1BBopBfSvlDzPZeaPL1&#xA;prdmpjhug1YnILIyMUZWp4FcyoT4hbJOMmrsVec/mh+dWh+SXGnRRfpHXpE5izVuKRKfstM9DSvZ&#xA;RufYUOKvmrzN5x8yea9fm127kWCeTgqxwl1iRYhRVRWZyB3O/XFXpf5e/wDOQOoaJb2mkeZbQXOl&#xA;wKIk1C3LGeNa7GRGJDqv+TQ08cVe8Q2mja1bwarp9wTBdIJY7m2YASKwqCag/wBfHKZ4IyN8i2Ry&#xA;EbI7T9MtLCMpAp5OaySMaux9zkseKMBsxlMy5orLGLsVYp568w2Ntp8mnowmv3eKtuG4lVDiQsSd&#xA;vsr0ynLkAFdW7FjJN9EJ5A1+zWzGn3DCGd3X0amoclQCoI2qOH45DBMVTPNA3bNsyXGdirx381bx&#xA;k8+WEUahj9XtVappRmnmI/DNRrj+8Hw/S7DSn0H4vTfKb+p5W0Z+nKxtjT5wrmywf3cfcHDy/Wfe&#xA;U1y1rdirsVdirsVdirsVdirsVdirsVdirsVfJn5y+an1XXNQhWJSklwtxaXXJv7m2Eluq8Ps8XoW&#xA;r1qcxdRLowJeZ8JwCfUqaHYjY7ZTIbMQqpFcFAfWpX9njt+vKpGiyD6L/wCcZ/NFxdabd+XnhQRW&#xA;S/WluAWLu8zkPyBJUDpQKB9+ZenlziyiXt+ZSUv8w6vDoug6jq8w5RafbTXTr05CFC/Ee5pTFXwf&#xA;e6rfavq15ql/IZr29kaeeQ92dqmngPAdsVRunyqU9M7MNx7jFUXir2//AJxl8z3BfVvKsz84bdRf&#xA;2Kk7orMEmUf5PJkPzJ8cVe84q7FXYq8S/Mq2hbz1KzA8mjFdz/yzU8c5jtGZGaVdw+567suIOCHv&#xA;P3rvJlrANR0iinbUCw+JuojX3yvRTJnD+s29oRAhP+p+l7XnVvGOxV4P5+1OG6/MC5kei/U57a2Q&#xA;Nyr+5HMnbb7Uhpml1UwcnuLscESIPVPy7vEuPKlrGv8Ax5F7QkVofQYqCK7/AGaZstLK8Y8tnDzi&#xA;pMkzIanYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXxn+Y9xaz2+g21vbC3u7bTj9au1JrOJJGMYZeg9M&#xA;AivXf2FMTUcwwPNhSRTg1MmwBrvXtlMhsgFf9Xu2BKTUBrTc/qyEiLSHvv8AzixcWyHWrJrYNe0S&#xA;f68WPL0jRBDx6ABhyqOvfoKZWAiyExfQOZTJIPP+lT6t5H17TbcFri6sLiOBR1aQxngv0tQYq+Do&#xA;3KPX6CMVRqtWjKfkRiqIW+uAKVB9yMVe0f8AOLenXU3mnWdXIJggshau3bnPKjqB9EBxV9J4q7FX&#xA;Yq8T/M6Pn53kAVSfT6tTb/R/cHOY7QlWeXuH3PW9mxvTw95+9vyPCY9Q0mqrX6+3xAAf7qUdgMhp&#xA;J3OH9Zs10KhP+p+l7XnVPHOxV84+dP8AlPNW/wC2gv8AxBM5/Vf3h97tcH0fB67+Vf8AyjU3/Mdc&#xA;/wDJzNpofo+JcLU/V8ERZfmDpl3r0mlJEwRH9JLokUZw/pfZp9kvsDXeuSGriZ8KnTER4mU5lOO7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXgv/OSPk7RbPQ9N1WwsVgm9aOweaJmVY4QskiosQ+D4mrVqfrz&#xA;Hzx2tjJ89GKb4g0ppQ1oAD0zGJ2tgFRY7gJUTHj2FAT9+QNGVJ6Pp3/nG3QrO38ozat9WEd9cTPb&#xA;PchnPrQw0KsVYlQeTMp47GmZmnAq2YevZkJdir5l/Ov8hNVg1O58x+U7Vrywumaa902EcpYZGNWa&#xA;JBu6Md+K7r4U6KvC29eCRo3DRyKaOjChBHYg4qyTyd5H84eb71bbRLB5UJpLeMpS3iHcySn4R8up&#xA;7DFX2H+XXkTT/JPlqHR7VzPMWM17dsKGadgAzU7KAAqjsB41OKsnxV2KuxV4v+ZH/KcSf8Y/+xfO&#xA;V7S/v5e4fc9h2V/i8PefvXeTv+OjpP8AzHN/ybXK9D9cP6zb2j9E/wCp+l7NnXPFOxV84+dP+U81&#xA;b/toL/xBM5/Vf3h97tcH0fB63+WEgj8q3MhFQl5dsR8nrmz0RrGfeXC1H1fAPKvK+vxw6ot40TFY&#xA;xHcFQRUgXUbUzWY8gE7933h2Exca/HJ9EZ0Dp3Yq7FXYq7FXYq7FXYq7FXYq7FXYqgtY0XStasHs&#xA;NVtUu7OQqzQyCqkoeSn6DgItXk3m7/nGfQta1mbUNO1WXR7edV52EUCSRKwXifT+KPipA6b7137Z&#xA;VLCCjhVvJn/ON+gaDqn13U9Sk1uFY3jjspoUjirIpUs3xSFiAfhoRQ74I4ADa09W0vStO0qwi0/T&#xA;rdLWygBEMEYoq8mLGnzYk5cAAKCUVhV2KuxVC3Wk6VeSLJd2UFxIn2XliR2HyLA4qiUREQIihUUU&#xA;VVFAB7AYq3irsVdirsVeD/mPrlmPPl3G6SBrdeLUCkGkKrtuP5s5jXxEs0j7nuOydLI6fGRW9n7V&#xA;3k/XbL6/pPFJCf0nFEKhRvOAgPXtTIaSAEo/1vvbu0dJLgnuP7sn5Pds6p4F2KvnHzp/ynmrf9tB&#xA;f+IJnP6r+8Pvdrg+j4PWPy3/AOUOvP8AmKvP+JHNno/7s+8uHqPrHweKaH/uz/mFj/5Px5p48z7v&#xA;1OwPJ9Q50rpnYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXmfnT&#xA;8vdb1fzRJqdpBavbugXlI/FyfR4bjg3f3zS6vQZMmQyidi77Rdp48WKMZXYLvLf5fa5p99p8lxb2&#xA;qxW119YkZHqQOIX4RwG+2Q03Z2WEoknlK2er7VxZIyAB3jT0zN6887FWCap+UumahrN1qst44luZ&#xA;xcFOAIBAAA6+2Yc9HGRu2+OoIFMk0Ly5Bo+lS6dDKXjleWTmVAIMxqfGtPfL8eIRjTXOfEbYrZfk&#xA;7pVqDxvXeqLGaxr0Vw/j4rmONFFt/MF6Dma47sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:4c526682-bfaa-42a0-b1a7-bee44d50a688</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:4c526682-bfaa-42a0-b1a7-bee44d50a688</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:3475da6f-f821-6b47-9d03-3157c8745d3c</stRef:instanceID>
            <stRef:documentID>xmp.did:3eb636b9-3c86-4540-8758-407a64fdb135</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4c526682-bfaa-42a0-b1a7-bee44d50a688</stEvt:instanceID>
                  <stEvt:when>2019-10-08T18:50:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1200.000000</stDim:w>
            <stDim:h>1200.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1200 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1200 li
1200 1200 li
1200 0 li
cp
clp
1200 1200 mo
0 1200 li
0 0 li
1200 0 li
1200 1200 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
524.698 634.986 mo
524.698 658.927 li
492.77 658.927 li
492.77 634.986 li
492.77 631.196 494.089 626.622 496.298 622.623 cv
496.654 621.964 497.041 621.314 497.449 620.697 cv
499.197 618.038 501.354 615.788 503.772 614.427 cv
503.887 614.364 li
505.405 613.526 507.017 613.045 508.692 613.034 cv
508.734 613.034 li
509.079 613.034 509.435 613.056 509.77 613.107 cv
510.001 613.129 510.231 613.16 510.451 613.213 cv
510.911 613.296 511.372 613.411 511.822 613.568 cv
513.392 614.113 514.879 615.055 516.25 616.269 cv
521.285 620.718 524.698 628.883 524.698 634.986 cv
.745098 .521569 .27451 rgb
f
527.389 654.941 mo
527.389 716.285 li
527.389 716.567 527.164 716.809 526.9 716.809 cv
490.575 716.809 li
490.301 716.809 490.085 716.567 490.085 716.285 cv
490.085 654.941 li
527.389 654.941 li
.627451 .435294 .133333 rgb
f
526.962 716.809 mo
526.12 719.582 li
525.595 721.299 li
525.136 722.796 li
492.339 722.796 li
491.88 721.299 li
491.355 719.582 li
490.513 716.809 li
526.962 716.809 li
.627451 .486275 .25098 rgb
f
528.358 722.43 mo
528.358 724.764 li
528.358 725.393 527.88 725.894 527.305 725.894 cv
490.17 725.894 li
489.585 725.894 489.118 725.393 489.118 724.764 cv
489.118 722.43 li
489.118 721.802 489.585 721.299 490.17 721.299 cv
527.305 721.299 li
527.88 721.299 528.358 721.802 528.358 722.43 cv
.713726 .572549 .337255 rgb
f
524.7 654.941 mo
524.698 654.941 li
524.698 653.228 li
524.7 653.228 li
524.7 654.941 li
.898039 .898039 .898039 rgb
f
524.698 654.941 mo
492.771 654.941 li
492.771 653.228 li
494.853 653.228 li
494.853 654.938 li
498.821 654.938 li
502.861 654.938 li
502.861 653.228 li
516.166 653.228 li
516.166 654.938 li
520.207 654.938 li
520.207 653.228 li
524.698 653.228 li
524.698 654.941 li
.670588 .466667 .247059 rgb
f
524.7 654.941 mo
492.771 654.941 li
524.698 654.941 li
524.7 654.941 li
.564706 .392157 .121569 rgb
f
527.305 725.894 mo
520.216 725.894 li
520.844 725.894 521.346 725.393 521.346 724.764 cv
521.346 724.188 li
528.358 724.188 li
528.358 724.764 li
528.358 725.393 527.88 725.894 527.305 725.894 cv
516.165 725.894 mo
501.919 725.894 li
501.291 725.894 500.789 725.393 500.789 724.764 cv
500.789 724.188 li
517.295 724.188 li
517.295 724.764 li
517.295 725.393 516.792 725.894 516.165 725.894 cv
493.899 725.894 mo
490.17 725.894 li
489.585 725.894 489.118 725.393 489.118 724.764 cv
489.118 724.188 li
492.768 724.188 li
492.768 724.764 li
492.768 725.393 493.271 725.894 493.899 725.894 cv
.639216 .513725 .301961 rgb
f
525.595 721.299 mo
518.352 721.299 li
518.918 719.582 li
526.12 719.582 li
525.595 721.299 li
514.301 721.299 mo
503.782 721.299 li
503.217 719.582 li
514.866 719.582 li
514.301 721.299 li
495.762 721.299 mo
491.88 721.299 li
491.355 719.582 li
495.197 719.582 li
495.762 721.299 li
.564706 .435294 .223529 rgb
f
526.9 716.809 mo
520.226 716.809 li
520.226 715.092 li
527.389 715.092 li
527.389 716.285 li
527.389 716.567 527.164 716.809 526.9 716.809 cv
.564706 .392157 .121569 rgb
f
516.175 716.809 mo
501.909 716.809 li
501.909 715.092 li
516.175 715.092 li
516.175 716.809 li
f
493.888 716.809 mo
490.575 716.809 li
490.301 716.809 490.085 716.567 490.085 716.285 cv
490.085 715.092 li
493.888 715.092 li
493.888 716.809 li
f
499.166 719.582 mo
495.197 719.582 li
494.296 716.809 li
493.888 716.809 li
497.857 716.809 li
498.266 716.809 li
499.166 719.582 li
.501961 .388235 .2 rgb
f
496.737 724.188 mo
492.768 724.188 li
492.768 722.43 li
492.768 721.802 493.271 721.299 493.899 721.299 cv
495.762 721.299 li
499.731 721.299 li
497.95 721.299 li
497.95 721.299 li
497.868 721.299 li
497.24 721.299 496.737 721.802 496.737 722.43 cv
496.737 724.188 li
.572549 .458824 .270588 rgb
f
497.868 725.894 mo
493.899 725.894 li
493.271 725.894 492.768 725.393 492.768 724.764 cv
492.768 724.188 li
496.737 724.188 li
496.737 724.764 li
496.737 725.393 497.24 725.894 497.868 725.894 cv
.509804 .411765 .243137 rgb
f
499.731 721.299 mo
495.762 721.299 li
495.197 719.582 li
499.166 719.582 li
499.731 721.299 li
.45098 .34902 .180392 rgb
f
497.857 715.092 mo
493.888 715.092 li
493.888 654.941 li
497.887 654.941 li
497.939 654.941 li
497.857 654.941 li
497.857 715.092 li
.501961 .34902 .105882 rgb
f
497.857 716.809 mo
493.888 716.809 li
493.888 715.092 li
497.857 715.092 li
497.857 716.809 li
.45098 .313725 .0980392 rgb
f
498.821 653.228 mo
494.853 653.228 li
494.853 631.615 li
494.853 628.852 495.366 625.722 496.298 622.623 cv
496.654 621.964 497.041 621.314 497.449 620.697 cv
499.197 618.038 501.354 615.788 503.772 614.427 cv
503.887 614.364 li
503.887 614.364 li
503.772 614.427 li
503.667 614.584 503.584 614.751 503.489 614.908 cv
500.61 620.038 498.821 626.455 498.821 631.615 cv
498.821 653.228 li
.596078 .415686 .219608 rgb
f
498.821 654.938 mo
494.853 654.938 li
494.853 653.228 li
498.821 653.228 li
498.821 654.938 li
.537255 .372549 .196078 rgb
f
503.217 719.582 mo
499.248 719.582 li
498.348 716.809 li
497.939 716.809 li
501.909 716.809 li
502.317 716.809 li
503.217 719.582 li
.701961 .588235 .4 rgb
f
500.789 724.188 mo
496.819 724.188 li
496.819 722.796 li
496.819 722.43 li
496.819 721.802 497.322 721.299 497.95 721.299 cv
499.731 721.299 li
499.813 721.299 li
503.782 721.299 li
501.919 721.299 li
501.291 721.299 500.789 721.802 500.789 722.43 cv
500.789 722.796 li
500.789 724.188 li
.772549 .658823 .470588 rgb
f
501.919 725.894 mo
497.95 725.894 li
497.322 725.894 496.819 725.393 496.819 724.764 cv
496.819 724.188 li
500.789 724.188 li
500.789 724.764 li
500.789 725.393 501.291 725.894 501.919 725.894 cv
.709804 .611765 .443137 rgb
f
503.782 721.299 mo
499.813 721.299 li
499.248 719.582 li
503.217 719.582 li
503.782 721.299 li
.65098 .54902 .380392 rgb
f
501.909 715.092 mo
497.939 715.092 li
497.939 658.93 li
497.939 654.941 li
501.857 654.941 li
501.909 654.941 li
501.909 658.93 li
501.909 715.092 li
.701961 .54902 .305882 rgb
f
501.909 716.809 mo
497.939 716.809 li
497.939 715.092 li
501.909 715.092 li
501.909 716.809 li
.65098 .513725 .298039 rgb
f
496.819 724.188 mo
496.737 724.188 li
496.737 722.43 li
496.737 721.802 497.24 721.299 497.868 721.299 cv
497.95 721.299 li
497.322 721.299 496.819 721.802 496.819 722.43 cv
496.819 722.796 li
496.819 724.188 li
.658823 .568627 .415686 rgb
f
497.95 725.894 mo
497.868 725.894 li
497.24 725.894 496.737 725.393 496.737 724.764 cv
496.737 724.188 li
496.819 724.188 li
496.819 724.764 li
496.819 725.393 497.322 725.894 497.95 725.894 cv
.607843 .529412 .396078 rgb
f
499.248 719.582 mo
499.166 719.582 li
498.266 716.809 li
497.857 716.809 li
497.939 716.809 li
498.348 716.809 li
499.248 719.582 li
.6 .509804 .360784 rgb
f
499.813 721.299 mo
499.731 721.299 li
499.166 719.582 li
499.248 719.582 li
499.813 721.299 li
.560784 .478431 .345098 rgb
f
497.939 715.092 mo
497.857 715.092 li
497.857 654.941 li
497.939 654.941 li
497.939 658.93 li
497.939 715.092 li
.6 .478431 .286274 rgb
f
497.939 716.809 mo
497.857 716.809 li
497.857 715.092 li
497.939 715.092 li
497.939 716.809 li
.560784 .45098 .278431 rgb
f
502.861 653.228 mo
498.894 653.228 li
498.894 631.615 li
498.894 626.455 500.684 620.038 503.573 614.908 cv
503.678 614.72 503.783 614.542 503.887 614.364 cv
503.887 614.364 li
505.405 613.526 507.017 613.045 508.692 613.034 cv
508.294 613.631 507.907 614.26 507.54 614.908 cv
504.651 620.038 502.861 626.455 502.861 631.615 cv
502.861 653.228 li
.796078 .615686 .419608 rgb
f
502.861 654.938 mo
498.821 654.938 li
498.894 654.938 li
498.894 653.228 li
502.861 653.228 li
502.861 654.938 li
.737255 .572549 .396078 rgb
f
498.894 653.228 mo
498.821 653.228 li
498.821 631.615 li
498.821 626.455 500.61 620.038 503.489 614.908 cv
503.584 614.751 503.667 614.584 503.772 614.427 cv
503.887 614.364 li
503.783 614.542 503.678 614.72 503.573 614.908 cv
500.684 620.038 498.894 626.455 498.894 631.615 cv
498.894 653.228 li
.678431 .533333 .376471 rgb
f
498.894 654.938 mo
498.821 654.938 li
498.821 653.228 li
498.894 653.228 li
498.894 654.938 li
.631373 .498039 .356863 rgb
f
518.918 719.582 mo
514.866 719.582 li
515.767 716.809 li
516.175 716.809 li
520.226 716.809 li
519.818 716.809 li
518.918 719.582 li
.815686 .745098 .627451 rgb
f
521.346 724.188 mo
517.295 724.188 li
517.295 722.796 li
517.295 722.43 li
517.295 721.802 516.792 721.299 516.165 721.299 cv
514.301 721.299 li
518.352 721.299 li
520.216 721.299 li
520.844 721.299 521.346 721.802 521.346 722.43 cv
521.346 724.188 li
.858823 .788235 .670588 rgb
f
520.216 725.894 mo
516.165 725.894 li
516.792 725.894 517.295 725.393 517.295 724.764 cv
517.295 724.188 li
521.346 724.188 li
521.346 724.764 li
521.346 725.393 520.844 725.894 520.216 725.894 cv
.819608 .756863 .65098 rgb
f
518.352 721.299 mo
514.301 721.299 li
514.866 719.582 li
518.918 719.582 li
518.352 721.299 li
.784314 .717647 .611765 rgb
f
520.226 715.092 mo
516.175 715.092 li
516.175 658.93 li
516.175 654.941 li
516.227 654.941 li
520.226 654.941 li
520.226 715.092 li
.815686 .717647 .568627 rgb
f
520.226 716.809 mo
516.175 716.809 li
516.175 715.092 li
520.226 715.092 li
520.226 716.809 li
.784314 .698039 .560784 rgb
f
520.207 653.228 mo
516.166 653.228 li
516.166 631.615 li
516.166 626.455 514.376 620.038 511.487 614.908 cv
511.163 614.322 510.817 613.757 510.451 613.213 cv
510.911 613.296 511.372 613.411 511.822 613.568 cv
513.392 614.113 514.879 615.055 516.25 616.269 cv
518.71 621.137 520.207 626.905 520.207 631.615 cv
520.207 653.228 li
.87451 .760784 .639216 rgb
f
520.207 654.938 mo
516.166 654.938 li
516.166 653.228 li
520.207 653.228 li
520.207 654.938 li
.835294 .733333 .623529 rgb
f
455.447 495.229 mo
455.447 534.443 li
428.036 534.443 li
428.036 495.229 li
428.036 492.539 429.551 482.736 432.005 473.597 cv
433.52 467.943 435.395 462.549 437.489 459.244 cv
437.6 459.074 li
438.085 458.319 438.589 457.685 439.099 457.19 cv
439.779 456.525 440.479 456.104 441.189 455.99 cv
441.324 455.965 441.464 455.955 441.604 455.955 cv
441.879 455.955 li
442.189 455.955 442.504 456.015 442.809 456.125 cv
442.918 456.165 443.024 456.21 443.129 456.265 cv
443.639 456.514 444.139 456.915 444.628 457.435 cv
444.628 457.439 li
445.138 457.984 445.638 458.665 446.129 459.459 cv
446.333 459.789 446.533 460.144 446.734 460.514 cv
451.833 469.943 455.447 491.08 455.447 495.229 cv
.745098 .521569 .27451 rgb
f
450.163 532.5 mo
447.163 532.5 li
447.163 485.115 li
447.163 481.561 445.488 468.098 442.809 456.125 cv
442.918 456.165 443.024 456.21 443.129 456.265 cv
443.639 456.514 444.139 456.915 444.628 457.435 cv
444.628 457.439 li
444.628 457.439 li
445.138 457.984 445.638 458.665 446.129 459.459 cv
446.333 459.789 446.533 460.144 446.734 460.514 cv
448.868 471.207 450.163 481.991 450.163 485.115 cv
450.163 532.5 li
.87451 .760784 .639216 rgb
f
433.805 532.5 mo
430.806 532.5 li
430.806 485.115 li
430.806 483.316 431.235 478.986 432.005 473.597 cv
433.52 467.943 435.395 462.549 437.489 459.244 cv
437.44 459.494 li
437.365 459.859 437.294 460.214 437.22 460.579 cv
437.149 460.939 437.08 461.304 437.01 461.664 cv
436.085 466.418 435.335 471.132 434.79 475.127 cv
434.74 475.516 434.685 475.902 434.64 476.277 cv
434.495 477.377 434.37 478.411 434.26 479.366 cv
434.225 479.681 434.19 479.986 434.16 480.281 cv
434.1 480.826 434.05 481.326 434.01 481.806 cv
433.995 481.936 433.985 482.076 433.975 482.201 cv
433.96 482.326 li
433.945 482.516 433.93 482.691 433.92 482.866 cv
433.915 482.906 li
433.905 483.001 433.9 483.096 433.895 483.181 cv
433.835 483.98 433.805 484.636 433.805 485.115 cv
433.805 532.5 li
.596078 .415686 .219608 rgb
f
436.805 532.5 mo
433.805 532.5 li
433.805 485.115 li
433.805 484.636 433.835 483.98 433.895 483.181 cv
433.9 483.096 433.905 483.001 433.915 482.906 cv
433.92 482.866 li
433.93 482.691 433.945 482.516 433.96 482.326 cv
433.975 482.201 li
433.985 482.076 433.995 481.936 434.01 481.806 cv
434.05 481.326 434.1 480.826 434.16 480.281 cv
434.19 479.986 434.225 479.681 434.26 479.366 cv
434.37 478.411 434.495 477.377 434.64 476.277 cv
434.685 475.902 434.74 475.516 434.79 475.127 cv
435.335 471.132 436.085 466.418 437.01 461.664 cv
437.08 461.304 437.149 460.939 437.22 460.579 cv
437.294 460.214 437.365 459.859 437.44 459.494 cv
437.489 459.244 li
437.6 459.074 li
438.085 458.319 438.589 457.685 439.099 457.19 cv
439.779 456.525 440.479 456.104 441.189 455.99 cv
438.494 467.993 436.805 481.546 436.805 485.115 cv
436.805 532.5 li
.796078 .615686 .419608 rgb
f
462.875 581.258 mo
462.875 715.006 li
462.875 715.326 462.621 715.599 462.321 715.599 cv
421.161 715.599 li
420.85 715.599 420.607 715.326 420.607 715.006 cv
420.607 581.258 li
462.875 581.258 li
.627451 .435294 .133333 rgb
f
462.391 715.599 mo
461.438 718.742 li
460.842 720.687 li
460.322 722.384 li
423.161 722.384 li
422.641 720.687 li
422.045 718.742 li
421.092 715.599 li
462.391 715.599 li
.627451 .486275 .25098 rgb
f
463.973 721.969 mo
463.973 724.613 li
463.973 725.325 463.432 725.894 462.78 725.894 cv
420.703 725.894 li
420.04 725.894 419.51 725.325 419.51 724.613 cv
419.51 721.969 li
419.51 721.257 420.04 720.687 420.703 720.687 cv
462.78 720.687 li
463.432 720.687 463.973 721.257 463.973 721.969 cv
.713726 .572549 .337255 rgb
f
462.78 725.894 mo
454.747 725.894 li
455.459 725.894 456.028 725.325 456.028 724.613 cv
456.028 723.961 li
463.973 723.961 li
463.973 724.613 li
463.973 725.325 463.432 725.894 462.78 725.894 cv
450.157 725.894 mo
434.015 725.894 li
433.304 725.894 432.735 725.325 432.735 724.613 cv
432.735 723.961 li
451.438 723.961 li
451.438 724.613 li
451.438 725.325 450.869 725.894 450.157 725.894 cv
424.928 725.894 mo
420.703 725.894 li
420.04 725.894 419.51 725.325 419.51 724.613 cv
419.51 723.961 li
423.647 723.961 li
423.647 724.613 li
423.647 725.325 424.216 725.894 424.928 725.894 cv
.639216 .513725 .301961 rgb
f
460.842 720.687 mo
452.636 720.687 li
453.276 718.742 li
461.438 718.742 li
460.842 720.687 li
448.046 720.687 mo
436.127 720.687 li
435.486 718.742 li
448.686 718.742 li
448.046 720.687 li
.564706 .435294 .223529 rgb
f
427.039 720.687 mo
422.641 720.687 li
422.045 718.742 li
426.398 718.742 li
427.039 720.687 li
f
462.875 581.261 mo
420.607 581.261 li
425.986 566.023 li
457.497 566.023 li
462.875 581.261 li
.627451 .486275 .25098 rgb
f
429.414 581.258 mo
424.917 581.258 li
429.201 566.023 li
432.62 566.023 li
429.414 581.258 li
.501961 .388235 .2 rgb
f
454.807 581.261 mo
454.759 581.261 li
454.759 581.258 li
450.228 581.258 li
450.169 581.258 li
450.169 581.261 li
450.152 581.261 li
448.023 566.023 li
451.442 566.023 li
454.807 581.261 li
.815686 .745098 .627451 rgb
f
434.004 581.258 mo
429.414 581.258 li
432.62 566.023 li
436.045 566.023 li
434.004 581.258 li
.701961 .588235 .4 rgb
f
462.321 715.599 mo
454.759 715.599 li
454.759 713.653 li
462.875 713.653 li
462.875 715.006 li
462.875 715.326 462.621 715.599 462.321 715.599 cv
450.169 715.599 mo
434.004 715.599 li
434.004 713.653 li
450.169 713.653 li
450.169 715.599 li
.564706 .392157 .121569 rgb
f
424.916 715.599 mo
421.161 715.599 li
420.85 715.599 420.607 715.326 420.607 715.006 cv
420.607 713.653 li
424.916 713.653 li
424.916 715.599 li
f
430.896 718.742 mo
426.398 718.742 li
425.378 715.599 li
424.916 715.599 li
429.414 715.599 li
429.876 715.599 li
430.896 718.742 li
.501961 .388235 .2 rgb
f
428.144 723.961 mo
423.647 723.961 li
423.647 721.969 li
423.647 721.257 424.216 720.687 424.928 720.687 cv
427.039 720.687 li
431.537 720.687 li
429.518 720.687 li
429.518 720.687 li
429.425 720.687 li
428.713 720.687 428.144 721.257 428.144 721.969 cv
428.144 723.961 li
.572549 .458824 .270588 rgb
f
429.425 725.894 mo
424.928 725.894 li
424.216 725.894 423.647 725.325 423.647 724.613 cv
423.647 723.961 li
428.144 723.961 li
428.144 724.613 li
428.144 725.325 428.713 725.894 429.425 725.894 cv
.509804 .411765 .243137 rgb
f
431.537 720.687 mo
427.039 720.687 li
426.398 718.742 li
430.896 718.742 li
431.537 720.687 li
.45098 .34902 .180392 rgb
f
429.414 713.653 mo
424.916 713.653 li
424.916 581.258 li
424.916 581.261 li
429.414 581.261 li
429.414 713.653 li
.501961 .34902 .105882 rgb
f
429.414 581.261 mo
424.916 581.261 li
429.414 581.258 li
429.447 581.258 li
429.414 581.258 li
.501961 .388235 .2 rgb
f
424.916 581.261 mo
424.916 581.261 li
424.916 581.258 li
424.917 581.258 li
424.916 581.261 li
f
424.916 581.261 mo
424.916 581.261 li
424.917 581.258 li
429.414 581.258 li
424.916 581.261 li
.4 .309804 .160784 rgb
f
429.414 715.599 mo
424.916 715.599 li
424.916 713.653 li
429.414 713.653 li
429.414 715.599 li
.45098 .313725 .0980392 rgb
f
434.004 713.653 mo
429.506 713.653 li
429.506 585.778 li
429.447 581.261 li
434.004 581.261 li
434.004 585.778 li
434.004 713.653 li
.701961 .54902 .305882 rgb
f
435.486 718.742 mo
430.989 718.742 li
429.969 715.599 li
429.506 715.599 li
434.004 715.599 li
434.466 715.599 li
435.486 718.742 li
.701961 .588235 .4 rgb
f
432.735 723.961 mo
428.237 723.961 li
428.237 722.384 li
428.237 721.969 li
428.237 721.257 428.807 720.687 429.518 720.687 cv
431.537 720.687 li
431.629 720.687 li
436.127 720.687 li
434.015 720.687 li
433.304 720.687 432.735 721.257 432.735 721.969 cv
432.735 722.384 li
432.735 723.961 li
.772549 .658823 .470588 rgb
f
434.015 725.894 mo
429.518 725.894 li
428.807 725.894 428.237 725.325 428.237 724.613 cv
428.237 723.961 li
432.735 723.961 li
432.735 724.613 li
432.735 725.325 433.304 725.894 434.015 725.894 cv
.709804 .611765 .443137 rgb
f
436.127 720.687 mo
431.629 720.687 li
430.989 718.742 li
435.486 718.742 li
436.127 720.687 li
.65098 .54902 .380392 rgb
f
434.004 581.261 mo
429.447 581.261 li
429.447 581.258 li
433.944 581.258 li
434.004 581.258 li
434.004 581.261 li
.701961 .588235 .4 rgb
f
434.004 715.599 mo
429.506 715.599 li
429.506 713.653 li
434.004 713.653 li
434.004 715.599 li
.65098 .513725 .298039 rgb
f
430.989 718.742 mo
430.896 718.742 li
429.876 715.599 li
429.414 715.599 li
429.506 715.599 li
429.969 715.599 li
430.989 718.742 li
.6 .509804 .360784 rgb
f
428.237 723.961 mo
428.144 723.961 li
428.144 721.969 li
428.144 721.257 428.713 720.687 429.425 720.687 cv
429.518 720.687 li
428.807 720.687 428.237 721.257 428.237 721.969 cv
428.237 722.384 li
428.237 723.961 li
.658823 .568627 .415686 rgb
f
429.518 725.894 mo
429.425 725.894 li
428.713 725.894 428.144 725.325 428.144 724.613 cv
428.144 723.961 li
428.237 723.961 li
428.237 724.613 li
428.237 725.325 428.807 725.894 429.518 725.894 cv
.607843 .529412 .396078 rgb
f
431.629 720.687 mo
431.537 720.687 li
430.896 718.742 li
430.989 718.742 li
431.629 720.687 li
.560784 .478431 .345098 rgb
f
429.506 713.653 mo
429.414 713.653 li
429.414 581.258 li
429.447 581.261 li
429.506 585.778 li
429.506 713.653 li
.6 .478431 .286274 rgb
f
429.447 581.261 mo
429.414 581.261 li
429.414 581.258 li
429.447 581.258 li
429.447 581.261 li
.6 .509804 .360784 rgb
f
429.506 715.599 mo
429.414 715.599 li
429.414 713.653 li
429.506 713.653 li
429.506 715.599 li
.560784 .45098 .278431 rgb
f
454.759 713.653 mo
450.169 713.653 li
450.169 585.778 li
450.169 581.261 li
454.759 581.261 li
454.759 713.653 li
.815686 .717647 .568627 rgb
f
453.276 718.742 mo
448.686 718.742 li
449.706 715.599 li
450.169 715.599 li
454.759 715.599 li
454.296 715.599 li
453.276 718.742 li
.815686 .745098 .627451 rgb
f
456.028 723.961 mo
451.438 723.961 li
451.438 722.384 li
451.438 721.969 li
451.438 721.257 450.869 720.687 450.157 720.687 cv
448.046 720.687 li
452.636 720.687 li
454.747 720.687 li
455.459 720.687 456.028 721.257 456.028 721.969 cv
456.028 723.961 li
.858823 .788235 .670588 rgb
f
454.747 725.894 mo
450.157 725.894 li
450.869 725.894 451.438 725.325 451.438 724.613 cv
451.438 723.961 li
456.028 723.961 li
456.028 724.613 li
456.028 725.325 455.459 725.894 454.747 725.894 cv
.819608 .756863 .65098 rgb
f
452.636 720.687 mo
448.046 720.687 li
448.686 718.742 li
453.276 718.742 li
452.636 720.687 li
.784314 .717647 .611765 rgb
f
454.759 581.261 mo
450.169 581.261 li
450.169 581.258 li
450.228 581.258 li
454.759 581.258 li
.909804 .87451 .815686 rgb
f
454.759 715.599 mo
450.169 715.599 li
450.169 713.653 li
454.759 713.653 li
454.759 715.599 li
.784314 .698039 .560784 rgb
f
455.448 534.443 mo
457.497 566.023 li
425.986 566.023 li
428.034 534.443 li
455.448 534.443 li
.627451 .435294 .133333 rgb
f
432.62 566.023 mo
432.62 566.023 li
429.201 566.023 li
430.831 534.443 li
433.806 534.443 li
432.62 566.023 li
.501961 .34902 .105882 rgb
f
436.045 566.023 mo
436.045 566.023 li
432.62 566.023 li
433.815 534.443 li
436.795 534.443 li
436.045 566.023 li
.701961 .54902 .305882 rgb
f
451.442 566.023 mo
448.023 566.023 li
447.206 534.443 li
450.181 534.443 li
451.442 566.023 li
.815686 .717647 .568627 rgb
f
455.448 534.443 mo
455.448 534.443 li
428.034 534.443 li
428.035 532.5 li
428.036 532.5 li
428.036 534.443 li
430.806 534.443 li
433.805 534.443 li
436.805 534.443 li
447.163 534.443 li
450.163 534.443 li
455.447 534.443 li
455.447 532.5 li
455.448 532.5 li
455.448 534.443 li
.898039 .898039 .898039 rgb
f
455.447 534.443 mo
450.163 534.443 li
450.163 532.5 li
455.447 532.5 li
455.447 534.443 li
447.163 534.443 mo
436.805 534.443 li
436.805 532.5 li
447.163 532.5 li
447.163 534.443 li
430.806 534.443 mo
428.036 534.443 li
428.036 532.5 li
430.806 532.5 li
430.806 534.443 li
.670588 .466667 .247059 rgb
f
450.163 534.443 mo
447.163 534.443 li
447.163 532.5 li
450.163 532.5 li
450.163 534.443 li
.784314 .682353 .572549 rgb
f
433.805 534.443 mo
430.806 534.443 li
430.806 532.5 li
433.805 532.5 li
433.805 534.443 li
.537255 .372549 .196078 rgb
f
436.805 534.443 mo
433.805 534.443 li
433.805 532.5 li
436.805 532.5 li
436.805 534.443 li
.713725 .552941 .376471 rgb
f
455.448 534.443 mo
450.181 534.443 li
447.206 534.443 li
436.795 534.443 li
433.815 534.443 li
433.806 534.443 li
430.831 534.443 li
428.035 534.443 li
455.448 534.443 li
.564706 .392157 .121569 rgb
f
438.702 1068.08 mo
509.165 1068.08 li
509.165 898.293 li
438.702 898.293 li
438.702 1068.08 li
1 .454902 .0862745 rgb
f
438.702 1118.91 mo
509.165 1118.91 li
509.165 1088.32 li
438.702 1088.32 li
438.702 1118.91 li
f
435.77 1088.32 mo
512.098 1088.32 li
512.098 1068.08 li
435.77 1068.08 li
435.77 1088.32 li
1 .176471 0 rgb
f
495.211 892.506 mo
453.912 892.506 li
459.168 877.617 li
489.956 877.617 li
495.211 892.506 li
.686275 .533333 .419608 rgb
f
462.692 891.672 mo
458.356 891.672 li
462.308 877.617 li
462.344 877.617 li
465.65 877.617 li
462.692 891.672 li
.54902 .427451 .337255 rgb
f
487.143 891.672 mo
482.663 891.672 li
480.699 877.617 li
480.703 877.617 li
480.703 877.618 li
484.009 877.618 li
484.041 877.617 li
487.143 891.672 li
.843137 .768627 .709804 rgb
f
467.113 891.672 mo
462.692 891.672 li
465.65 877.617 li
465.65 877.617 li
465.65 877.618 li
468.956 877.618 li
468.996 877.617 li
467.113 891.672 li
.74902 .627451 .537255 rgb
f
441.035 891.764 mo
443.866 888.697 li
446.65 891.713 li
441.035 891.764 li
cp
.756863 .619608 .505882 rgb
f
447.73 891.764 mo
450.562 888.697 li
453.345 891.713 li
447.73 891.764 li
cp
f
454.426 891.764 mo
457.257 888.697 li
460.041 891.713 li
454.426 891.764 li
cp
f
461.122 891.764 mo
463.953 888.697 li
466.737 891.713 li
461.122 891.764 li
cp
f
467.818 891.764 mo
470.649 888.697 li
473.433 891.713 li
467.818 891.764 li
cp
f
474.514 891.764 mo
477.345 888.697 li
480.128 891.713 li
474.514 891.764 li
cp
f
481.209 891.764 mo
484.041 888.697 li
486.824 891.713 li
481.209 891.764 li
cp
f
487.905 891.764 mo
490.736 888.697 li
493.52 891.713 li
487.905 891.764 li
cp
f
494.601 891.764 mo
497.432 888.697 li
500.216 891.713 li
494.601 891.764 li
cp
f
501.296 891.764 mo
504.127 888.697 li
506.912 891.713 li
501.296 891.764 li
cp
f
480.554 816.139 mo
468.569 816.139 li
468.569 808.26 li
480.554 808.26 li
480.554 816.139 li
f
480.551 808.256 mo
468.564 808.256 li
472.922 776.42 li
473.226 774.2 li
473.646 771.14 li
473.682 770.836 473.903 770.648 474.161 770.59 cv
474.207 770.578 li
474.441 770.578 li
474.569 770.59 li
474.663 770.613 474.745 770.648 474.814 770.707 cv
474.955 770.789 475.06 770.94 475.095 771.14 cv
480.551 808.256 li
.788235 .67451 .572549 rgb
f
477.817 808.256 mo
475.784 808.256 li
474.569 770.59 li
474.663 770.613 474.745 770.648 474.814 770.707 cv
477.817 808.256 li
.894118 .839216 .788235 rgb
f
462.517 841.046 mo
486.328 841.046 li
487.519 877.617 li
461.326 877.617 li
462.517 841.046 li
.756863 .619608 .505882 rgb
f
467.517 816.139 mo
481.328 816.139 li
486.328 841.046 li
462.517 841.046 li
467.517 816.139 li
.788235 .67451 .572549 rgb
f
477.817 808.26 mo
475.79 808.26 li
475.79 808.256 li
477.817 808.256 li
477.817 808.26 li
1 1 1 rgb
f
477.817 816.139 mo
475.79 816.139 li
475.79 808.26 li
477.817 808.26 li
477.817 816.139 li
.878431 .811765 .752941 rgb
f
477.817 816.142 mo
475.79 816.142 li
475.79 816.139 li
477.817 816.139 li
477.817 816.142 li
.894118 .839216 .788235 rgb
f
484.009 877.618 mo
480.703 877.618 li
484.009 877.617 li
484.009 877.618 li
.921569 .886274 .854902 rgb
f
484.009 877.617 mo
480.703 877.617 li
479.511 841.05 li
482.817 841.05 li
484.009 877.618 li
.878431 .811765 .752941 rgb
f
482.817 841.05 mo
479.511 841.05 li
479.511 841.046 li
482.816 841.046 li
482.817 841.05 li
f
482.816 841.046 mo
479.511 841.046 li
475.79 816.142 li
477.817 816.142 li
482.816 841.046 li
.894118 .839216 .788235 rgb
f
471.018 808.256 mo
469.265 808.256 li
469.265 808.256 471.649 787.273 472.922 776.42 cv
473.226 774.2 li
473.646 771.14 li
473.682 770.836 473.903 770.648 474.161 770.59 cv
471.018 808.256 li
.709804 .603922 .513725 rgb
f
471.019 808.26 mo
469.267 808.26 li
469.267 808.256 li
471.018 808.256 li
471.023 808.256 li
471.019 808.256 li
471.019 808.26 li
.898039 .898039 .898039 rgb
f
471.019 816.139 mo
469.024 816.139 li
469.267 808.26 li
471.019 808.26 li
471.019 816.139 li
.678431 .556863 .454902 rgb
f
471.019 816.142 mo
469.024 816.142 li
469.024 816.139 li
471.019 816.139 li
471.019 816.142 li
.709804 .603922 .513725 rgb
f
465.65 877.617 mo
465.65 877.617 li
462.344 877.617 li
463.535 841.05 li
466.841 841.05 li
465.65 877.617 li
.678431 .556863 .454902 rgb
f
466.841 841.05 mo
466.841 841.05 li
463.535 841.05 li
463.536 841.046 li
466.842 841.046 li
466.841 841.05 li
f
466.842 841.046 mo
463.536 841.046 li
469.024 816.142 li
471.019 816.142 li
466.842 841.046 li
.709804 .603922 .513725 rgb
f
473.051 808.256 mo
471.018 808.256 li
474.207 770.578 li
474.441 770.578 li
473.051 808.256 li
.894118 .839216 .788235 rgb
f
473.047 808.26 mo
471.023 808.26 li
471.023 808.256 li
473.047 808.256 li
473.047 808.26 li
1 1 1 rgb
f
473.047 816.139 mo
471.023 816.139 li
471.023 808.26 li
473.047 808.26 li
473.047 816.139 li
.878431 .811765 .752941 rgb
f
473.047 816.142 mo
473.047 816.142 li
471.019 816.142 li
471.023 816.142 li
471.023 816.139 li
473.047 816.139 li
473.047 816.142 li
.894118 .839216 .788235 rgb
f
471.023 808.26 mo
471.019 808.26 li
471.019 808.256 li
471.023 808.256 li
471.023 808.26 li
.94902 .94902 .94902 rgb
f
471.023 816.139 mo
471.019 816.139 li
471.019 808.26 li
471.023 808.26 li
471.023 816.139 li
.839216 .780392 .729412 rgb
f
471.023 816.142 mo
471.019 816.142 li
471.019 816.139 li
471.023 816.139 li
471.023 816.142 li
.854902 .803922 .756863 rgb
f
468.956 877.618 mo
465.65 877.618 li
468.956 877.617 li
468.956 877.618 li
.87451 .815686 .768627 rgb
f
468.956 877.617 mo
465.65 877.617 li
466.841 841.05 li
470.148 841.05 li
468.956 877.618 li
.878431 .811765 .752941 rgb
f
470.148 841.05 mo
470.148 841.05 li
466.841 841.05 li
466.842 841.046 li
470.148 841.046 li
470.148 841.05 li
f
470.148 841.046 mo
466.842 841.046 li
471.019 816.142 li
471.019 816.142 li
473.047 816.142 li
470.148 841.046 li
.894118 .839216 .788235 rgb
f
473.047 816.142 mo
471.019 816.142 li
471.019 816.142 li
473.047 816.142 li
.94902 .921569 .894118 rgb
f
438.702 911.317 mo
509.165 911.317 li
509.165 908.429 li
438.702 908.429 li
438.702 911.317 li
.819608 .32549 .203922 rgb
f
438.702 902.947 mo
509.165 902.947 li
509.165 898.293 li
438.702 898.293 li
438.702 902.947 li
.717647 .384314 .235294 rgb
f
509.163 898.297 mo
438.703 898.297 li
439.451 895.972 li
440.817 891.672 li
507.048 891.672 li
508.414 895.972 li
509.163 898.297 li
.788235 .67451 .572549 rgb
f
509.165 1068.08 mo
496.324 1068.08 li
496.324 1064.62 li
509.165 1064.62 li
509.165 1068.08 li
1 .564706 .270588 rgb
f
489.945 1068.08 mo
464.697 1068.08 li
464.697 1064.62 li
489.945 1064.62 li
489.945 1068.08 li
458.33 1068.08 mo
458.283 1068.08 li
458.283 1064.62 li
458.33 1064.62 li
458.33 1068.08 li
f
451.916 1068.08 mo
438.702 1068.08 li
438.702 1064.62 li
451.916 1064.62 li
451.916 1068.08 li
f
509.165 1091.78 mo
496.324 1091.78 li
496.324 1088.32 li
499.256 1088.32 li
499.256 1088.32 li
509.165 1088.32 li
509.165 1091.78 li
489.945 1091.78 mo
464.697 1091.78 li
464.697 1088.32 li
461.764 1088.32 li
461.764 1088.32 li
492.877 1088.32 li
492.877 1088.32 li
489.945 1088.32 li
489.945 1091.78 li
458.33 1091.78 mo
458.283 1091.78 li
458.283 1088.32 li
458.33 1088.32 li
458.33 1091.78 li
451.916 1091.78 mo
438.702 1091.78 li
438.702 1088.32 li
448.972 1088.32 li
448.972 1088.32 li
451.916 1088.32 li
451.916 1091.78 li
455.385 1088.32 mo
455.351 1088.32 li
455.351 1088.32 li
455.385 1088.32 li
455.385 1088.32 li
.8 .364706 .0705882 rgb
f
446.73 952.856 mo
502.394 952.856 li
502.394 948.919 li
446.73 948.919 li
446.73 952.856 li
.717647 .384314 .235294 rgb
f
446.73 976.081 mo
502.394 976.081 li
502.394 974.113 li
446.73 974.113 li
446.73 976.081 li
f
471.626 966.802 mo
477.104 966.802 li
477.104 958.985 li
471.626 958.985 li
471.626 966.802 li
cp
f
481.665 966.802 mo
487.142 966.802 li
487.142 958.985 li
481.665 958.985 li
481.665 966.802 li
cp
f
461.588 966.802 mo
467.065 966.802 li
467.065 958.985 li
461.588 958.985 li
461.588 966.802 li
f
496.324 1064.62 mo
489.945 1064.62 li
489.945 976.081 li
496.324 976.081 li
496.324 1064.62 li
496.324 974.113 mo
489.945 974.113 li
489.945 952.856 li
496.324 952.856 li
496.324 974.113 li
496.324 948.919 mo
489.945 948.919 li
489.945 911.317 li
496.324 911.317 li
496.324 948.919 li
496.324 908.429 mo
489.945 908.429 li
489.945 902.947 li
496.324 902.947 li
496.324 908.429 li
1 .729412 .545098 rgb
f
496.324 911.317 mo
489.945 911.317 li
489.945 908.429 li
496.324 908.429 li
496.324 911.317 li
.909804 .662745 .603922 rgb
f
496.324 902.947 mo
489.945 902.947 li
489.945 898.297 li
496.324 898.297 li
496.324 902.947 li
.858823 .694118 .619608 rgb
f
496.324 1068.08 mo
489.945 1068.08 li
489.945 1064.62 li
496.324 1064.62 li
496.324 1068.08 li
1 .784314 .635294 rgb
f
496.324 952.856 mo
489.945 952.856 li
489.945 948.919 li
496.324 948.919 li
496.324 952.856 li
.858823 .694118 .619608 rgb
f
496.324 976.081 mo
489.945 976.081 li
489.945 974.113 li
496.324 974.113 li
496.324 976.081 li
f
496.324 1114.29 mo
489.945 1114.29 li
489.945 1091.78 li
496.324 1091.78 li
496.324 1114.29 li
1 .729412 .545098 rgb
f
496.324 1091.78 mo
489.945 1091.78 li
489.945 1088.32 li
492.877 1088.32 li
496.324 1088.32 li
496.324 1091.78 li
.901961 .682353 .537255 rgb
f
499.256 1088.32 mo
492.877 1088.32 li
492.877 1068.08 li
499.256 1068.08 li
499.256 1088.32 li
1 .588235 .501961 rgb
f
499.256 1088.32 mo
496.324 1088.32 li
492.877 1088.32 li
492.877 1088.32 li
499.256 1088.32 li
499.256 1088.32 li
.901961 .682353 .537255 rgb
f
458.283 1064.62 mo
451.916 1064.62 li
451.916 976.081 li
458.283 976.081 li
458.283 1064.62 li
458.283 974.113 mo
451.916 974.113 li
451.916 952.856 li
458.283 952.856 li
458.283 974.113 li
458.283 948.919 mo
451.916 948.919 li
451.916 911.317 li
458.283 911.317 li
458.283 948.919 li
458.283 908.429 mo
451.916 908.429 li
451.916 902.947 li
458.283 902.947 li
458.283 908.429 li
.8 .364706 .0705882 rgb
f
458.283 911.317 mo
451.916 911.317 li
451.916 908.429 li
458.283 908.429 li
458.283 911.317 li
.654902 .258824 .164706 rgb
f
458.283 902.947 mo
451.916 902.947 li
451.916 898.297 li
458.283 898.297 li
458.283 902.947 li
.572549 .305882 .188235 rgb
f
458.283 1068.08 mo
451.916 1068.08 li
451.916 1064.62 li
458.283 1064.62 li
458.283 1068.08 li
.8 .45098 .215686 rgb
f
458.283 952.856 mo
451.916 952.856 li
451.916 948.919 li
458.283 948.919 li
458.283 952.856 li
.572549 .305882 .188235 rgb
f
458.283 976.081 mo
451.916 976.081 li
451.916 974.113 li
458.283 974.113 li
458.283 976.081 li
f
458.283 1114.29 mo
451.916 1114.29 li
451.916 1091.78 li
458.283 1091.78 li
458.283 1114.29 li
.8 .364706 .0705882 rgb
f
458.283 1091.78 mo
451.916 1091.78 li
451.916 1088.32 li
455.351 1088.32 li
455.385 1088.32 li
458.283 1088.32 li
458.283 1091.78 li
.639216 .290196 .054902 rgb
f
455.351 1088.32 mo
448.972 1088.32 li
448.972 1068.08 li
455.351 1068.08 li
455.351 1088.32 li
.8 .141176 0 rgb
f
455.351 1088.32 mo
451.916 1088.32 li
448.972 1088.32 li
448.972 1088.32 li
455.351 1088.32 li
455.351 1088.32 li
.639216 .290196 .054902 rgb
f
464.697 1064.62 mo
458.33 1064.62 li
458.33 976.081 li
464.697 976.081 li
464.697 1064.62 li
464.697 974.113 mo
458.33 974.113 li
458.33 952.856 li
464.697 952.856 li
464.697 958.985 li
461.588 958.985 li
461.588 966.802 li
464.697 966.802 li
464.697 974.113 li
464.697 948.919 mo
458.33 948.919 li
458.33 911.317 li
464.697 911.317 li
464.697 948.919 li
464.697 908.429 mo
458.33 908.429 li
458.33 902.947 li
464.697 902.947 li
464.697 908.429 li
1 .564706 .270588 rgb
f
464.697 911.317 mo
458.33 911.317 li
458.33 908.429 li
464.697 908.429 li
464.697 911.317 li
.854902 .458824 .364706 rgb
f
464.697 902.947 mo
458.33 902.947 li
458.33 898.297 li
464.697 898.297 li
464.697 902.947 li
.772549 .505882 .388235 rgb
f
464.697 1068.08 mo
458.33 1068.08 li
458.33 1064.62 li
464.697 1064.62 li
464.697 1068.08 li
1 .65098 .415686 rgb
f
464.697 952.856 mo
458.33 952.856 li
458.33 948.919 li
464.697 948.919 li
464.697 952.856 li
.772549 .505882 .388235 rgb
f
464.697 976.081 mo
458.33 976.081 li
458.33 974.113 li
464.697 974.113 li
464.697 976.081 li
f
464.697 966.802 mo
461.588 966.802 li
461.588 958.985 li
464.697 958.985 li
464.697 966.802 li
f
464.697 1114.29 mo
458.33 1114.29 li
458.33 1091.78 li
464.697 1091.78 li
464.697 1114.29 li
1 .564706 .270588 rgb
f
464.697 1091.78 mo
458.33 1091.78 li
458.33 1088.32 li
461.764 1088.32 li
464.697 1088.32 li
464.697 1091.78 li
.839216 .490196 .254902 rgb
f
461.764 1088.32 mo
455.385 1088.32 li
455.385 1068.08 li
461.764 1068.08 li
461.764 1088.32 li
1 .341176 .2 rgb
f
461.764 1088.32 mo
458.33 1088.32 li
458.283 1088.32 li
455.385 1088.32 li
455.385 1088.32 li
461.764 1088.32 li
461.764 1088.32 li
.839216 .490196 .254902 rgb
f
509.163 898.297 mo
438.703 898.297 li
439.451 895.972 li
508.414 895.972 li
509.163 898.297 li
.709804 .603922 .513725 rgb
f
509.165 1118.91 mo
496.324 1118.91 li
496.324 1114.29 li
509.165 1114.29 li
509.165 1118.91 li
489.945 1118.91 mo
464.697 1118.91 li
464.697 1114.29 li
489.945 1114.29 li
489.945 1118.91 li
458.33 1118.91 mo
458.283 1118.91 li
458.283 1114.29 li
458.33 1114.29 li
458.33 1118.91 li
451.916 1118.91 mo
438.702 1118.91 li
438.702 1114.29 li
451.916 1114.29 li
451.916 1118.91 li
.8 .364706 .0705882 rgb
f
496.324 1118.91 mo
489.945 1118.91 li
489.945 1114.29 li
496.324 1114.29 li
496.324 1118.91 li
.8 .584314 .435294 rgb
f
458.283 1118.91 mo
451.916 1118.91 li
451.916 1114.29 li
458.283 1114.29 li
458.283 1118.91 li
.639216 .290196 .054902 rgb
f
464.697 1118.91 mo
458.33 1118.91 li
458.33 1114.29 li
464.697 1114.29 li
464.697 1118.91 li
.8 .45098 .215686 rgb
f
550.886 269.321 mo
550.886 280.259 543.504 290.24 531.372 297.802 cv
524.58 302.034 516.304 305.513 506.991 307.979 cv
496.979 310.632 485.765 312.117 473.932 312.117 cv
467.006 312.117 460.3 311.606 453.916 310.648 cv
445.05 309.329 436.829 307.146 429.534 304.28 cv
419.263 300.236 410.845 294.826 405.152 288.528 cv
399.923 282.756 396.978 276.231 396.978 269.321 cv
396.978 262.411 399.923 255.885 405.152 250.114 cv
410.845 243.816 419.263 238.406 429.534 234.362 cv
432.471 233.208 435.565 232.163 438.793 231.236 cv
443.566 229.87 448.623 228.779 453.916 227.993 cv
460.3 227.035 467.006 226.525 473.932 226.525 cv
485.765 226.525 496.979 228.009 506.991 230.663 cv
507.697 230.851 508.388 231.04 509.079 231.236 cv
517.544 233.655 525.09 236.93 531.372 240.84 cv
543.504 248.402 550.886 258.382 550.886 269.321 cv
.396078 .364706 .25098 rgb
f
550.886 231.236 mo
550.886 269.321 li
396.978 269.321 li
396.978 231.236 li
550.886 231.236 li
f
429.534 304.28 mo
429.534 304.28 li
419.263 300.236 410.845 294.826 405.152 288.528 cv
405.152 276.49 li
405.152 276.49 li
410.845 282.788 419.263 288.198 429.534 292.242 cv
429.534 304.28 li
429.534 287.531 mo
419.263 283.487 410.845 278.076 405.152 271.779 cv
405.152 271.779 li
405.152 269.321 li
429.534 269.321 li
429.534 287.531 li
.317647 .290196 .2 rgb
f
429.534 269.321 mo
405.152 269.321 li
405.152 250.448 li
410.851 256.745 419.262 262.152 429.534 266.194 cv
429.534 269.321 li
f
453.916 310.648 mo
453.916 310.648 li
445.05 309.329 436.829 307.146 429.534 304.28 cv
429.534 292.242 li
429.534 292.242 li
436.829 295.108 445.05 297.291 453.916 298.61 cv
453.916 310.648 li
453.916 293.899 mo
445.05 292.579 436.829 290.396 429.534 287.531 cv
429.534 287.531 li
429.534 269.321 li
438.798 269.321 li
443.568 270.685 448.632 271.78 453.916 272.57 cv
453.916 293.899 li
.517647 .490196 .4 rgb
f
438.798 269.321 mo
429.534 269.321 li
429.534 266.194 li
432.476 267.352 435.571 268.398 438.798 269.321 cv
f
506.991 307.979 mo
506.991 295.94 li
506.991 295.94 li
516.304 293.475 524.58 289.996 531.372 285.764 cv
531.372 297.802 li
531.372 297.802 li
524.58 302.034 516.304 305.513 506.991 307.979 cv
506.991 291.229 mo
506.991 269.894 li
507.691 269.708 508.384 269.518 509.073 269.321 cv
531.372 269.321 li
531.372 281.052 li
524.58 285.285 516.304 288.764 506.991 291.229 cv
506.991 291.229 li
.698039 .682353 .627451 rgb
f
531.372 269.321 mo
509.073 269.321 li
517.538 266.9 525.093 263.632 531.372 259.718 cv
531.372 269.321 li
f
550.889 231.236 mo
550.889 207.601 516.436 188.441 473.935 188.441 cv
431.435 188.441 396.982 207.601 396.982 231.236 cv
396.982 254.872 431.435 274.032 473.935 274.032 cv
516.436 274.032 550.889 254.872 550.889 231.236 cv
.298039 .27451 .192157 rgb
f
473.936 270.106 mo
454.037 270.106 435.39 265.83 421.429 258.067 cv
408.196 250.708 400.908 241.179 400.908 231.236 cv
400.908 221.294 408.196 211.766 421.429 204.406 cv
435.39 196.643 454.037 192.367 473.936 192.367 cv
493.834 192.367 512.481 196.643 526.442 204.406 cv
539.675 211.766 546.963 221.294 546.963 231.236 cv
546.963 241.179 539.675 250.708 526.442 258.067 cv
512.481 265.83 493.834 270.106 473.936 270.106 cv
cp
.388235 .360784 .254902 rgb
f
473.936 262.646 mo
456.138 262.646 439.66 258.046 427.536 249.693 cv
418.729 243.627 413.472 236.287 413.472 230.059 cv
413.472 223.831 418.729 216.49 427.536 210.424 cv
439.66 202.071 456.138 197.471 473.936 197.471 cv
491.733 197.471 508.211 202.071 520.335 210.424 cv
529.142 216.49 534.399 223.831 534.399 230.059 cv
534.399 236.287 529.142 243.627 520.335 249.693 cv
508.211 258.046 491.733 262.646 473.936 262.646 cv
cp
.494118 .454902 .317647 rgb
f
473.936 258.755 mo
456.663 258.755 440.727 254.329 429.063 246.292 cv
419.873 239.963 416.613 233.591 416.613 230.059 cv
416.613 226.526 419.873 220.154 429.063 213.825 cv
440.727 205.788 456.663 201.362 473.936 201.362 cv
491.208 201.362 507.145 205.788 518.809 213.825 cv
527.998 220.154 531.258 226.526 531.258 230.059 cv
531.258 233.591 527.998 239.963 518.809 246.292 cv
507.145 254.329 491.208 258.755 473.936 258.755 cv
cp
.333333 .309804 .219608 rgb
f
473.936 252.569 mo
458.336 252.569 443.997 248.497 433.558 241.103 cv
429.024 237.893 423.062 233.554 424.118 227.208 cv
424.913 222.435 429.894 219.123 433.559 216.526 cv
443.997 209.133 458.336 205.062 473.936 205.062 cv
489.535 205.062 503.874 209.133 514.311 216.526 cv
518.151 219.246 523.489 222.68 524.105 227.924 cv
524.788 233.734 518.459 238.167 514.312 241.104 cv
503.875 248.497 489.535 252.569 473.936 252.569 cv
cp
.309804 .286275 .203922 rgb
f
473.936 245.895 mo
458.764 245.895 444.997 241.211 435.169 232.708 cv
435.125 232.67 li
433.145 230.953 433.145 227.854 435.126 226.137 cv
435.168 226.101 li
444.997 217.597 458.764 212.914 473.936 212.914 cv
489.106 212.914 502.874 217.597 512.702 226.1 cv
512.746 226.138 li
514.726 227.855 514.726 230.955 512.745 232.671 cv
512.703 232.708 li
502.874 241.211 489.106 245.895 473.936 245.895 cv
cp
.337255 .313726 .223529 rgb
f
456.505 216.258 mo
456.505 221.941 li
486.69 217.919 li
486.541 214.626 li
456.505 216.258 li
cp
.14902 .12549 .105882 rgb
f
466.601 221.062 mo
466.601 221.062 li
469.283 221.745 472.541 221.487 474.67 220.422 cv
479.43 218.042 487.501 220.099 486.448 223.424 cv
485.977 224.911 487.474 226.38 490.157 227.064 cv
496.155 228.593 494.738 233.067 488.089 233.593 cv
485.115 233.829 482.783 234.995 482.312 236.482 cv
481.259 239.808 472.313 240.517 469.256 237.517 cv
467.889 236.175 464.951 235.426 461.977 235.662 cv
455.328 236.188 451.216 232.152 455.976 229.771 cv
458.105 228.707 458.621 227.078 457.254 225.736 cv
454.198 222.736 460.603 219.533 466.601 221.062 cv
cp
f
453.999 223.908 mo
453.999 232.728 li
493.896 230.579 li
493.896 221.615 li
453.999 223.908 li
cp
f
503.079 217.039 mo
499.062 217.039 495.046 217.663 491.988 218.911 cv
489.301 220.007 487.76 221.437 487.76 222.831 cv
487.76 224.226 489.301 225.655 491.988 226.752 cv
498.103 229.248 508.054 229.249 514.168 226.752 cv
516.856 225.655 518.397 224.226 518.397 222.831 cv
518.397 221.437 516.856 220.007 514.168 218.911 cv
511.111 217.663 507.094 217.039 503.079 217.039 cv
cp
503.079 230.178 mo
498.847 230.178 494.616 229.521 491.395 228.206 cv
488.038 226.836 486.189 224.927 486.189 222.831 cv
486.189 220.735 488.038 218.827 491.395 217.457 cv
497.838 214.828 508.32 214.827 514.762 217.457 cv
518.119 218.827 519.967 220.735 519.967 222.831 cv
519.967 224.927 518.119 226.836 514.762 228.206 cv
511.541 229.521 507.31 230.178 503.079 230.178 cv
cp
f
550.886 257.283 mo
550.886 268.222 543.504 278.202 531.372 285.764 cv
524.58 289.996 516.304 293.475 506.991 295.94 cv
496.979 298.595 485.765 300.079 473.932 300.079 cv
467.006 300.079 460.3 299.568 453.916 298.61 cv
445.05 297.291 436.829 295.108 429.534 292.242 cv
419.263 288.198 410.845 282.788 405.152 276.49 cv
399.923 270.718 396.978 264.193 396.978 257.283 cv
397.441 257.283 li
398.454 262.45 401.124 267.334 405.152 271.779 cv
410.845 278.076 419.263 283.487 429.534 287.531 cv
436.829 290.396 445.05 292.579 453.916 293.899 cv
460.3 294.857 467.006 295.367 473.932 295.367 cv
485.765 295.367 496.979 293.883 506.991 291.229 cv
516.304 288.764 524.58 285.285 531.372 281.052 cv
541.738 274.59 548.64 266.36 550.422 257.283 cv
550.886 257.283 li
f
473.932 300.079 mo
467.006 300.079 460.3 299.568 453.916 298.61 cv
453.916 298.61 li
445.05 297.291 436.829 295.108 429.534 292.242 cv
429.534 292.242 li
429.534 292.242 li
419.263 288.198 410.845 282.788 405.152 276.49 cv
405.152 276.49 li
399.923 270.718 396.978 264.193 396.978 257.283 cv
397.057 257.283 li
397.559 263.463 400.418 269.305 405.152 274.527 cv
410.845 280.825 419.263 286.235 429.534 290.279 cv
436.829 293.145 445.05 295.328 453.916 296.648 cv
460.3 297.606 467.006 298.116 473.932 298.116 cv
485.765 298.116 496.979 296.632 506.991 293.978 cv
516.304 291.512 524.58 288.033 531.372 283.801 cv
542.774 276.694 549.983 267.452 550.807 257.283 cv
550.886 257.283 li
550.886 261.463 549.808 265.503 547.799 269.321 cv
544.551 275.496 538.869 281.091 531.372 285.764 cv
531.372 285.764 li
524.58 289.996 516.304 293.475 506.991 295.94 cv
506.991 295.94 li
496.979 298.595 485.765 300.079 473.932 300.079 cv
.576471 .564706 .552941 rgb
f
396.978 231.236 mo
396.978 231.236 li
396.978 231.214 396.978 231.193 396.978 231.171 cv
396.982 231.171 li
396.982 231.192 396.982 231.215 396.982 231.236 cv
1 1 1 rgb
f
397.017 232.539 mo
396.992 232.107 396.979 231.672 396.978 231.236 cv
396.978 231.236 li
396.982 231.236 396.982 231.236 396.982 231.236 cv
396.982 231.672 396.993 232.106 397.017 232.539 cv
.698039 .682353 .627451 rgb
f
473.932 273.967 mo
467.006 273.967 460.3 273.456 453.916 272.498 cv
445.05 271.179 436.829 268.996 429.534 266.13 cv
419.263 262.086 410.845 256.676 405.152 250.378 cv
400.269 244.989 397.378 238.942 397.017 232.539 cv
396.993 232.106 396.982 231.672 396.982 231.236 cv
396.982 231.236 li
396.982 231.215 396.982 231.192 396.982 231.171 cv
397.057 231.171 li
397.559 237.351 400.418 243.193 405.152 248.415 cv
410.845 254.712 419.263 260.123 429.534 264.167 cv
436.829 267.033 445.05 269.216 453.916 270.535 cv
460.3 271.493 467.006 272.004 473.932 272.004 cv
485.765 272.004 496.979 270.52 506.991 267.866 cv
516.304 265.4 524.58 261.921 531.372 257.688 cv
542.774 250.582 549.983 241.34 550.807 231.171 cv
550.886 231.171 li
550.886 242.109 543.504 252.09 531.372 259.652 cv
524.58 263.884 516.304 267.363 506.991 269.829 cv
496.979 272.483 485.765 273.967 473.932 273.967 cv
.65098 .639216 .596078 rgb
f
466.601 212.882 mo
466.601 212.882 li
469.283 213.565 472.541 213.308 474.67 212.243 cv
479.43 209.862 487.501 211.919 486.448 215.244 cv
485.977 216.731 487.474 218.201 490.157 218.884 cv
496.155 220.413 494.738 224.887 488.089 225.414 cv
485.115 225.649 482.783 226.816 482.312 228.303 cv
481.259 231.628 472.313 232.337 469.256 229.337 cv
467.889 227.996 464.951 227.247 461.977 227.482 cv
455.328 228.009 451.216 223.973 455.976 221.592 cv
458.105 220.527 458.621 218.898 457.254 217.557 cv
454.198 214.557 460.603 211.354 466.601 212.882 cv
cp
.270588 .239216 .211765 rgb
f
474.076 216.841 mo
471.632 216.841 469.189 217.221 467.33 217.98 cv
465.695 218.647 464.758 219.516 464.758 220.364 cv
464.758 221.213 465.695 222.082 467.33 222.749 cv
471.049 224.268 477.102 224.267 480.821 222.749 cv
482.456 222.082 483.393 221.213 483.393 220.364 cv
483.393 219.516 482.456 218.647 480.821 217.98 cv
478.961 217.221 476.519 216.841 474.076 216.841 cv
cp
474.075 224.833 mo
471.502 224.833 468.928 224.433 466.969 223.634 cv
464.927 222.8 463.803 221.639 463.803 220.364 cv
463.803 219.089 464.927 217.929 466.969 217.095 cv
470.888 215.497 477.264 215.497 481.182 217.095 cv
483.224 217.929 484.348 219.089 484.348 220.364 cv
484.348 221.639 483.224 222.8 481.182 223.634 cv
479.223 224.433 476.649 224.833 474.075 224.833 cv
cp
.14902 .12549 .105882 rgb
f
476.243 219.479 mo
475.046 218.991 473.105 218.991 471.908 219.479 cv
470.711 219.968 470.711 220.76 471.908 221.249 cv
473.105 221.737 475.046 221.737 476.243 221.249 cv
477.44 220.76 477.44 219.968 476.243 219.479 cv
cp
f
754.733 985.508 mo
730.97 993.984 li
687.878 1009.35 li
687.878 911.749 li
716.693 901.158 li
729.099 896.593 li
754.733 985.508 li
.117647 .101961 .0901961 rgb
f
853.678 911.749 mo
853.678 1009.35 li
812.289 994.583 li
786.823 985.508 li
812.477 896.593 li
826.547 901.775 li
853.678 911.749 li
f
729.099 896.593 mo
754.733 985.508 li
730.97 993.984 li
716.693 901.158 li
729.099 896.593 li
0 0 0 rgb
f
826.547 901.775 mo
812.289 994.583 li
786.823 985.508 li
812.477 896.593 li
826.547 901.775 li
f
832.574 522.015 mo
851.154 522.015 li
851.154 496.832 li
832.574 496.832 li
832.574 522.015 li
.203922 .298039 .211765 rgb
f
832.574 556.864 mo
851.154 556.864 li
851.154 531.681 li
832.574 531.681 li
832.574 556.864 li
f
771.785 1092.04 mo
781.773 1096.57 793.036 1095.4 800.867 1089.03 cv
807.364 1083.75 812.855 1073.78 809.893 1065.96 cv
806.265 1056.39 789.995 1050.14 772.287 1057.44 cv
774.034 1058.94 778.446 1063.14 779.809 1069.98 cv
782.277 1082.36 772.356 1091.53 771.785 1092.04 cv
cp
level3{
gsave
clp
[38.9316 0 0 38.9316 771.785 1074.51 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.188235 .145098 .109804 ]
/C1 [.117647 .101961 .0901961 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[38.9316 0 0 38.9316 771.785 1074.51 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~0J>(40/"t30/"t30/"t2/hSb//hSb//hSb//hJY,/M/P+/M/P+/M/P*/1`>'/1`>'/1`>'/1W5$.k<,#
.k<,#.k<,#.Olnt.Olnt.Olnt.Olkr.4H\p.4H\p.4H\p-n$Jl-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU8h
-71&d-71&d-71&d-71&c,pai`,pai`,pai`,pX`],U=W\,U=W\,U=W[,9nEX,9nEX,9nEX,9e<U+sJ3T
+sJ3T+sJ3T+X&!P+X&!P+X&!P+X%sN+<VdL+<VdL+<VdL+!2RH+!2RH+!2RH+!2OF*Zc@D*Zc@D*Zc@D
~>
<~,pX`],U=W\,U=W\,U=W\,U=W\,U=W\,9nEX,9nEX,9nEX,9nEX,9nEX,9nEW+sJ3T+sJ3T+sJ3T+sJ3T
+sJ3T+sJ0R+X&!P+X&!P+X&!P+X&!P+X&!P+X%sN+<VdL+<VdL+<VdL+<VdL+<VdL+<M[I+!2RH+!2RH
+!2RH+!2RH+!2RH*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@C*??.@*??.@*??.@*??.@*??.@*??.?*#oq<
*#oq<*#oq<*#oq<*#oq<*#on:)]K_8)]K_8)]K_8)]K_8)]K_8)]BV5)B'M4)B'M4)B'M4)B'M4)B'M4
~>
<~*#fh9)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)B'M4)B'M4)B'M4
)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M3)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0
)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X8.(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),
(`4),(`4),(`4),(`*u)(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl(
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
740.779 995.979 mo
802.554 995.979 li
797.493 1015.31 li
745.818 1015.31 li
740.779 995.979 li
.117647 .101961 .0901961 rgb
f
797.507 1015.33 mo
780.47 1094.77 li
778.737 1102.81 li
777.408 1108.91 li
775.604 1117.33 li
775.462 1118.16 774.489 1118.68 773.397 1118.84 cv
773.185 1118.86 li
772.876 1118.9 772.52 1118.94 772.188 1118.86 cv
771.974 1118.9 771.832 1118.86 771.618 1118.84 cv
771.215 1118.78 770.858 1118.68 770.574 1118.52 cv
769.957 1118.3 769.506 1117.88 769.364 1117.33 cv
764.167 1094.77 li
745.824 1015.33 li
797.507 1015.33 li
cp
f
780.47 1094.77 mo
778.737 1102.81 li
777.408 1108.91 li
775.604 1117.33 li
775.462 1118.16 774.489 1118.68 773.397 1118.84 cv
773.185 1118.86 li
772.876 1118.9 772.52 1118.94 772.188 1118.86 cv
771.974 1118.9 771.832 1118.86 771.618 1118.84 cv
771.215 1118.78 770.858 1118.68 770.574 1118.52 cv
769.957 1118.3 769.506 1117.88 769.364 1117.33 cv
764.167 1094.77 li
780.47 1094.77 li
cp
f
771.785 1054.98 mo
761.798 1050.45 750.534 1051.62 742.703 1057.99 cv
736.207 1063.27 730.716 1073.23 733.678 1081.05 cv
737.307 1090.63 753.576 1096.88 771.284 1089.58 cv
769.537 1088.08 765.125 1083.87 763.763 1077.04 cv
761.294 1064.66 771.214 1055.49 771.785 1054.98 cv
cp
level3{
gsave
clp
[-38.1239 -51.6894 51.6894 -38.1239 767.837 1088.9 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-38.1239 -51.6894 51.6894 -38.1239 767.837 1088.9 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
754.737 1092.04 mo
764.726 1096.57 775.988 1095.4 783.819 1089.03 cv
790.316 1083.75 795.807 1073.78 792.845 1065.96 cv
789.217 1056.39 772.947 1050.14 755.239 1057.44 cv
756.985 1058.94 761.398 1063.14 762.76 1069.98 cv
765.229 1082.36 755.309 1091.53 754.737 1092.04 cv
cp
level3{
gsave
clp
[23.389 39.2936 -39.2936 23.389 761.107 1057.51 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.14902 .12549 .105882 ]
/C1 [.117647 .101961 .0901961 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[23.389 39.2936 -39.2936 23.389 761.107 1057.51 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~-7'ra,pai`,pai`,pai`,pai`,pai`,pai`,pai`,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL
+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!)IE*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
~>
<~+<M[I+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RG*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc=B*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@
*?6%=*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<*#oq;)]K_8)]K_8)]K_8)]K_8)]K_8
)]K_8)]K_8)]K_8)]K_8)]K_8)]K\6)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4
~>
<~)]BV5)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4
)AsD1)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0
)&O2-(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),
(`*u)(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl(
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
778.154 1038.99 mo
788.143 1043.52 799.405 1042.35 807.236 1035.98 cv
813.732 1030.7 819.224 1020.74 816.262 1012.92 cv
812.634 1003.34 796.363 997.089 778.655 1004.39 cv
777.113 1006.73 775.475 1009.85 774.46 1013.75 cv
771.352 1025.67 776.438 1035.87 778.154 1038.99 cv
cp
level3{
gsave
clp
[-.467768 27.599 -27.599 -.467768 795.413 1011.62 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.467768 27.599 -27.599 -.467768 795.413 1011.62 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
771.785 1002.21 mo
761.798 997.682 750.534 998.854 742.703 1005.22 cv
736.207 1010.51 730.716 1020.47 733.678 1028.29 cv
737.307 1037.86 753.576 1044.12 771.284 1036.81 cv
769.537 1035.31 765.125 1031.11 763.763 1024.28 cv
761.294 1011.89 771.214 1002.73 771.785 1002.21 cv
cp
level3{
gsave
clp
[20.2704 35.8631 -35.8631 20.2704 745.773 1003.09 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[20.2704 35.8631 -35.8631 20.2704 745.773 1003.09 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
798.769 1001.52 mo
787.238 996.67 774.598 997.979 766.198 1005.22 cv
764.342 1006.82 753.99 1016.21 757.173 1028.29 cv
760.152 1039.59 772.113 1043.25 772.788 1043.45 cv
773.371 1038.43 775.069 1029.51 780.811 1020.05 cv
786.861 1010.07 794.482 1004.31 798.769 1001.52 cv
cp
level3{
gsave
clp
[-5.03638 37.1731 -37.1731 -5.03638 778.07 1009.02 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-5.03638 37.1731 -37.1731 -5.03638 778.07 1009.02 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
701.469 253.279 mo
701.469 664.439 li
841.864 664.439 li
841.864 253.279 li
701.469 253.279 li
.243137 .356863 .254902 rgb
f
841.871 661.487 mo
837.044 702.614 li
826.098 795.739 li
802.559 995.986 li
740.774 995.986 li
717.236 795.739 li
706.29 702.614 li
701.463 661.487 li
841.871 661.487 li
.14902 .12549 .105882 rgb
f
841.871 186.092 mo
841.871 253.284 li
701.463 253.284 li
701.463 186.092 li
701.463 185.363 701.481 184.633 701.5 183.903 cv
701.518 183.342 701.537 182.799 701.575 182.238 cv
701.594 181.845 701.612 181.433 701.649 181.041 cv
701.669 180.535 701.724 180.03 701.763 179.525 cv
701.781 179.356 li
701.837 178.851 701.874 178.328 701.949 177.822 cv
702.024 177.111 702.137 176.419 702.23 175.727 cv
702.323 175.034 702.436 174.342 702.566 173.669 cv
702.642 173.219 702.717 172.77 702.81 172.34 cv
702.848 172.134 702.903 171.909 702.941 171.704 cv
703.034 171.254 703.128 170.806 703.24 170.375 cv
703.428 169.57 703.614 168.785 703.82 167.999 cv
704.045 167.213 704.251 166.427 704.494 165.66 cv
704.55 165.51 704.588 165.36 704.625 165.211 cv
704.831 164.575 705.037 163.938 705.261 163.302 cv
705.523 162.535 705.804 161.768 706.084 161.02 cv
706.29 160.477 706.496 159.935 706.721 159.41 cv
707.244 158.138 707.806 156.884 708.386 155.65 cv
708.443 155.556 708.479 155.481 708.517 155.388 cv
708.817 154.77 709.135 154.172 709.452 153.554 cv
709.602 153.254 709.771 152.955 709.939 152.637 cv
710.201 152.132 710.481 151.645 710.762 151.14 cv
711.174 150.448 711.586 149.774 711.997 149.101 cv
712.39 148.483 712.765 147.866 713.176 147.267 cv
713.588 146.649 713.999 146.051 714.411 145.452 cv
715.065 144.535 715.739 143.637 716.432 142.757 cv
717.087 141.915 717.76 141.111 718.452 140.307 cv
718.584 140.157 li
719.238 139.389 719.931 138.641 720.623 137.911 cv
721.072 137.406 721.559 136.92 722.026 136.452 cv
722.7 135.778 723.393 135.104 724.103 134.468 cv
725.039 133.589 726.012 132.747 727.004 131.924 cv
727.715 131.344 728.426 130.782 729.155 130.221 cv
729.96 129.604 730.765 129.005 731.606 128.443 cv
731.7 128.369 li
731.85 128.275 li
731.85 128.256 li
732.973 127.489 734.113 126.759 735.273 126.048 cv
735.853 125.693 736.434 125.356 737.032 125.02 cv
737.426 124.795 737.818 124.57 738.212 124.364 cv
738.586 124.159 738.96 123.953 739.353 123.747 cv
740.233 123.298 741.131 122.849 742.047 122.437 cv
742.721 122.119 743.376 121.801 744.068 121.539 cv
744.236 121.445 744.424 121.371 744.592 121.296 cv
744.761 121.221 744.929 121.165 745.116 121.09 cv
745.509 120.94 745.901 120.772 746.295 120.622 cv
746.463 120.548 li
747.529 120.154 li
748.072 119.949 748.615 119.762 749.157 119.574 cv
750.243 119.2 751.347 118.863 752.45 118.545 cv
752.918 118.414 753.386 118.283 753.854 118.171 cv
754.265 118.059 754.678 117.946 755.089 117.853 cv
755.949 117.647 756.829 117.46 757.708 117.273 cv
758.214 117.179 758.719 117.086 759.243 116.992 cv
760.384 116.787 761.544 116.599 762.723 116.45 cv
763.602 116.337 764.481 116.263 765.38 116.169 cv
765.548 116.15 li
767.008 116.019 768.486 115.944 769.965 115.907 cv
770.525 115.888 771.105 115.888 771.667 115.888 cv
772.397 115.888 773.126 115.907 773.857 115.926 cv
774.398 115.944 774.923 115.963 775.465 116.001 cv
775.952 116.019 776.457 116.038 776.943 116.094 cv
777.542 116.131 778.141 116.187 778.74 116.244 cv
779.357 116.3 779.993 116.375 780.611 116.45 cv
780.836 116.487 781.059 116.506 781.285 116.543 cv
781.977 116.637 782.65 116.731 783.324 116.861 cv
784.915 117.123 786.468 117.441 788.002 117.797 cv
788.114 117.835 788.245 117.853 788.357 117.89 cv
788.938 118.021 789.48 118.171 790.041 118.321 cv
790.752 118.508 791.464 118.732 792.175 118.938 cv
792.306 118.975 792.418 119.013 792.549 119.05 cv
793.11 119.219 793.69 119.406 794.251 119.612 cv
794.27 119.612 li
795.318 119.986 796.385 120.36 797.413 120.753 cv
797.545 120.809 797.657 120.847 797.788 120.903 cv
798.199 121.071 798.593 121.24 798.985 121.408 cv
799.378 121.577 799.79 121.745 800.201 121.932 cv
800.838 122.212 801.474 122.512 802.11 122.811 cv
803.383 123.429 804.617 124.065 805.833 124.757 cv
806.282 125 806.713 125.244 807.162 125.506 cv
807.35 125.618 li
808.659 126.385 809.932 127.208 811.185 128.069 cv
811.765 128.462 812.326 128.855 812.888 129.267 cv
813.318 129.585 813.748 129.903 814.179 130.221 cv
814.272 130.296 814.366 130.352 814.46 130.427 cv
815.039 130.876 815.619 131.344 816.199 131.83 cv
816.667 132.205 817.135 132.616 817.602 133.009 cv
818.221 133.533 818.819 134.076 819.418 134.637 cv
819.829 135.011 820.241 135.404 820.652 135.797 cv
821.214 136.358 821.775 136.92 822.318 137.481 cv
823.385 138.585 824.396 139.726 825.368 140.886 cv
825.854 141.466 826.341 142.046 826.808 142.645 cv
826.902 142.757 li
827.333 143.3 827.763 143.861 828.175 144.423 cv
828.717 145.171 829.26 145.92 829.766 146.687 cv
829.878 146.836 li
830.308 147.473 830.72 148.127 831.149 148.783 cv
831.206 148.913 831.281 149.026 831.374 149.157 cv
831.393 149.194 li
831.842 149.924 832.291 150.654 832.703 151.402 cv
833.133 152.15 833.563 152.937 833.956 153.703 cv
834.143 154.059 834.331 154.396 834.499 154.752 cv
834.742 155.219 834.967 155.687 835.173 156.155 cv
835.51 156.847 835.827 157.558 836.127 158.269 cv
836.258 158.568 836.389 158.849 836.501 159.148 cv
836.801 159.822 837.063 160.514 837.324 161.206 cv
837.624 161.993 837.904 162.778 838.185 163.583 cv
838.241 163.733 838.278 163.882 838.335 164.032 cv
838.597 164.837 838.858 165.641 839.083 166.464 cv
839.326 167.288 839.551 168.13 839.775 168.972 cv
839.813 169.14 li
839.813 169.178 li
840.037 170.076 840.243 170.974 840.431 171.891 cv
840.449 171.947 li
840.618 172.845 840.786 173.743 840.935 174.66 cv
841.086 175.483 841.197 176.325 841.309 177.149 cv
841.328 177.261 841.328 177.373 841.348 177.485 cv
841.46 178.421 841.554 179.375 841.628 180.311 cv
841.646 180.517 841.665 180.703 841.683 180.91 cv
841.722 181.433 841.759 181.957 841.777 182.481 cv
841.796 182.837 841.815 183.192 841.815 183.548 cv
841.853 184.39 841.871 185.232 841.871 186.092 cv
.145098 .145098 .137255 rgb
f
701.469 312.357 mo
841.864 312.357 li
841.864 301.124 li
701.469 301.124 li
701.469 312.357 li
.203922 .298039 .211765 rgb
f
701.469 583.21 mo
841.864 583.21 li
841.864 571.976 li
701.469 571.976 li
701.469 583.21 li
f
701.469 415.269 mo
841.864 415.269 li
841.864 404.035 li
701.469 404.035 li
701.469 415.269 li
1 .92549 0 rgb
f
837.044 702.614 mo
826.098 795.739 li
717.236 795.739 li
706.29 702.614 li
837.044 702.614 li
.2 .172549 .152941 rgb
f
806.602 332.316 mo
835.436 332.316 li
835.436 321.082 li
806.602 321.082 li
806.602 332.316 li
1 .92549 0 rgb
f
802.554 821.936 mo
797.82 821.936 793.821 828.455 793.821 836.173 cv
793.821 843.891 797.82 850.41 802.554 850.41 cv
807.287 850.41 811.285 843.891 811.285 836.173 cv
811.285 828.455 807.287 821.936 802.554 821.936 cv
802.554 854.152 mo
795.559 854.152 790.079 846.255 790.079 836.173 cv
790.079 826.091 795.559 818.193 802.554 818.193 cv
809.548 818.193 815.027 826.091 815.027 836.173 cv
815.027 846.255 809.548 854.152 802.554 854.152 cv
.2 .172549 .152941 rgb
f
831.328 661.487 mo
817.393 661.487 li
817.865 657.165 li
817.125 583.21 li
832.16 583.21 li
832.16 654.152 li
832.179 654.152 li
832.16 654.208 li
832.16 657.165 li
831.823 657.165 li
831.328 661.487 li
832.16 571.976 mo
817.013 571.976 li
815.444 415.269 li
832.16 415.269 li
832.16 571.976 li
832.16 404.035 mo
815.332 404.035 li
814.614 332.316 li
832.16 332.316 li
832.16 404.035 li
832.16 321.082 mo
814.502 321.082 li
814.415 312.357 li
832.16 312.357 li
832.16 321.082 li
832.16 301.124 mo
814.302 301.124 li
813.823 253.284 li
832.16 253.284 li
832.16 301.124 li
.396078 .486274 .403922 rgb
f
792.867 995.986 mo
780.836 995.986 li
796.57 852.02 li
798.337 853.384 800.371 854.152 802.554 854.152 cv
805.155 854.152 807.546 853.061 809.524 851.17 cv
792.867 995.986 li
802.554 850.41 mo
800.51 850.41 798.604 849.195 797.097 847.194 cv
799.774 822.706 li
800.651 822.207 801.587 821.936 802.554 821.936 cv
807.226 821.936 811.182 828.288 811.283 835.875 cv
810.644 841.429 li
809.332 846.635 806.155 850.41 802.554 850.41 cv
812.509 825.214 mo
810.25 820.92 806.663 818.193 802.554 818.193 cv
801.759 818.193 800.984 818.295 800.234 818.491 cv
802.721 795.739 li
815.9 795.739 li
812.509 825.214 li
826.611 702.614 mo
812.898 702.614 li
817.393 661.487 li
831.328 661.487 li
827.352 696.178 li
826.611 702.614 li
.317647 .301961 .286274 rgb
f
832.16 253.284 mo
813.823 253.284 li
812.981 168.317 li
812.981 149.512 805.89 132.392 794.27 119.612 cv
795.318 119.986 796.385 120.36 797.413 120.753 cv
797.545 120.809 797.657 120.847 797.788 120.903 cv
798.199 121.071 798.593 121.24 798.985 121.408 cv
799.378 121.577 799.79 121.745 800.201 121.932 cv
800.838 122.212 801.474 122.512 802.11 122.811 cv
803.383 123.429 804.617 124.065 805.833 124.757 cv
806.282 125 806.713 125.244 807.162 125.506 cv
807.35 125.618 li
808.659 126.385 809.932 127.208 811.185 128.069 cv
811.765 128.462 812.326 128.855 812.888 129.267 cv
813.318 129.585 813.748 129.903 814.179 130.221 cv
814.272 130.296 814.366 130.352 814.46 130.427 cv
815.039 130.876 815.619 131.344 816.199 131.83 cv
816.667 132.205 817.135 132.616 817.602 133.009 cv
818.221 133.533 818.819 134.076 819.418 134.637 cv
819.829 135.011 820.241 135.404 820.652 135.797 cv
821.214 136.358 821.775 136.92 822.318 137.481 cv
823.385 138.585 824.396 139.726 825.368 140.886 cv
825.854 141.466 826.341 142.046 826.808 142.645 cv
826.902 142.757 li
827.333 143.3 827.763 143.861 828.175 144.423 cv
828.193 144.479 li
830.775 151.926 832.16 159.953 832.16 168.317 cv
832.16 253.284 li
.317647 .317647 .309804 rgb
f
832.16 312.357 mo
814.415 312.357 li
814.302 301.124 li
832.16 301.124 li
832.16 312.357 li
.364706 .439216 .368627 rgb
f
832.16 583.21 mo
817.125 583.21 li
817.013 571.976 li
832.16 571.976 li
832.16 583.21 li
f
832.16 415.269 mo
815.444 415.269 li
815.332 404.035 li
832.16 404.035 li
832.16 415.269 li
1 .941176 .2 rgb
f
815.9 795.739 mo
802.721 795.739 li
812.898 702.614 li
826.611 702.614 li
816.405 791.343 li
815.9 795.739 li
.360784 .337255 .321569 rgb
f
832.16 332.316 mo
814.614 332.316 li
814.502 321.082 li
832.16 321.082 li
832.16 332.316 li
1 .941176 .2 rgb
f
802.554 854.152 mo
800.371 854.152 798.337 853.384 796.57 852.02 cv
797.097 847.194 li
798.604 849.195 800.51 850.41 802.554 850.41 cv
806.155 850.41 809.332 846.635 810.644 841.429 cv
809.524 851.17 li
807.546 853.061 805.155 854.152 802.554 854.152 cv
811.283 835.875 mo
811.182 828.288 807.226 821.936 802.554 821.936 cv
801.587 821.936 800.651 822.207 799.774 822.706 cv
800.234 818.491 li
800.984 818.295 801.759 818.193 802.554 818.193 cv
806.663 818.193 810.25 820.92 812.509 825.214 cv
811.283 835.875 li
.360784 .337255 .321569 rgb
f
739.353 123.747 mo
741.056 122.868 742.796 122.044 744.592 121.296 cv
744.424 121.371 744.236 121.445 744.068 121.539 cv
743.376 121.801 742.721 122.119 742.047 122.437 cv
741.131 122.849 740.233 123.298 739.353 123.747 cv
744.877 121.182 mo
745.269 121.025 745.663 120.869 746.064 120.712 cv
745.748 120.837 745.432 120.97 745.116 121.09 cv
745.033 121.123 744.954 121.153 744.877 121.182 cv
1 1 1 rgb
f
743.731 661.487 mo
730.297 661.487 li
728.968 649.773 li
728.631 649.773 li
728.631 583.21 li
743.171 583.21 li
742.515 650.148 li
743.731 661.487 li
743.281 571.976 mo
728.631 571.976 li
728.631 415.269 li
744.818 415.269 li
743.281 571.976 li
744.929 404.035 mo
728.631 404.035 li
728.631 312.357 li
745.828 312.357 li
744.929 404.035 li
745.938 301.124 mo
728.631 301.124 li
728.631 253.284 li
746.407 253.284 li
745.938 301.124 li
.321569 .423529 .329412 rgb
f
779.563 995.986 mo
767.943 995.986 li
745.397 795.739 li
758.12 795.739 li
779.563 995.986 li
748.128 702.614 mo
734.918 702.614 li
733.459 689.629 li
730.297 661.487 li
743.731 661.487 li
748.128 702.614 li
.235294 .215686 .196078 rgb
f
746.407 253.284 mo
728.631 253.284 li
728.631 150.242 li
728.631 142.589 729.754 135.217 731.85 128.275 cv
731.85 128.256 li
732.973 127.489 734.113 126.759 735.273 126.048 cv
735.853 125.693 736.434 125.356 737.032 125.02 cv
737.426 124.795 737.818 124.57 738.212 124.364 cv
738.586 124.159 738.96 123.953 739.353 123.747 cv
739.353 123.747 li
740.233 123.298 741.131 122.849 742.047 122.437 cv
742.721 122.119 743.376 121.801 744.068 121.539 cv
744.236 121.445 744.424 121.371 744.592 121.296 cv
744.592 121.296 li
744.687 121.258 744.782 121.22 744.877 121.182 cv
744.954 121.153 745.033 121.123 745.116 121.09 cv
745.432 120.97 745.748 120.837 746.064 120.712 cv
746.141 120.682 746.218 120.652 746.295 120.622 cv
746.463 120.548 li
747.529 120.154 li
748.072 119.949 748.615 119.762 749.157 119.574 cv
750.243 119.2 751.347 118.863 752.45 118.545 cv
752.918 118.414 753.386 118.283 753.854 118.171 cv
754.265 118.059 754.678 117.946 755.089 117.853 cv
750.168 127.845 747.398 139.184 747.398 151.178 cv
746.407 253.284 li
.231373 .231373 .223529 rgb
f
745.828 312.357 mo
728.631 312.357 li
728.631 301.124 li
745.938 301.124 li
745.828 312.357 li
.286274 .368627 .290196 rgb
f
743.171 583.21 mo
728.631 583.21 li
728.631 571.976 li
743.281 571.976 li
743.171 583.21 li
f
744.818 415.269 mo
728.631 415.269 li
728.631 404.035 li
744.929 404.035 li
744.818 415.269 li
1 .933333 .101961 rgb
f
758.12 795.739 mo
745.397 795.739 li
744.405 786.87 li
734.918 702.614 li
748.128 702.614 li
758.12 795.739 li
.282353 .258824 .239216 rgb
f
709.593 153.281 mo
709.736 153.008 709.882 152.735 710.031 152.462 cv
710 152.52 709.969 152.578 709.939 152.637 cv
709.821 152.859 709.704 153.072 709.593 153.281 cv
710.655 151.332 mo
710.69 151.268 710.726 151.204 710.762 151.14 cv
710.726 151.204 710.69 151.269 710.655 151.332 cv
711.997 149.101 mo
712.161 148.837 712.327 148.573 712.495 148.311 cv
712.329 148.573 712.165 148.837 711.997 149.101 cv
713.091 147.392 mo
713.52 146.74 713.96 146.093 714.411 145.452 cv
713.999 146.051 713.588 146.649 713.176 147.267 cv
713.147 147.309 713.119 147.35 713.091 147.392 cv
716.432 142.757 mo
717.333 141.598 718.28 140.474 719.264 139.379 cv
719.034 139.636 718.807 139.895 718.584 140.157 cv
718.452 140.307 li
717.76 141.111 717.087 141.915 716.432 142.757 cv
719.979 138.597 mo
720.192 138.367 720.407 138.138 720.623 137.911 cv
720.408 138.138 720.193 138.366 719.979 138.597 cv
.8 .8 .8 rgb
f
729.829 661.487 mo
711.099 661.487 li
709.789 649.773 li
709.452 649.773 li
709.452 646.742 li
709.434 646.687 li
709.452 646.687 li
709.452 583.21 li
728.22 583.21 li
728.22 647.079 li
728.201 647.079 li
728.22 647.136 li
728.22 650.148 li
728.557 650.148 li
729.829 661.487 li
728.22 571.976 mo
709.452 571.976 li
709.452 415.269 li
728.22 415.269 li
728.22 571.976 li
728.22 404.035 mo
709.452 404.035 li
709.452 312.357 li
728.22 312.357 li
728.22 404.035 li
728.22 301.124 mo
709.452 301.124 li
709.452 253.284 li
728.22 253.284 li
728.22 301.124 li
.196078 .286274 .203922 rgb
f
767.513 995.986 mo
748.746 995.986 li
726.199 795.739 li
744.947 795.739 li
767.513 995.986 li
734.45 702.614 mo
715.721 702.614 li
714.261 689.629 li
711.099 661.487 li
729.829 661.487 li
733.028 689.965 li
734.45 702.614 li
.117647 .101961 .0862745 rgb
f
728.22 253.284 mo
709.452 253.284 li
709.452 153.554 li
709.499 153.463 709.546 153.372 709.593 153.281 cv
709.704 153.072 709.821 152.859 709.939 152.637 cv
709.969 152.578 710 152.52 710.031 152.462 cv
710.236 152.085 710.445 151.709 710.655 151.332 cv
710.69 151.269 710.726 151.204 710.762 151.14 cv
710.762 151.14 li
711.174 150.448 711.586 149.774 711.997 149.101 cv
711.997 149.101 li
712.165 148.837 712.329 148.573 712.495 148.311 cv
712.691 148.003 712.89 147.697 713.091 147.392 cv
713.119 147.35 713.147 147.309 713.176 147.267 cv
713.588 146.649 713.999 146.051 714.411 145.452 cv
714.411 145.452 li
715.065 144.535 715.739 143.637 716.432 142.757 cv
716.432 142.757 li
717.087 141.915 717.76 141.111 718.452 140.307 cv
718.584 140.157 li
718.807 139.895 719.034 139.636 719.264 139.379 cv
719.5 139.117 719.738 138.856 719.979 138.597 cv
720.193 138.366 720.408 138.138 720.623 137.911 cv
720.623 137.911 li
721.072 137.406 721.559 136.92 722.026 136.452 cv
722.7 135.778 723.393 135.104 724.103 134.468 cv
725.039 133.589 726.012 132.747 727.004 131.924 cv
727.715 131.344 728.426 130.782 729.155 130.221 cv
729.96 129.604 730.765 129.005 731.606 128.443 cv
731.7 128.369 li
729.436 135.554 728.22 143.207 728.22 151.178 cv
728.22 253.284 li
.117647 .117647 .109804 rgb
f
728.22 312.357 mo
709.452 312.357 li
709.452 301.124 li
728.22 301.124 li
728.22 312.357 li
.164706 .239216 .168627 rgb
f
728.22 583.21 mo
709.452 583.21 li
709.452 571.976 li
728.22 571.976 li
728.22 583.21 li
f
728.22 415.269 mo
709.452 415.269 li
709.452 404.035 li
728.22 404.035 li
728.22 415.269 li
.8 .741176 0 rgb
f
744.947 795.739 mo
726.199 795.739 li
725.207 786.87 li
715.721 702.614 li
734.45 702.614 li
743.975 787.113 li
744.947 795.739 li
.160784 .137255 .121569 rgb
f
731.7 128.369 mo
731.85 128.256 li
731.85 128.275 li
731.7 128.369 li
.8 .8 .8 rgb
f
730.297 661.487 mo
729.829 661.487 li
728.557 650.148 li
728.22 650.148 li
728.22 647.136 li
728.201 647.079 li
728.22 647.079 li
728.22 583.21 li
728.631 583.21 li
728.631 649.773 li
728.968 649.773 li
730.297 661.487 li
728.631 571.976 mo
728.22 571.976 li
728.22 415.269 li
728.631 415.269 li
728.631 571.976 li
728.631 404.035 mo
728.22 404.035 li
728.22 312.357 li
728.631 312.357 li
728.631 404.035 li
728.631 301.124 mo
728.22 301.124 li
728.22 253.284 li
728.631 253.284 li
728.631 301.124 li
.258824 .337255 .262745 rgb
f
767.943 995.986 mo
767.513 995.986 li
744.947 795.739 li
745.397 795.739 li
767.943 995.986 li
734.918 702.614 mo
734.45 702.614 li
733.028 689.965 li
729.829 661.487 li
730.297 661.487 li
733.459 689.629 li
734.918 702.614 li
.188235 .172549 .156863 rgb
f
728.631 253.284 mo
728.22 253.284 li
728.22 151.178 li
728.22 143.207 729.436 135.554 731.7 128.369 cv
731.7 128.369 li
731.85 128.275 li
731.85 128.256 li
731.85 128.275 li
729.754 135.217 728.631 142.589 728.631 150.242 cv
728.631 253.284 li
.184314 .184314 .180392 rgb
f
728.631 312.357 mo
728.22 312.357 li
728.22 301.124 li
728.631 301.124 li
728.631 312.357 li
.227451 .294118 .231373 rgb
f
728.631 583.21 mo
728.22 583.21 li
728.22 571.976 li
728.631 571.976 li
728.631 583.21 li
f
728.631 415.269 mo
728.22 415.269 li
728.22 404.035 li
728.631 404.035 li
728.631 415.269 li
.8 .745098 .0823529 rgb
f
745.397 795.739 mo
744.947 795.739 li
743.975 787.113 li
734.45 702.614 li
734.918 702.614 li
744.405 786.87 li
745.397 795.739 li
.227451 .207843 .192157 rgb
f
782.341 995.979 mo
764.188 995.979 li
764.188 901.096 li
764.188 896.083 768.251 880.407 773.265 880.407 cv
778.277 880.407 782.341 896.083 782.341 901.096 cv
782.341 995.979 li
cp
.0784314 .0666667 .0588235 rgb
f
998.772 421.479 mo
998.772 558.543 li
928.003 558.543 li
928.003 521.036 li
971.964 439.681 li
981.787 421.479 li
998.772 421.479 li
.235294 .235294 .243137 rgb
f
1118.74 521.036 mo
1118.74 558.543 li
1047.97 558.543 li
1047.97 421.479 li
1064.95 421.479 li
1074.92 439.936 li
1118.74 521.036 li
f
981.127 558.543 mo
971.257 558.543 li
971.087 544.531 970.974 533.491 970.917 526.471 cv
970.889 520.98 970.832 517.922 970.832 517.866 cv
970.832 517.781 970.832 516.79 970.889 514.979 cv
971.03 505.863 971.483 476.367 971.964 439.681 cv
981.787 421.479 li
981.904 421.479 li
981.447 466.343 980.973 504.398 980.824 514.966 cv
980.796 516.804 980.796 517.793 980.796 517.878 cv
980.796 517.883 980.796 517.906 980.796 517.949 cv
980.796 518.097 980.796 518.183 980.796 518.206 cv
980.796 518.262 980.824 521.319 980.853 526.811 cv
980.855 526.811 li
980.914 533.854 981.007 544.768 981.127 558.543 cv
.164706 .164706 .168627 rgb
f
1075.43 558.543 mo
1065.56 558.543 li
1065.86 526.811 li
1065.86 526.811 li
1065.92 520.583 li
1065.92 520.583 1065.92 520.54 1065.91 520.456 cv
1065.92 520.253 li
1065.92 520.253 1065.89 518.387 1065.86 514.966 cv
1065.71 501.616 1065.33 464.547 1065 421.572 cv
1074.92 439.936 li
1075.29 474.867 1075.65 503.57 1075.79 514.979 cv
1075.82 518.376 1075.88 520.244 1075.88 520.244 cv
1075.79 526.471 li
1075.43 558.543 li
f
1045.37 1054.96 mo
1045.42 1041.31 1042.5 1029.45 1038.94 1019.94 cv
1033.88 1020.09 1028.81 1020.25 1023.74 1020.41 cv
1018.68 1020.11 1013.62 1019.81 1008.56 1019.52 cv
1004.74 1028.92 1001.49 1040.71 1001.16 1054.35 cv
1000.49 1082.82 1012.91 1105.46 1022.34 1118.91 cv
1022.36 1118.49 1045.26 1083.44 1045.37 1054.96 cv
1 .745098 0 rgb
f
1033.57 1035.72 mo
1033.59 1029.53 1032.26 1024.14 1030.65 1019.82 cv
1028.35 1019.89 1026.05 1019.96 1023.75 1020.04 cv
1021.45 1019.9 1019.15 1019.77 1016.85 1019.63 cv
1015.12 1023.9 1013.64 1029.25 1013.49 1035.45 cv
1013.19 1048.38 1018.83 1058.66 1023.11 1064.76 cv
1023.12 1064.57 1033.52 1048.66 1033.57 1035.72 cv
1 .898039 .266667 rgb
f
1050.22 1018.37 mo
1050.24 1020.26 1050.21 1022.25 1050.11 1024.27 cv
1050 1024.31 li
1049.94 1024.31 1049.77 1024.36 1049.65 1024.4 cv
1048.32 1024.78 1044.26 1025.8 1038.25 1026.53 cv
1036.75 1026.69 1035.07 1026.85 1033.28 1026.96 cv
1030.22 1027.24 1026.87 1027.33 1023.24 1027.25 cv
1022.89 1027.25 li
1020.01 1027.22 1017.36 1027.1 1014.88 1026.9 cv
1010.97 1026.59 1007.57 1026.11 1004.81 1025.6 cv
1002.23 1025.13 1000.16 1024.63 998.724 1024.26 cv
997.288 1023.89 996.485 1023.62 996.485 1023.62 cv
996.474 1022.46 996.544 1021.36 996.58 1020.23 cv
996.547 1020.22 li
996.562 1019.34 996.635 1018.51 996.65 1017.67 cv
996.741 1015.82 996.946 1014.06 997.209 1012.3 cv
997.341 1011.42 997.471 1010.58 997.601 1009.79 cv
997.668 1009.26 997.793 1008.73 997.917 1008.25 cv
998.112 1006.97 998.423 1005.74 998.733 1004.51 cv
998.738 1004.29 998.8 1004.07 998.861 1003.85 cv
998.987 1003.28 999.171 1002.67 999.355 1002.09 cv
999.848 1000.29 1000.4 998.579 1001 996.911 cv
1001.13 996.516 1001.25 996.076 1001.43 995.682 cv
1002.28 993.442 1003.18 991.337 1004.08 989.362 cv
1004.5 988.529 1004.86 987.739 1005.22 986.994 cv
1005.34 986.775 1005.46 986.6 1005.52 986.424 cv
1005.76 986.03 1005.94 985.68 1006.12 985.328 cv
1006.71 984.232 1007.31 983.226 1007.85 982.262 cv
1008.85 980.642 1009.75 979.24 1010.58 978.015 cv
1010.81 977.665 1011.05 977.314 1011.29 977.009 cv
1013.3 974.165 1014.71 972.638 1014.71 972.638 cv
1024.11 972.736 li
1034.09 972.886 li
1034.09 972.886 1034.14 972.931 1034.26 973.065 cv
1034.25 973.108 li
1034.48 973.375 li
1034.59 973.508 1034.71 973.642 1034.88 973.819 cv
1035.04 974.086 1035.33 974.441 1035.61 974.886 cv
1035.78 975.107 1035.95 975.33 1036.11 975.596 cv
1036.28 975.817 1036.51 976.085 1036.67 976.395 cv
1037.58 977.683 1038.58 979.324 1039.7 981.231 cv
1039.93 981.631 1040.15 982.029 1040.37 982.473 cv
1040.82 983.271 1041.27 984.069 1041.71 984.955 cv
1042.04 985.62 1042.38 986.373 1042.71 987.125 cv
1042.88 987.392 1042.99 987.657 1043.1 987.923 cv
1043.32 988.41 1043.6 988.942 1043.82 989.474 cv
1044.48 991.111 1045.2 992.882 1045.8 994.739 cv
1046.08 995.535 1046.35 996.332 1046.63 997.128 cv
1046.96 998.057 1047.23 998.985 1047.44 999.957 cv
1047.49 1000.05 li
1047.66 1000.58 1047.76 1001.15 1047.93 1001.68 cv
1047.98 1001.95 1048.03 1002.17 1048.09 1002.43 cv
1048.25 1003.09 1048.41 1003.71 1048.57 1004.38 cv
1048.57 1004.55 1048.62 1004.73 1048.62 1004.86 cv
1048.83 1005.75 1048.99 1006.58 1049.15 1007.47 cv
1049.31 1008.31 1049.41 1009.19 1049.51 1010.07 cv
1049.56 1010.25 li
1049.66 1011.04 1049.76 1011.84 1049.8 1012.68 cv
1049.91 1013.12 1049.96 1013.6 1050.01 1014.09 cv
1050.1 1015.41 1050.13 1016.78 1050.17 1018.15 cv
1050.22 1018.37 li
.384314 .392157 .403922 rgb
f
1016.82 988.176 mo
1015.91 988.128 1015.03 988.072 1014.17 988.009 cv
1014.49 987.954 1014.83 987.92 1015.17 987.92 cv
1015.33 987.92 1015.49 987.927 1015.64 987.941 cv
1015.99 987.945 1016.33 988.037 1016.68 988.129 cv
1016.73 988.144 1016.77 988.159 1016.82 988.176 cv
1042.73 987.149 mo
1042.72 987.141 1042.72 987.133 1042.71 987.125 cv
1042.51 986.681 1042.32 986.236 1042.12 985.81 cv
1042.12 985.81 li
1042.33 986.245 1042.55 986.69 1042.76 987.146 cv
1042.76 987.146 li
1042.75 987.147 1042.74 987.148 1042.73 987.149 cv
1005.8 985.941 mo
1005.8 985.941 li
1005.85 985.833 1005.91 985.726 1005.97 985.618 cv
1005.97 985.618 li
1005.91 985.725 1005.86 985.832 1005.8 985.941 cv
1006.51 984.614 mo
1006.51 984.614 li
1006.88 983.941 1007.25 983.292 1007.62 982.671 cv
1007.62 982.671 li
1007.26 983.295 1006.89 983.939 1006.51 984.614 cv
1041.05 983.686 mo
1040.82 983.274 1040.6 982.873 1040.37 982.473 cv
1040.17 982.061 1039.96 981.688 1039.75 981.317 cv
1039.75 981.317 li
1040.17 982.062 1040.61 982.852 1041.05 983.686 cv
1041.05 983.686 li
1008.14 981.785 mo
1008.14 981.785 li
1008.61 981.015 1009.06 980.292 1009.5 979.613 cv
1009.52 979.613 li
1009.08 980.289 1008.63 981.011 1008.14 981.785 cv
1039.68 981.187 mo
1039.36 980.64 1039.04 980.114 1038.74 979.613 cv
1038.75 979.613 li
1039.05 980.112 1039.36 980.637 1039.68 981.187 cv
1039.68 981.187 li
level3{
gsave
clp
[9.23786 89.3675 -89.3675 9.23786 1020.94 957.449 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.898039 .878431 .87451 ]
/C1 [.898039 .878431 .87451 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.54902 .662745 .611765 ]
/C1 [.898039 .878431 .87451 ]
/N 1.01013 
>>
]
/Bounds [.45745 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.23786 89.3675 -89.3675 9.23786 1020.94 957.449 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPR`j5T%Vi8<GK
h;-lAgY1B7f\"g,f%&:"e'c[ldEp4ccHXVXbKJ&MaiMNC`l?!9`5BI/_8*k$^:q:o]Xtee\[f5Z\$i]P
['[0FZE^X<YHG%1XK8J'Wi;trVl-DgV50o^U8"?STV%gISXl:?S!ob5R$X/*QBd]!PEM)kOH>NaNfB$W
~>
<~i8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPO
i8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EMMhVR,Fh;$f@
gY:H9g=b03f\"g-f%/F&e^W*ue'landa?Ihd*U+bcHa_[c-4DUbKJ&Nb/qcHaN2EB`l?$;`Pf^5_o'@.
_SO((^qd_"^:q=p]tD"j]=Y\d]",A^\@B#W\$i`Q[C*BKZa7!DZE^[>Yct=7YHG%2Xf\\+XK/D%WiE%t
~>
<~hr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>K
hr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!;Ih;-lAgY:H9
g"G$1f@SU)e^`1!e'landF$=fcd0n^cHXVXbfe2Pb/qcHaN)?@`l5p8`5BL0_SO((^q[Xu^:q:o]Y(kg
]"5G_\@B#W[^NTO['[0GZEga?Yct@8YHG%1XfSV)X/`2!WMlbnVl$>fV50o_USFQXTqS-PT:_^HSXl:@
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
996.666 1017.67 mo
996.607 1018.51 996.569 1019.36 996.54 1020.21 cv
1000.96 1021.3 1009.41 1022.91 1021.24 1023.06 cv
1029.37 1023.16 1039.1 1022.56 1050.19 1020.64 cv
1050.2 1019.8 1050.19 1018.97 1050.17 1018.16 cv
1022.39 1023.08 1003.07 1019.31 996.666 1017.67 cv
.227451 .235294 .247059 rgb
f
997.61 1009.8 mo
997.474 1010.62 997.342 1011.44 997.227 1012.28 cv
1001.77 1013.36 1010.01 1014.86 1021.41 1015 cv
1029.41 1015.1 1038.95 1014.52 1049.82 1012.67 cv
1049.74 1011.85 1049.64 1011.04 1049.53 1010.24 cv
1023.22 1014.77 1004.63 1011.5 997.61 1009.8 cv
f
1046.62 997.117 mo
1046.37 996.315 1046.11 995.525 1045.84 994.76 cv
1025.49 997.751 1010.18 996.085 1001.89 994.524 cv
1001.58 995.297 1001.29 996.089 1001.01 996.901 cv
1005.81 997.822 1012.81 998.773 1021.76 998.885 cv
1028.87 998.973 1037.22 998.514 1046.62 997.117 cv
f
999.357 1002.11 mo
999.135 1002.9 998.922 1003.7 998.724 1004.52 cv
1003.46 1005.56 1011.22 1006.81 1021.58 1006.94 cv
1029.25 1007.04 1038.33 1006.51 1048.62 1004.84 cv
1048.45 1004.03 1048.28 1003.23 1048.09 1002.45 cv
1024.37 1006.29 1007.15 1003.81 999.357 1002.11 cv
f
1043.8 989.478 mo
1043.45 988.679 1043.11 987.897 1042.76 987.146 cv
1026.34 989.218 1013.46 988.271 1005.25 987.007 cv
1004.87 987.762 1004.48 988.545 1004.1 989.353 cv
1008.67 990.088 1014.66 990.733 1021.93 990.824 cv
1028.28 990.904 1035.61 990.549 1043.8 989.478 cv
f
1025.69 1027.28 mo
1024.89 1027.28 1024.07 1027.27 1023.24 1027.25 cv
1022.89 1027.25 li
1022.89 1027.25 li
1022.85 1026.23 1022.94 1024.83 1022.97 1023.07 cv
1030.74 1023.07 1039.88 1022.42 1050.19 1020.64 cv
1050.2 1019.8 1050.19 1018.97 1050.17 1018.16 cv
1039.97 1019.96 1030.92 1020.6 1023.22 1020.6 cv
1023.17 1020.6 1023.12 1020.6 1023.07 1020.6 cv
1023.07 1020.59 1023.07 1020.59 1023.07 1020.59 cv
1023.17 1015.01 li
1030.79 1015.01 1039.73 1014.39 1049.8 1012.67 cv
1049.8 1012.68 1049.8 1012.68 1049.8 1012.68 cv
1049.91 1013.12 1049.96 1013.6 1050.01 1014.09 cv
1050.1 1015.41 1050.13 1016.78 1050.17 1018.15 cv
1050.22 1018.37 li
1050.23 1018.75 1050.23 1019.14 1050.23 1019.53 cv
1050.23 1021.07 1050.19 1022.66 1050.11 1024.27 cv
1050 1024.31 li
1050 1024.31 1050 1024.31 1050 1024.31 cv
1049.94 1024.31 1049.77 1024.36 1049.65 1024.4 cv
1048.32 1024.78 1044.26 1025.8 1038.25 1026.53 cv
1036.75 1026.69 1035.07 1026.85 1033.28 1026.96 cv
1030.92 1027.17 1028.39 1027.28 1025.69 1027.28 cv
.317647 .32549 .337255 rgb
f
1022.97 1023.07 mo
1022.97 1023.07 1022.97 1023.06 1022.97 1023.06 cv
1022.98 1022.27 1023.06 1021.48 1023.07 1020.6 cv
1023.12 1020.6 1023.17 1020.6 1023.22 1020.6 cv
1030.92 1020.6 1039.97 1019.96 1050.17 1018.16 cv
1050.19 1018.97 1050.2 1019.8 1050.19 1020.64 cv
1039.88 1022.42 1030.74 1023.07 1022.97 1023.07 cv
.188235 .196078 .203922 rgb
f
998.724 1024.26 mo
997.288 1023.89 996.485 1023.62 996.485 1023.62 cv
996.484 1023.53 996.484 1023.44 996.484 1023.35 cv
996.484 1022.29 996.547 1021.27 996.58 1020.23 cv
996.58 1020.23 li
996.58 1020.23 li
996.547 1020.22 li
996.547 1020.22 996.547 1020.22 996.547 1020.22 cv
997.205 1020.38 997.953 1020.55 998.787 1020.73 cv
998.787 1020.73 998.787 1020.73 998.787 1020.73 cv
998.65 1021.92 998.688 1023.07 998.724 1024.26 cv
999.061 1018.24 mo
998.128 1018.03 997.328 1017.84 996.666 1017.67 cv
996.656 1017.81 996.647 1017.95 996.638 1018.1 cv
996.643 1017.95 996.648 1017.81 996.65 1017.67 cv
996.741 1015.82 996.946 1014.06 997.209 1012.3 cv
997.341 1011.42 997.471 1010.58 997.601 1009.79 cv
997.668 1009.26 997.793 1008.73 997.917 1008.25 cv
998.112 1006.98 998.421 1005.75 998.731 1004.52 cv
999.684 1004.73 1000.76 1004.95 1001.95 1005.17 cv
1001.64 1006.4 1001.33 1007.63 1000.96 1008.86 cv
1000.84 1009.38 1000.71 1009.91 1000.59 1010.44 cv
1000.59 1010.44 1000.59 1010.45 1000.58 1010.46 cv
999.435 1010.23 998.442 1010 997.61 1009.8 cv
997.474 1010.62 997.342 1011.44 997.227 1012.28 cv
998.042 1012.47 998.976 1012.68 1000.03 1012.89 cv
1000.03 1012.89 1000.02 1012.9 1000.02 1012.9 cv
999.588 1014.66 999.268 1016.42 999.064 1018.22 cv
999.063 1018.23 999.062 1018.23 999.061 1018.24 cv
.317647 .32549 .337255 rgb
f
998.787 1020.73 mo
997.953 1020.55 997.205 1020.38 996.547 1020.22 cv
996.56 1019.49 996.612 1018.79 996.638 1018.1 cv
996.647 1017.95 996.656 1017.81 996.666 1017.67 cv
997.328 1017.84 998.128 1018.03 999.061 1018.24 cv
998.874 1019.07 998.803 1019.9 998.787 1020.73 cv
.188235 .196078 .203922 rgb
f
1023.41 1012.54 mo
1023.33 1012.54 1023.24 1012.54 1023.16 1012.54 cv
1023.16 1012.53 li
1023.19 1010.69 1023.11 1008.8 1023.09 1006.95 cv
1023.16 1006.95 1023.23 1006.95 1023.31 1006.95 cv
1030.59 1006.95 1039.09 1006.39 1048.62 1004.84 cv
1048.62 1004.85 1048.62 1004.85 1048.62 1004.85 cv
1048.62 1004.85 1048.62 1004.86 1048.62 1004.86 cv
1048.62 1004.86 li
1048.62 1004.86 li
1048.83 1005.75 1048.99 1006.58 1049.15 1007.47 cv
1049.31 1008.31 1049.41 1009.19 1049.51 1010.07 cv
1049.56 1010.25 li
1049.65 1010.95 1049.74 1011.66 1049.79 1012.4 cv
1049.71 1011.67 1049.63 1010.95 1049.53 1010.24 cv
1039.68 1011.94 1030.9 1012.54 1023.41 1012.54 cv
.317647 .32549 .337255 rgb
f
1048.62 1004.83 mo
1048.45 1004.02 1048.28 1003.22 1048.09 1002.45 cv
1038.87 1003.94 1030.64 1004.48 1023.55 1004.48 cv
1023.34 1004.48 1023.12 1004.48 1022.9 1004.47 cv
1022.9 1004.47 1022.9 1004.46 1022.9 1004.46 cv
1022.76 1002.52 1022.57 1000.67 1022.31 998.898 cv
1022.31 998.896 1022.31 998.893 1022.31 998.891 cv
1022.68 998.894 1023.06 998.895 1023.44 998.895 cv
1030.18 998.895 1037.95 998.405 1046.62 997.117 cv
1046.61 997.084 1046.6 997.05 1046.59 997.017 cv
1046.6 997.054 1046.61 997.091 1046.63 997.128 cv
1046.96 998.057 1047.23 998.985 1047.44 999.957 cv
1047.49 1000.05 li
1047.66 1000.58 1047.76 1001.15 1047.93 1001.68 cv
1047.98 1001.95 1048.03 1002.17 1048.09 1002.43 cv
1048.25 1003.09 1048.41 1003.71 1048.57 1004.38 cv
1048.57 1004.38 1048.57 1004.39 1048.57 1004.39 cv
1048.57 1004.55 1048.61 1004.7 1048.62 1004.83 cv
998.735 1004.47 mo
998.745 1004.27 998.803 1004.06 998.861 1003.85 cv
998.987 1003.28 999.171 1002.67 999.355 1002.09 cv
999.848 1000.29 1000.4 998.579 1001 996.911 cv
1001.01 996.908 1001.01 996.905 1001.01 996.902 cv
1001.97 997.087 1003.03 997.274 1004.17 997.455 cv
1004.17 997.461 1004.17 997.467 1004.17 997.473 cv
1003.38 999.49 1002.89 1001.38 1002.57 1002.74 cv
1001.37 1002.53 1000.29 1002.31 999.357 1002.11 cv
999.139 1002.88 998.93 1003.67 998.735 1004.47 cv
1001.02 996.851 mo
1001.14 996.471 1001.26 996.056 1001.43 995.682 cv
1002.28 993.442 1003.18 991.337 1004.08 989.362 cv
1004.5 988.529 1004.86 987.739 1005.22 986.994 cv
1005.34 986.775 1005.46 986.6 1005.52 986.424 cv
1005.62 986.256 1005.71 986.097 1005.8 985.941 cv
1005.61 986.29 1005.43 986.646 1005.25 987.007 cv
1005.25 987.007 li
1005.25 987.007 li
1004.87 987.762 1004.48 988.545 1004.1 989.353 cv
1005.62 989.598 1007.31 989.833 1009.14 990.041 cv
1007.56 991.302 1006.32 993.048 1005.37 994.93 cv
1005.31 995.102 li
1004.06 994.914 1002.92 994.718 1001.89 994.524 cv
1001.59 995.281 1001.3 996.056 1001.02 996.851 cv
1023.89 988.359 mo
1023.89 988.359 li
1023.9 988.359 1023.9 988.359 1023.9 988.359 cv
1023.9 988.359 1023.9 988.359 1023.89 988.359 cv
1023.88 988.359 mo
1021.38 988.359 1019.02 988.292 1016.82 988.176 cv
1016.82 988.176 1016.82 988.176 1016.82 988.176 cv
1019.02 988.292 1021.38 988.359 1023.88 988.359 cv
1014.17 988.009 mo
1010.83 987.763 1007.89 987.41 1005.37 987.026 cv
1007.89 987.41 1010.83 987.763 1014.17 988.009 cv
1014.17 988.009 1014.17 988.009 1014.17 988.009 cv
1042.12 985.81 mo
1041.76 985.073 1041.4 984.365 1041.05 983.686 cv
1041.27 984.095 1041.49 984.514 1041.71 984.955 cv
1041.85 985.227 1041.98 985.514 1042.12 985.81 cv
1005.97 985.618 mo
1006.02 985.521 1006.07 985.425 1006.12 985.328 cv
1006.25 985.086 1006.38 984.848 1006.51 984.614 cv
1006.33 984.943 1006.15 985.278 1005.97 985.618 cv
1007.62 982.671 mo
1007.69 982.534 1007.77 982.397 1007.85 982.262 cv
1007.95 982.101 1008.05 981.942 1008.14 981.785 cv
1007.97 982.074 1007.79 982.369 1007.62 982.671 cv
1039.75 981.317 mo
1039.73 981.274 1039.7 981.231 1039.68 981.187 cv
1039.68 981.202 1039.69 981.217 1039.7 981.231 cv
1039.72 981.26 1039.73 981.289 1039.75 981.317 cv
f
1023.89 988.359 mo
1023.89 988.359 1023.89 988.359 1023.88 988.359 cv
1021.38 988.359 1019.02 988.292 1016.82 988.176 cv
1016.77 988.159 1016.73 988.144 1016.68 988.129 cv
1016.33 988.037 1015.99 987.945 1015.64 987.941 cv
1015.49 987.927 1015.33 987.92 1015.17 987.92 cv
1014.83 987.92 1014.49 987.954 1014.17 988.009 cv
1010.83 987.763 1007.89 987.41 1005.37 987.026 cv
1005.33 987.02 1005.29 987.013 1005.25 987.007 cv
1005.25 987.007 li
1005.43 986.646 1005.61 986.29 1005.8 985.941 cv
1005.86 985.832 1005.91 985.725 1005.97 985.618 cv
1006.15 985.278 1006.33 984.943 1006.51 984.614 cv
1006.89 983.939 1007.26 983.295 1007.62 982.671 cv
1007.79 982.369 1007.97 982.074 1008.14 981.785 cv
1008.63 981.011 1009.08 980.289 1009.52 979.613 cv
1038.74 979.613 li
1039.04 980.114 1039.36 980.64 1039.68 981.187 cv
1039.7 981.231 1039.73 981.274 1039.75 981.317 cv
1039.96 981.688 1040.17 982.061 1040.37 982.473 cv
1040.6 982.873 1040.82 983.274 1041.05 983.686 cv
1041.4 984.365 1041.76 985.073 1042.12 985.81 cv
1042.32 986.236 1042.51 986.681 1042.71 987.125 cv
1042.72 987.133 1042.72 987.141 1042.73 987.149 cv
1035.79 988.023 1029.49 988.359 1023.9 988.359 cv
1023.9 988.359 1023.9 988.359 1023.89 988.359 cv
level3{
gsave
clp
[9.23786 89.3675 -89.3675 9.23786 1020.94 957.449 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~]XbVd\[oGa]"GSb]XbVd\[oGa]"GSb]XbVd\[oGa]"GSb]XbVd\[oGa]"GSb]XbVd\[oGa]"GSb]XbVd
\[oGa]"GSb]XbVd\[oGa]"GSb]XbVd\[oGa]"GSb]XbVd\[oGa]"GSb]XbVd\[oGa]"GSb]XbVd\[oGa
]"GSb]XbVd\[oGa]"GSb]XbVd\[oGa]"GSb]XbVd\[oGa]"GSb]XbVd\[oGa]"GSb]XbVd\[oGa]"GSb
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~F,Y]mNIuA5KQ`B0GE.B&O+qtBLO5,=I$'55P)4XOMLUhJJWu.GQ&^K^NeE^ZKpRmVR$!2mP)5TjMOKcf
S!8l$Q&V<"O.DW!SsPS2R$+&/PFn>0TU_=ASX-"@R%p7@Un=*OTUVaNSY`'PVPB`\US+Q]TrFl`WhuSl
VPU;kVQ6\nXK&5#X/W5&X0/P*YH=n1Y-,"4YHb=:ZE^^@ZEpmC['[0H[C*HO[C<TQ\[T&Z\@B/\\\,Ja
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.45745 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.23786 89.3675 -89.3675 9.23786 1020.94 957.449 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e
]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]"5G_\@8oT
[^EKKZa7!DZE^[>Yck44XfSS(X/i;$WMlbnVPU,cV59u`USFQWTV.sMSt2FCSXc1<R[TY4R$a5+Q'IW"
Q'@JqP*(lgOH5H`NfB!VMi3IMM2@(FLkgb?KnP,3K7ec-JUr?$IXZ]nI=-EhH[:!`H$FRXG'8"NFEDSF
~>
<~\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y
\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\$riU[^NTO
[C*EL['R*EZE^[>Z*CO;YHP.5Y-+q0XfSV)X/i;$WiE%tWMukrW2QYmVl$>fV50o^USFTZUSFQXTqS-P
TV%jJSt2FCSXl=BS=H(<R[T\6R@0J1R$a8-Q^3r&Q'ISuPa%AqP*1ukP*(lgOH5H`O,f6\NK&pWN/W^S
~>
<~\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]
\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\@B#W[^NTO
[C!<JZa-mAZ*CR=Yct=7Y-+n/XK8M(X/i;$Wi;trW2QVkV5:#bUnjf]US=KWU7n9RTV.pLSt;LDS=H+>
S=?":R@'A.Q^3r'QBmf$Pa%AqPEV2nP*(lgOH5H_NfK*YNK&mTMMd7IM26tCLPLY>L4t>8KS5#3K7ec-
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
1023.73 996.419 mo
1023.07 996.419 1022.42 996.414 1021.79 996.405 cv
1021.78 996.397 1021.78 996.389 1021.78 996.381 cv
1021.3 994.137 1020.65 992.241 1019.76 990.78 cv
1020.47 990.8 1021.19 990.815 1021.93 990.824 cv
1022.49 990.831 1023.07 990.835 1023.65 990.835 cv
1029.59 990.835 1036.34 990.453 1043.8 989.478 cv
1043.65 989.126 1043.49 988.778 1043.34 988.434 cv
1043.5 988.772 1043.68 989.123 1043.82 989.474 cv
1044.48 991.111 1045.2 992.882 1045.8 994.739 cv
1045.81 994.748 1045.81 994.756 1045.81 994.765 cv
1037.58 995.972 1030.18 996.419 1023.73 996.419 cv
.317647 .32549 .337255 rgb
f
1023.17 1015.01 mo
1023.17 1015 li
1023.18 1014.38 1023.2 1013.76 1023.15 1013.14 cv
1023.16 1012.54 li
1023.24 1012.54 1023.33 1012.54 1023.41 1012.54 cv
1030.9 1012.54 1039.68 1011.94 1049.53 1010.24 cv
1049.63 1010.95 1049.71 1011.67 1049.79 1012.4 cv
1049.79 1012.49 1049.8 1012.58 1049.8 1012.67 cv
1039.73 1014.39 1030.79 1015.01 1023.17 1015.01 cv
1000.03 1012.89 mo
998.976 1012.68 998.042 1012.47 997.227 1012.28 cv
997.342 1011.44 997.474 1010.62 997.61 1009.8 cv
998.442 1010 999.435 1010.23 1000.58 1010.46 cv
1000.4 1011.28 1000.16 1012.06 1000.03 1012.89 cv
.188235 .196078 .203922 rgb
f
1023.44 998.895 mo
1023.06 998.895 1022.68 998.894 1022.31 998.891 cv
1022.15 998.019 1022 997.191 1021.79 996.405 cv
1022.42 996.414 1023.07 996.419 1023.73 996.419 cv
1030.18 996.419 1037.58 995.972 1045.81 994.765 cv
1046.07 995.515 1046.33 996.266 1046.59 997.017 cv
1046.6 997.05 1046.61 997.084 1046.62 997.117 cv
1037.95 998.405 1030.18 998.895 1023.44 998.895 cv
1004.17 997.455 mo
1003.03 997.274 1001.97 997.087 1001.01 996.902 cv
1001.01 996.885 1001.02 996.868 1001.02 996.851 cv
1001.3 996.056 1001.59 995.281 1001.89 994.524 cv
1002.92 994.718 1004.06 994.914 1005.31 995.102 cv
1005.31 995.105 li
1004.83 995.887 1004.48 996.671 1004.17 997.455 cv
f
1023.31 1006.95 mo
1023.23 1006.95 1023.16 1006.95 1023.09 1006.95 cv
1023.09 1006.95 1023.09 1006.94 1023.09 1006.93 cv
1023.04 1006.36 1022.99 1005.83 1022.95 1005.25 cv
1022.95 1004.99 1022.95 1004.73 1022.9 1004.47 cv
1023.12 1004.48 1023.34 1004.48 1023.55 1004.48 cv
1030.64 1004.48 1038.87 1003.94 1048.09 1002.45 cv
1048.28 1003.22 1048.45 1004.02 1048.62 1004.83 cv
1048.62 1004.83 1048.62 1004.84 1048.62 1004.84 cv
1039.09 1006.39 1030.59 1006.95 1023.31 1006.95 cv
1001.95 1005.17 mo
1000.76 1004.95 999.684 1004.73 998.731 1004.52 cv
998.732 1004.52 998.733 1004.52 998.733 1004.51 cv
998.734 1004.5 998.734 1004.49 998.735 1004.47 cv
998.93 1003.67 999.139 1002.88 999.357 1002.11 cv
1000.29 1002.31 1001.37 1002.53 1002.57 1002.74 cv
1002.57 1002.74 1002.57 1002.74 1002.57 1002.75 cv
1002.51 1002.88 li
1002.39 1003.32 1002.32 1003.71 1002.2 1004.15 cv
1002.14 1004.5 1002.02 1004.81 1001.95 1005.16 cv
1001.95 1005.16 1001.95 1005.16 1001.95 1005.17 cv
f
1023.65 990.835 mo
1023.07 990.835 1022.49 990.831 1021.93 990.824 cv
1021.19 990.815 1020.47 990.8 1019.76 990.78 cv
1019.75 990.774 1019.75 990.768 1019.75 990.762 cv
1018.94 989.479 1018.01 988.605 1016.82 988.176 cv
1019.02 988.292 1021.38 988.359 1023.88 988.359 cv
1023.89 988.359 1023.89 988.359 1023.89 988.359 cv
1023.89 988.359 li
1023.9 988.359 1023.9 988.359 1023.9 988.359 cv
1029.49 988.359 1035.79 988.023 1042.73 987.149 cv
1042.89 987.408 1042.99 987.665 1043.1 987.923 cv
1043.18 988.089 1043.26 988.26 1043.34 988.434 cv
1043.49 988.778 1043.65 989.126 1043.8 989.478 cv
1036.34 990.453 1029.59 990.835 1023.65 990.835 cv
1009.14 990.041 mo
1007.31 989.833 1005.62 989.598 1004.1 989.353 cv
1004.48 988.545 1004.87 987.762 1005.25 987.007 cv
1005.25 987.007 li
1005.29 987.013 1005.33 987.02 1005.37 987.026 cv
1007.89 987.41 1010.83 987.763 1014.17 988.009 cv
1014.16 988.01 1014.15 988.012 1014.14 988.014 cv
1012.18 988.126 1010.55 988.901 1009.15 990.033 cv
1009.14 990.036 1009.14 990.038 1009.14 990.041 cv
f
1065.92 520.253 mo
1065.86 526.474 li
1064.27 696.731 li
1064.19 708.268 li
1062.18 924.784 li
1062.09 935.501 li
1061.67 979.613 li
984.9 979.613 li
984.504 935.501 li
984.392 924.784 li
984.392 924.784 983.4 814.164 982.467 708.268 cv
982.41 704.422 982.382 700.576 982.353 696.731 cv
981.674 621.315 981.051 550.481 980.853 526.474 cv
980.824 520.989 980.796 517.935 980.796 517.878 cv
980.796 517.793 980.796 516.804 980.824 514.966 cv
981.136 492.91 982.862 351.101 982.891 277.608 cv
982.919 273.65 982.919 269.776 982.919 266.072 cv
982.947 234.147 982.919 212.289 982.976 211.78 cv
1064.75 211.78 li
1064.81 212.289 1064.67 234.175 1064.53 266.072 cv
1064.5 269.776 1064.5 273.65 1064.47 277.608 cv
1064.16 348.725 1065.55 486.349 1065.86 514.966 cv
1065.89 518.387 1065.92 520.253 1065.92 520.253 cv
.760784 .768627 .776471 rgb
f
981.825 656.409 mo
1064.75 656.409 li
1064.66 667.944 li
981.916 667.944 li
981.825 656.409 li
.866667 .223529 .188235 rgb
f
1064.27 697.249 mo
1064.19 708.798 li
982.467 708.798 li
982.41 704.948 982.382 701.099 982.353 697.249 cv
1064.27 697.249 li
f
989.578 892.168 mo
1057 892.168 li
1056.92 903.703 li
989.652 903.703 li
989.578 892.168 li
f
989.578 936.564 mo
1057 936.564 li
1056.92 948.099 li
989.652 948.099 li
989.578 936.564 li
f
1064.53 266.13 mo
1064.5 269.838 1064.5 273.716 1064.47 277.679 cv
982.891 277.679 li
982.919 273.716 982.919 269.838 982.919 266.13 cv
1064.53 266.13 li
f
1064.75 211.78 mo
982.976 211.78 li
988.269 183.104 1018.22 120.178 1020.88 116.243 cv
1023.06 112.987 1025.44 112.818 1026.4 112.903 cv
1027.36 112.846 1029.74 113.129 1031.75 116.497 cv
1034.16 120.489 1059.97 182.057 1064.75 211.78 cv
f
1065.92 520.583 mo
1065.86 526.811 li
980.853 526.811 li
980.824 521.319 980.796 518.262 980.796 518.206 cv
980.796 518.121 980.796 517.13 980.824 515.289 cv
1065.86 515.289 li
1065.89 518.715 1065.92 520.583 1065.92 520.583 cv
f
985.453 701.141 mo
991.821 701.141 li
991.821 691.469 li
985.453 691.469 li
985.453 701.141 li
cp
f
995.36 701.141 mo
1001.73 701.141 li
1001.73 691.469 li
995.36 691.469 li
995.36 701.141 li
f
1005.27 701.141 mo
1011.64 701.141 li
1011.64 691.469 li
1005.27 691.469 li
1005.27 701.141 li
cp
f
1015.17 701.141 mo
1021.54 701.141 li
1021.54 691.469 li
1015.17 691.469 li
1015.17 701.141 li
cp
f
1025.08 701.141 mo
1031.45 701.141 li
1031.45 691.469 li
1025.08 691.469 li
1025.08 701.141 li
cp
f
1034.99 701.141 mo
1041.36 701.141 li
1041.36 691.469 li
1034.99 691.469 li
1034.99 701.141 li
cp
f
1044.9 701.141 mo
1051.27 701.141 li
1051.27 691.469 li
1044.9 691.469 li
1044.9 701.141 li
f
1054.81 701.141 mo
1061.17 701.141 li
1061.17 691.469 li
1054.81 691.469 li
1054.81 701.141 li
f
985.453 270.965 mo
991.821 270.965 li
991.821 261.294 li
985.453 261.294 li
985.453 270.965 li
cp
f
995.36 270.965 mo
1001.73 270.965 li
1001.73 261.294 li
995.36 261.294 li
995.36 270.965 li
f
1005.27 270.965 mo
1011.64 270.965 li
1011.64 261.294 li
1005.27 261.294 li
1005.27 270.965 li
cp
f
1015.17 270.965 mo
1021.54 270.965 li
1021.54 261.294 li
1015.17 261.294 li
1015.17 270.965 li
cp
f
1025.08 270.965 mo
1031.45 270.965 li
1031.45 261.294 li
1025.08 261.294 li
1025.08 270.965 li
cp
f
1034.99 270.965 mo
1041.36 270.965 li
1041.36 261.294 li
1034.99 261.294 li
1034.99 270.965 li
cp
f
1044.9 270.965 mo
1051.27 270.965 li
1051.27 261.294 li
1044.9 261.294 li
1044.9 270.965 li
f
1054.81 270.965 mo
1061.17 270.965 li
1061.17 261.294 li
1054.81 261.294 li
1054.81 270.965 li
f
1034.99 330.951 mo
1034.99 325.479 1030.55 321.043 1025.08 321.043 cv
1019.61 321.043 1015.17 325.479 1015.17 330.951 cv
1015.17 336.423 1019.61 340.859 1025.08 340.859 cv
1030.55 340.859 1034.99 336.423 1034.99 330.951 cv
cp
.235294 .235294 .243137 rgb
f
1034.99 392.584 mo
1034.99 387.113 1030.55 382.677 1025.08 382.677 cv
1019.61 382.677 1015.17 387.113 1015.17 392.584 cv
1015.17 398.057 1019.61 402.492 1025.08 402.492 cv
1030.55 402.492 1034.99 398.057 1034.99 392.584 cv
cp
f
1034.99 454.218 mo
1034.99 448.747 1030.55 444.311 1025.08 444.311 cv
1019.61 444.311 1015.17 448.747 1015.17 454.218 cv
1015.17 459.69 1019.61 464.126 1025.08 464.126 cv
1030.55 464.126 1034.99 459.69 1034.99 454.218 cv
cp
f
1013.48 636.465 mo
1003.42 636.465 li
1003.42 598.367 li
1013.48 598.367 li
1013.48 636.465 li
.831372 .839216 .843137 rgb
f
1013.48 583.743 mo
1003.42 583.743 li
1003.42 545.644 li
1013.48 545.644 li
1013.48 583.743 li
f
1013.48 825.467 mo
1004.67 825.467 li
1004.57 813.402 1004.46 800.62 1004.35 787.368 cv
1013.48 787.368 li
1013.48 825.467 li
f
1013.48 772.744 mo
1004.23 772.744 li
1004.12 760.297 1004.01 747.539 1003.91 734.646 cv
1013.48 734.646 li
1013.48 772.744 li
f
1000.53 979.613 mo
995.091 979.613 li
995.034 972.253 li
994.806 948.099 li
1000.24 948.099 li
1000.47 972.253 li
1000.53 979.613 li
1000.13 936.564 mo
994.697 936.564 li
994.667 933.388 li
994.582 922.178 li
994.582 922.178 994.523 915.456 994.421 903.703 cv
999.855 903.703 li
999.957 915.456 1000.02 922.178 1000.02 922.178 cv
1000.1 933.388 li
1000.13 936.564 li
999.755 892.168 mo
994.32 892.168 li
993.98 852.99 993.359 780.873 992.767 708.798 cv
998.202 708.798 li
998.795 780.873 999.415 852.99 999.755 892.168 cv
995.36 697.249 mo
992.673 697.249 li
992.668 696.605 992.662 695.966 992.657 695.323 cv
992.601 691.332 992.572 687.256 992.516 683.236 cv
992.472 678.115 992.428 673.013 992.385 667.944 cv
997.819 667.944 li
997.863 673.013 997.906 678.115 997.95 683.236 cv
997.989 685.969 998.014 688.728 998.044 691.469 cv
995.36 691.469 li
995.36 697.249 li
997.721 656.409 mo
992.286 656.409 li
991.843 604.163 991.455 556.409 991.218 526.811 cv
996.653 526.811 li
996.89 556.409 997.278 604.163 997.721 656.409 cv
.607843 .615686 .619608 rgb
f
997.819 667.944 mo
992.385 667.944 li
992.352 664.078 992.319 660.232 992.286 656.409 cv
997.721 656.409 li
997.754 660.232 997.786 664.078 997.819 667.944 cv
.694118 .180392 .14902 rgb
f
996.561 515.289 mo
991.126 515.289 li
991.093 511.224 991.066 507.732 991.043 504.873 cv
991.014 499.126 990.986 495.928 990.986 495.871 cv
990.986 495.758 990.986 494.767 991.014 492.814 cv
991.261 472.745 992.596 357.946 992.961 277.679 cv
998.397 277.679 li
998.032 357.946 996.696 472.745 996.45 492.814 cv
996.422 494.767 996.422 495.758 996.422 495.871 cv
996.422 495.928 996.45 499.126 996.479 504.873 cv
996.501 507.732 996.529 511.224 996.561 515.289 cv
995.36 266.13 mo
993.008 266.13 li
993.034 258.331 993.05 250.949 993.053 244.135 cv
993.109 240.002 993.109 235.926 993.109 232.048 cv
993.117 224.749 993.121 217.951 993.123 211.78 cv
998.557 211.78 li
998.555 217.952 998.551 224.749 998.545 232.048 cv
998.545 235.926 998.545 240.002 998.488 244.135 cv
998.486 249.525 998.476 255.269 998.458 261.294 cv
995.36 261.294 li
995.36 266.13 li
.607843 .615686 .619608 rgb
f
995.12 173.713 mo
997.126 168.554 999.252 163.357 1001.39 158.311 cv
999.265 163.355 997.139 168.551 995.12 173.713 cv
.8 .8 .8 rgb
f
998.202 708.798 mo
992.767 708.798 li
992.736 704.945 992.704 701.097 992.673 697.249 cv
995.36 697.249 li
995.36 701.141 li
998.139 701.141 li
998.16 703.696 998.181 706.24 998.202 708.798 cv
.694118 .180392 .14902 rgb
f
999.855 903.703 mo
994.421 903.703 li
994.391 900.274 994.357 896.412 994.32 892.168 cv
999.755 892.168 li
999.792 896.412 999.825 900.274 999.855 903.703 cv
f
1000.24 948.099 mo
994.806 948.099 li
994.697 936.564 li
1000.13 936.564 li
1000.24 948.099 li
f
998.397 277.679 mo
992.961 277.679 li
992.979 273.737 992.995 269.889 993.008 266.13 cv
995.36 266.13 li
995.36 270.965 li
998.425 270.965 li
998.416 273.174 998.407 275.412 998.397 277.679 cv
f
998.557 211.78 mo
993.123 211.78 li
993.128 196.075 993.125 184.419 993.166 178.83 cv
993.802 177.133 994.454 175.425 995.12 173.713 cv
997.139 168.551 999.265 163.355 1001.39 158.311 cv
1001.71 157.571 1002.02 156.833 1002.34 156.099 cv
1002.39 155.958 li
1004.12 151.91 1005.82 148.004 1007.49 144.295 cv
1003.39 155.958 1000.05 166.941 998.602 175.179 cv
998.557 175.599 998.565 189.683 998.557 211.78 cv
f
996.653 526.811 mo
991.218 526.811 li
991.184 522.589 991.153 518.733 991.126 515.289 cv
996.561 515.289 li
996.589 518.733 996.619 522.589 996.653 526.811 cv
f
998.139 701.141 mo
995.36 701.141 li
995.36 697.249 li
995.36 691.469 li
998.044 691.469 li
998.058 692.759 998.074 694.045 998.092 695.323 cv
998.108 697.26 998.123 699.202 998.139 701.141 cv
f
998.425 270.965 mo
995.36 270.965 li
995.36 266.13 li
995.36 261.294 li
998.458 261.294 li
998.449 264.445 998.438 267.669 998.425 270.965 cv
f
1006.02 979.613 mo
1000.58 979.613 li
1000.53 972.253 li
1000.3 948.099 li
1005.73 948.099 li
1005.96 972.253 li
1006.02 979.613 li
1005.62 936.564 mo
1000.19 936.564 li
1000.16 933.388 li
1000.07 922.178 li
1000.07 922.178 1000.01 915.456 999.912 903.703 cv
1005.35 903.703 li
1005.45 915.456 1005.51 922.178 1005.51 922.178 cv
1005.59 933.388 li
1005.62 936.564 li
1005.25 892.168 mo
999.812 892.168 li
999.472 852.99 998.851 780.873 998.259 708.798 cv
1003.69 708.798 li
1003.76 717.427 1003.84 726.072 1003.91 734.646 cv
1003.42 734.646 li
1003.42 772.744 li
1004.23 772.744 li
1004.27 777.67 1004.31 782.555 1004.35 787.368 cv
1003.42 787.368 li
1003.42 825.467 li
1004.67 825.467 li
1004.9 852.092 1005.1 875.21 1005.25 892.168 cv
1003.6 697.249 mo
1001.73 697.249 li
1001.73 691.469 li
998.101 691.469 li
998.071 688.728 998.045 685.969 998.007 683.236 cv
997.963 678.115 997.919 673.013 997.876 667.944 cv
1003.31 667.944 li
1003.35 673.013 1003.4 678.115 1003.44 683.236 cv
1003.5 687.256 1003.53 691.332 1003.58 695.323 cv
1003.59 695.966 1003.59 696.605 1003.6 697.249 cv
1003.21 656.409 mo
997.778 656.409 li
997.335 604.163 996.947 556.409 996.71 526.811 cv
1002.14 526.811 li
1002.38 556.409 1002.77 604.163 1003.21 656.409 cv
.807843 .815686 .819608 rgb
f
1003.31 667.944 mo
997.876 667.944 li
997.843 664.078 997.81 660.232 997.778 656.409 cv
1003.21 656.409 li
1003.25 660.232 1003.28 664.078 1003.31 667.944 cv
.894118 .380392 .34902 rgb
f
1002.05 515.289 mo
996.618 515.289 li
996.585 511.224 996.558 507.732 996.535 504.873 cv
996.507 499.126 996.479 495.928 996.479 495.871 cv
996.479 495.758 996.479 494.767 996.507 492.814 cv
996.753 472.745 998.089 357.946 998.453 277.679 cv
1003.89 277.679 li
1003.52 357.946 1002.19 472.745 1001.94 492.814 cv
1001.91 494.767 1001.91 495.758 1001.91 495.871 cv
1001.91 495.928 1001.94 499.126 1001.97 504.873 cv
1001.99 507.732 1002.02 511.224 1002.05 515.289 cv
1003.93 266.13 mo
1001.73 266.13 li
1001.73 261.294 li
998.515 261.294 li
998.533 255.269 998.543 249.525 998.545 244.135 cv
998.602 240.002 998.602 235.926 998.602 232.048 cv
998.608 224.749 998.611 217.952 998.613 211.78 cv
1004.05 211.78 li
1004.05 217.952 1004.04 224.749 1004.04 232.048 cv
1004.04 235.926 1004.04 240.002 1003.98 244.135 cv
1003.98 250.949 1003.96 258.331 1003.93 266.13 cv
.807843 .815686 .819608 rgb
f
1017.86 121.987 mo
1019.39 118.885 1020.46 116.855 1020.88 116.243 cv
1020.47 116.853 1019.4 118.885 1017.86 121.987 cv
1020.88 116.243 mo
1021.45 115.393 1022.01 114.771 1022.58 114.289 cv
1023.43 113.554 1024.28 113.185 1024.96 113.016 cv
1025.01 112.987 li
1025.07 112.987 li
1025.07 112.991 1025.07 112.995 1025.06 112.999 cv
1023.91 113.256 1022.35 114.048 1020.88 116.243 cv
1 1 1 rgb
f
1003.69 708.798 mo
998.259 708.798 li
998.238 706.24 998.217 703.696 998.196 701.141 cv
1001.73 701.141 li
1001.73 697.249 li
1003.6 697.249 li
1003.63 701.097 1003.66 704.945 1003.69 708.798 cv
.894118 .380392 .34902 rgb
f
1005.35 903.703 mo
999.912 903.703 li
999.882 900.274 999.848 896.412 999.812 892.168 cv
1005.25 892.168 li
1005.28 896.412 1005.32 900.274 1005.35 903.703 cv
f
1005.73 948.099 mo
1000.3 948.099 li
1000.19 936.564 li
1005.62 936.564 li
1005.73 948.099 li
f
1003.89 277.679 mo
998.453 277.679 li
998.463 275.412 998.473 273.174 998.482 270.965 cv
1001.73 270.965 li
1001.73 266.13 li
1003.93 266.13 li
1003.92 269.889 1003.91 273.737 1003.89 277.679 cv
f
1004.05 211.78 mo
998.613 211.78 li
998.622 189.683 998.614 175.599 998.658 175.179 cv
1000.16 166.771 1003.58 155.505 1007.8 143.587 cv
1007.83 143.531 li
1011.83 134.564 1015.43 126.92 1017.86 121.987 cv
1019.4 118.885 1020.47 116.853 1020.88 116.243 cv
1020.88 116.243 li
1020.88 116.243 li
1022.35 114.048 1023.91 113.256 1025.06 112.999 cv
1016.26 134.283 1006.87 159.584 1004.09 175.179 cv
1004.05 175.599 1004.06 189.683 1004.05 211.78 cv
f
1002.14 526.811 mo
996.71 526.811 li
996.676 522.589 996.645 518.733 996.618 515.289 cv
1002.05 515.289 li
1002.08 518.733 1002.11 522.589 1002.14 526.811 cv
f
1001.73 701.141 mo
998.196 701.141 li
998.18 699.202 998.164 697.26 998.149 695.323 cv
998.13 694.045 998.115 692.759 998.101 691.469 cv
1001.73 691.469 li
1001.73 697.249 li
1001.73 701.141 li
f
1001.73 270.965 mo
998.482 270.965 li
998.495 267.669 998.506 264.445 998.515 261.294 cv
1001.73 261.294 li
1001.73 266.13 li
1001.73 270.965 li
f
1004.67 825.467 mo
1003.42 825.467 li
1003.42 787.368 li
1004.35 787.368 li
1004.46 800.62 1004.57 813.402 1004.67 825.467 cv
.866667 .870588 .87451 rgb
f
1004.23 772.744 mo
1003.42 772.744 li
1003.42 734.646 li
1003.91 734.646 li
1004.01 747.539 1004.12 760.297 1004.23 772.744 cv
f
1051.88 979.613 mo
1046.44 979.613 li
1046.5 972.253 li
1046.73 948.099 li
1052.16 948.099 li
1051.93 972.253 li
1051.88 979.613 li
1052.27 936.564 mo
1046.84 936.564 li
1046.87 933.388 li
1046.95 922.178 li
1046.95 922.178 1047.01 915.456 1047.11 903.703 cv
1052.55 903.703 li
1052.44 915.456 1052.38 922.178 1052.38 922.178 cv
1052.3 933.388 li
1052.27 936.564 li
1052.65 892.168 mo
1047.21 892.168 li
1047.55 852.99 1048.17 780.873 1048.76 708.798 cv
1054.2 708.798 li
1053.61 780.873 1052.99 852.99 1052.65 892.168 cv
1054.29 697.249 mo
1051.27 697.249 li
1051.27 691.469 li
1048.92 691.469 li
1048.95 688.728 1048.98 685.969 1049.02 683.236 cv
1049.06 678.115 1049.1 673.013 1049.15 667.944 cv
1054.58 667.944 li
1054.54 673.013 1054.5 678.115 1054.45 683.236 cv
1054.39 687.256 1054.37 691.332 1054.31 695.323 cv
1054.3 695.966 1054.3 696.605 1054.29 697.249 cv
1054.68 656.409 mo
1049.25 656.409 li
1049.69 604.163 1050.08 556.409 1050.31 526.811 cv
1055.75 526.811 li
1055.51 556.409 1055.12 604.163 1054.68 656.409 cv
.882353 .886274 .890196 rgb
f
1054.58 667.944 mo
1049.15 667.944 li
1049.18 664.078 1049.21 660.232 1049.25 656.409 cv
1054.68 656.409 li
1054.65 660.232 1054.62 664.078 1054.58 667.944 cv
.933333 .611765 .596078 rgb
f
1055.84 515.289 mo
1050.41 515.289 li
1050.44 511.224 1050.47 507.732 1050.49 504.873 cv
1050.52 499.126 1050.55 495.928 1050.55 495.871 cv
1050.55 495.758 1050.55 494.767 1050.52 492.814 cv
1050.27 472.745 1048.93 357.946 1048.57 277.679 cv
1054.01 277.679 li
1054.37 357.946 1055.71 472.745 1055.95 492.814 cv
1055.98 494.767 1055.98 495.758 1055.98 495.871 cv
1055.98 495.928 1055.95 499.126 1055.92 504.873 cv
1055.9 507.732 1055.87 511.224 1055.84 515.289 cv
1053.96 266.13 mo
1051.27 266.13 li
1051.27 261.294 li
1048.51 261.294 li
1048.49 255.269 1048.48 249.525 1048.48 244.135 cv
1048.42 240.002 1048.42 235.926 1048.42 232.048 cv
1048.42 224.749 1048.41 217.952 1048.41 211.78 cv
1053.85 211.78 li
1053.85 217.952 1053.85 224.749 1053.86 232.048 cv
1053.86 235.926 1053.86 240.002 1053.91 244.135 cv
1053.92 250.949 1053.93 258.331 1053.96 266.13 cv
.882353 .886274 .890196 rgb
f
1045.28 148.995 mo
1038.72 131.898 1032.84 118.303 1031.75 116.497 cv
1032.84 118.305 1038.73 131.896 1045.28 148.995 cv
1031.08 115.497 mo
1030.15 114.276 1029.19 113.615 1028.35 113.265 cv
1028.84 113.467 1029.36 113.773 1029.91 114.233 cv
1030.3 114.571 1030.69 114.988 1031.08 115.497 cv
1 1 1 rgb
f
1054.2 708.798 mo
1048.76 708.798 li
1048.79 706.24 1048.81 703.696 1048.83 701.141 cv
1051.27 701.141 li
1051.27 697.249 li
1054.29 697.249 li
1054.26 701.097 1054.23 704.945 1054.2 708.798 cv
.933333 .611765 .596078 rgb
f
1052.55 903.703 mo
1047.11 903.703 li
1047.14 900.274 1047.17 896.412 1047.21 892.168 cv
1052.65 892.168 li
1052.61 896.412 1052.58 900.274 1052.55 903.703 cv
f
1052.16 948.099 mo
1046.73 948.099 li
1046.84 936.564 li
1052.27 936.564 li
1052.16 948.099 li
f
1054.01 277.679 mo
1048.57 277.679 li
1048.56 275.412 1048.55 273.174 1048.54 270.965 cv
1051.27 270.965 li
1051.27 266.13 li
1053.96 266.13 li
1053.97 269.889 1053.99 273.737 1054.01 277.679 cv
f
1053.85 211.78 mo
1048.41 211.78 li
1048.4 189.683 1048.41 175.599 1048.37 175.179 cv
1045.59 159.581 1036.19 134.274 1027.39 112.987 cv
1027.45 112.987 li
1027.73 113.044 1028.03 113.131 1028.35 113.265 cv
1029.19 113.615 1030.15 114.276 1031.08 115.497 cv
1031.3 115.797 1031.53 116.13 1031.75 116.497 cv
1031.75 116.497 li
1032.84 118.303 1038.72 131.898 1045.28 148.995 cv
1047.55 154.925 1049.9 161.276 1052.16 167.705 cv
1052.21 167.875 li
1052.87 170.479 1053.4 172.942 1053.8 175.179 cv
1053.84 175.599 1053.84 189.683 1053.85 211.78 cv
f
1055.75 526.811 mo
1050.31 526.811 li
1050.35 522.589 1050.38 518.733 1050.41 515.289 cv
1055.84 515.289 li
1055.81 518.733 1055.78 522.589 1055.75 526.811 cv
f
1051.27 701.141 mo
1048.83 701.141 li
1048.84 699.202 1048.86 697.26 1048.88 695.323 cv
1048.89 694.045 1048.91 692.759 1048.92 691.469 cv
1051.27 691.469 li
1051.27 697.249 li
1051.27 701.141 li
f
1051.27 270.965 mo
1048.54 270.965 li
1048.53 267.669 1048.52 264.445 1048.51 261.294 cv
1051.27 261.294 li
1051.27 266.13 li
1051.27 270.965 li
f
1077.35 980.264 mo
1077.3 987.737 li
1071.86 987.737 li
1071.92 980.264 li
1077.35 980.264 li
cp
0 0 0 rgb
f
983.832 862.853 mo
973.722 897.925 963.612 932.997 953.503 968.069 cv
998.724 968.069 li
998.724 862.347 li
990.638 862.516 991.918 862.684 983.832 862.853 cv
cp
.235294 .235294 .243137 rgb
f
1062.76 862.375 mo
1072.91 897.606 1083.06 932.838 1093.21 968.069 cv
1050.23 968.069 li
1050.23 862.347 li
1058.28 862.355 1054.72 862.365 1062.76 862.375 cv
cp
f
296.999 932.132 mo
295.554 934.086 291.821 938.614 285.942 942.388 cv
284.174 943.523 282.205 944.598 280.044 945.499 cv
278.829 946.023 277.535 946.489 276.183 946.885 cv
274.068 947.5 271.807 947.953 269.399 948.176 cv
265.171 948.568 260.914 948.224 256.864 947.234 cv
255.546 946.905 254.258 946.518 253.003 946.055 cv
247.68 944.154 242.887 941.104 239.204 937.111 cv
238.712 936.576 238.239 936.029 237.802 935.474 cv
237.053 934.538 236.367 933.574 235.775 932.591 cv
232.787 927.788 231.442 922.496 230.968 917.133 cv
230.961 917.123 li
230.862 915.959 230.81 914.805 230.792 913.642 cv
230.662 908.393 231.238 903.151 231.813 898.328 cv
231.854 897.992 231.888 897.646 231.928 897.31 cv
232.014 896.539 232.106 895.778 232.194 895.033 cv
232.744 890.254 233.15 885.904 232.74 882.469 cv
232.563 881.017 232.251 879.732 231.738 878.658 cv
231.306 877.734 230.728 876.959 229.988 876.353 cv
229.646 876.073 229.251 875.815 228.807 875.586 cv
227.63 874.952 226.235 874.565 224.64 874.415 cv
223.571 874.305 222.411 874.306 221.171 874.415 cv
217.733 874.693 213.64 875.78 209.011 877.673 cv
208.805 877.751 208.599 877.829 208.398 877.917 cv
207.586 878.25 206.764 878.63 205.94 879.05 cv
202.238 880.873 198.432 883.437 194.787 886.736 cv
194 887.444 193.221 888.187 192.451 888.965 cv
189.61 891.854 186.895 895.217 184.447 899.056 cv
183.871 899.966 183.303 900.91 182.757 901.868 cv
180.856 905.234 179.154 908.933 177.723 912.969 cv
177.342 914.036 176.979 915.133 176.651 916.262 cv
175.418 920.332 174.47 924.721 173.868 929.439 cv
173.71 930.728 173.571 932.046 173.469 933.38 cv
173.334 934.979 173.243 936.603 173.186 938.259 cv
161.843 937.914 li
162.003 932.359 162.676 926.785 163.822 921.339 cv
163.978 920.551 164.149 919.766 164.329 918.975 cv
165.42 914.388 166.824 909.91 168.552 905.643 cv
168.803 904.982 169.063 904.357 169.342 903.719 cv
170.35 901.357 171.448 899.073 172.651 896.87 cv
173.612 895.106 174.624 893.403 175.689 891.762 cv
176.029 891.22 176.391 890.69 176.759 890.17 cv
179.905 885.546 183.485 881.452 187.44 877.942 cv
187.901 877.524 188.369 877.117 188.842 876.719 cv
193.462 872.835 198.566 869.707 204.037 867.423 cv
204.605 867.193 205.157 866.96 205.722 866.746 cv
206.35 866.505 206.968 866.271 207.583 866.051 cv
215.277 863.298 222.001 862.397 227.648 863.374 cv
228.298 863.482 228.936 863.613 229.547 863.788 cv
231.175 864.2 232.706 864.797 234.135 865.553 cv
235.218 866.126 236.231 866.799 237.147 867.533 cv
242.097 871.563 243.847 877.107 244.181 883.263 cv
244.23 884.055 244.239 884.845 244.244 885.652 cv
244.247 889.861 243.726 894.285 243.2 898.658 cv
243.189 898.746 243.184 898.844 243.164 898.938 cv
243.089 899.579 243.015 900.221 242.931 900.868 cv
242.371 905.776 241.901 910.722 242.206 915.317 cv
242.246 916.033 242.313 916.746 242.408 917.44 cv
242.976 921.962 244.449 926.064 247.535 929.401 cv
247.928 929.823 248.346 930.243 248.787 930.636 cv
249.493 931.274 250.243 931.874 251.052 932.42 cv
251.059 932.43 li
254.546 934.834 258.86 936.383 263.317 936.829 cv
264.587 936.958 265.869 936.999 267.14 936.939 cv
267.553 936.931 267.963 936.896 268.373 936.863 cv
273.002 936.442 276.888 934.758 279.962 932.757 cv
281.314 931.876 282.521 930.939 283.551 930.022 cv
285.717 928.118 287.169 926.322 287.879 925.367 cv
296.999 932.132 li
.921569 .823529 .615686 rgb
f
173.868 929.439 mo
173.71 930.728 173.571 932.046 173.469 933.38 cv
171.537 931.907 169.784 930.226 168.256 928.372 cv
166.466 926.214 164.97 923.841 163.822 921.339 cv
163.978 920.551 164.149 919.766 164.329 918.975 cv
165.896 921.815 167.884 924.387 170.21 926.537 cv
171.357 927.609 172.585 928.576 173.868 929.439 cv
.866667 .741176 .521569 rgb
f
177.723 912.969 mo
177.342 914.036 176.979 915.133 176.651 916.262 cv
175.263 915.087 174.006 913.803 172.861 912.418 cv
171.136 910.341 169.679 908.05 168.552 905.643 cv
168.803 904.982 169.063 904.357 169.342 903.719 cv
170.828 906.287 172.682 908.606 174.815 910.584 cv
175.736 911.45 176.714 912.239 177.723 912.969 cv
f
184.447 899.056 mo
183.871 899.966 183.303 900.91 182.757 901.868 cv
181.617 900.765 180.56 899.581 179.602 898.319 cv
178.024 896.282 176.714 894.073 175.689 891.762 cv
176.029 891.22 176.391 890.69 176.759 890.17 cv
178.086 892.531 179.728 894.689 181.62 896.565 cv
182.509 897.466 183.456 898.289 184.447 899.056 cv
f
192.391 883.698 mo
193.119 884.769 193.918 885.782 194.787 886.736 cv
194 887.444 193.221 888.187 192.451 888.965 cv
191.562 887.727 190.778 886.421 190.086 885.07 cv
188.913 882.801 188.031 880.398 187.44 877.942 cv
187.901 877.524 188.369 877.117 188.842 876.719 cv
189.712 879.21 190.91 881.56 192.391 883.698 cv
f
207.583 866.051 mo
207.4 868.476 207.508 870.917 207.915 873.274 cv
208.163 874.775 208.535 876.237 209.011 877.673 cv
208.805 877.751 208.599 877.829 208.398 877.917 cv
207.586 878.25 206.764 878.63 205.94 879.05 cv
205.54 877.229 205.317 875.388 205.251 873.54 cv
205.149 871.258 205.308 868.982 205.722 866.746 cv
206.35 866.505 206.968 866.271 207.583 866.051 cv
f
229.547 863.788 mo
228.059 865.822 226.843 868.007 225.94 870.301 cv
225.401 871.645 224.961 873.021 224.64 874.415 cv
223.571 874.305 222.411 874.306 221.171 874.415 cv
221.802 872.579 222.589 870.818 223.528 869.149 cv
224.683 867.059 226.068 865.117 227.648 863.374 cv
228.298 863.482 228.936 863.613 229.547 863.788 cv
f
244.181 883.263 mo
244.23 884.055 244.239 884.845 244.244 885.652 cv
242.626 884.814 240.934 884.133 239.204 883.624 cv
237.082 882.988 234.905 882.604 232.74 882.469 cv
232.563 881.017 232.251 879.732 231.738 878.658 cv
234.641 879.102 237.478 879.927 240.13 881.113 cv
241.54 881.733 242.894 882.456 244.181 883.263 cv
f
243.164 898.938 mo
243.089 899.579 243.015 900.221 242.931 900.868 cv
240.865 899.941 238.703 899.264 236.517 898.845 cv
234.957 898.538 233.381 898.375 231.813 898.328 cv
231.854 897.992 231.888 897.646 231.928 897.31 cv
232.014 896.539 232.106 895.778 232.194 895.033 cv
233.895 895.306 235.573 895.713 237.195 896.264 cv
239.282 896.949 241.289 897.847 243.164 898.938 cv
f
242.206 915.317 mo
242.246 916.033 242.313 916.746 242.408 917.44 cv
240.622 917.035 238.799 916.802 236.989 916.736 cv
234.968 916.656 232.94 916.798 230.968 917.133 cv
230.961 917.123 li
230.862 915.959 230.81 914.805 230.792 913.642 cv
232.97 913.566 235.151 913.704 237.274 914.069 cv
238.965 914.347 240.608 914.764 242.206 915.317 cv
f
251.052 932.42 mo
248.236 932.406 245.438 932.799 242.781 933.559 cv
241.065 934.04 239.394 934.694 237.802 935.474 cv
237.053 934.538 236.367 933.574 235.775 932.591 cv
237.868 931.813 240.026 931.266 242.219 930.938 cv
244.405 930.6 246.612 930.507 248.787 930.636 cv
249.493 931.274 250.243 931.874 251.052 932.42 cv
f
267.14 936.939 mo
265.258 938.066 263.524 939.382 261.959 940.873 cv
259.959 942.764 258.249 944.914 256.864 947.234 cv
255.546 946.905 254.258 946.518 253.003 946.055 cv
255.042 943.261 257.495 940.796 260.245 938.814 cv
261.235 938.085 262.257 937.428 263.317 936.829 cv
264.587 936.958 265.869 936.999 267.14 936.939 cv
f
283.551 930.022 mo
282.278 932.391 281.333 934.914 280.747 937.49 cv
280.137 940.136 279.911 942.832 280.044 945.499 cv
278.829 946.023 277.535 946.489 276.183 946.885 cv
276.319 943.397 276.98 939.948 278.187 936.718 cv
278.683 935.347 279.276 934.021 279.962 932.757 cv
281.314 931.876 282.521 930.939 283.551 930.022 cv
f
173.439 933.738 mo
171.032 933.738 li
171.067 932.966 171.109 932.201 171.16 931.441 cv
171.897 932.122 172.667 932.769 173.469 933.38 cv
173.459 933.499 173.449 933.619 173.439 933.738 cv
173.868 929.439 mo
173.048 928.888 172.251 928.294 171.483 927.658 cv
171.542 927.107 171.605 926.56 171.671 926.017 cv
172.222 921.698 173.063 917.656 174.148 913.88 cv
174.932 914.717 175.765 915.512 176.651 916.262 cv
175.418 920.332 174.47 924.721 173.868 929.439 cv
173.868 929.439 li
177.723 912.969 mo
176.811 912.309 175.925 911.601 175.082 910.832 cv
175.227 910.399 175.375 909.971 175.526 909.547 cv
176.867 905.765 178.446 902.28 180.204 899.086 cv
180.997 900.063 181.851 900.991 182.757 901.868 cv
180.856 905.234 179.154 908.933 177.723 912.969 cv
177.723 912.969 li
184.447 899.056 mo
183.467 898.298 182.531 897.485 181.652 896.597 cv
181.85 896.273 182.05 895.951 182.251 895.634 cv
184.699 891.795 187.413 888.433 190.254 885.543 cv
190.271 885.526 190.289 885.508 190.306 885.491 cv
190.943 886.692 191.655 887.856 192.451 888.965 cv
189.61 891.854 186.895 895.217 184.447 899.056 cv
184.447 899.056 li
194.787 886.736 mo
193.918 885.782 193.119 884.769 192.391 883.698 cv
192.362 883.656 192.333 883.615 192.305 883.573 cv
192.4 883.486 192.495 883.4 192.59 883.315 cv
196.235 880.016 200.042 877.451 203.744 875.628 cv
204.272 875.358 204.801 875.105 205.326 874.87 cv
205.434 876.271 205.636 877.666 205.94 879.05 cv
202.238 880.873 198.432 883.437 194.787 886.736 cv
194.787 886.736 li
209.011 877.673 mo
208.588 876.398 208.248 875.103 208.003 873.778 cv
212.146 872.177 215.833 871.247 218.975 870.993 cv
219.598 870.939 220.201 870.911 220.782 870.911 cv
221.357 870.911 221.912 870.938 222.444 870.993 cv
222.484 870.997 222.524 871.001 222.564 871.005 cv
222.037 872.108 221.573 873.246 221.171 874.415 cv
221.171 874.415 li
217.733 874.693 213.64 875.78 209.011 877.673 cv
209.011 877.673 li
229.982 876.344 mo
229.64 876.064 229.251 875.815 228.807 875.586 cv
228.807 875.586 li
227.63 874.952 226.235 874.565 224.64 874.415 cv
224.855 873.481 225.124 872.555 225.44 871.641 cv
225.851 871.791 226.242 871.966 226.611 872.165 cv
227.054 872.393 227.45 872.651 227.791 872.932 cv
228.531 873.537 229.11 874.313 229.541 875.236 cv
229.711 875.586 229.853 875.954 229.982 876.344 cv
.827451 .741176 .552941 rgb
f
173.469 933.38 mo
173.469 933.38 li
172.667 932.769 171.897 932.122 171.16 931.441 cv
171.193 930.944 171.231 930.45 171.273 929.958 cv
171.331 929.185 171.403 928.417 171.483 927.658 cv
172.251 928.294 173.048 928.888 173.868 929.439 cv
173.868 929.439 li
173.71 930.728 173.571 932.046 173.469 933.38 cv
.776471 .666667 .466667 rgb
f
176.651 916.262 mo
176.651 916.262 li
175.765 915.512 174.932 914.717 174.148 913.88 cv
174.248 913.531 174.35 913.184 174.455 912.84 cv
174.653 912.159 174.863 911.49 175.082 910.832 cv
175.925 911.601 176.811 912.309 177.723 912.969 cv
177.723 912.969 li
177.342 914.036 176.979 915.133 176.651 916.262 cv
f
182.757 901.868 mo
182.757 901.868 li
181.851 900.991 180.997 900.063 180.204 899.086 cv
180.322 898.872 180.441 898.658 180.561 898.446 cv
180.916 897.822 181.281 897.204 181.652 896.597 cv
182.531 897.485 183.467 898.298 184.447 899.056 cv
184.447 899.056 li
183.871 899.966 183.303 900.91 182.757 901.868 cv
f
192.451 888.965 mo
192.451 888.965 li
191.655 887.856 190.943 886.692 190.306 885.491 cv
190.966 884.825 191.632 884.187 192.305 883.573 cv
192.333 883.615 192.362 883.656 192.391 883.698 cv
193.119 884.769 193.918 885.782 194.787 886.736 cv
194.787 886.736 li
194 887.444 193.221 888.187 192.451 888.965 cv
f
205.94 879.05 mo
205.94 879.05 li
205.636 877.666 205.434 876.271 205.326 874.87 cv
205.619 874.74 205.911 874.614 206.202 874.495 cv
206.402 874.407 206.608 874.329 206.814 874.251 cv
207.214 874.087 207.611 873.93 208.003 873.778 cv
208.248 875.103 208.588 876.398 209.011 877.673 cv
209.011 877.673 li
208.805 877.751 208.599 877.829 208.398 877.917 cv
207.586 878.25 206.764 878.63 205.94 879.05 cv
f
224.64 874.415 mo
224.108 874.36 223.553 874.333 222.977 874.333 cv
222.396 874.333 221.794 874.36 221.171 874.415 cv
221.171 874.415 li
221.573 873.246 222.037 872.108 222.564 871.005 cv
223.612 871.112 224.572 871.323 225.44 871.641 cv
225.124 872.555 224.855 873.481 224.64 874.415 cv
224.64 874.415 li
f
244.637 925.16 mo
244.618 925.136 244.598 925.113 244.579 925.089 cv
243.78 923.467 243.212 921.736 242.824 919.921 cv
243.22 921.765 243.808 923.518 244.637 925.16 cv
.898039 .898039 .898039 rgb
f
244.579 925.089 mo
242.66 922.737 241.467 920.043 240.768 917.118 cv
241.317 917.21 241.864 917.317 242.408 917.44 cv
242.408 917.44 li
242.513 918.284 242.65 919.111 242.824 919.921 cv
243.212 921.736 243.78 923.467 244.579 925.089 cv
242.206 915.317 mo
241.581 915.101 240.948 914.905 240.309 914.73 cv
240.274 914.495 240.242 914.258 240.212 914.019 cv
240.117 913.324 240.05 912.611 240.009 911.896 cv
239.755 908.063 240.039 903.989 240.466 899.895 cv
241.3 900.181 242.123 900.506 242.931 900.868 cv
242.493 904.703 242.111 908.56 242.11 912.255 cv
242.109 913.29 242.139 914.312 242.206 915.317 cv
243.164 898.938 mo
242.369 898.475 241.55 898.047 240.711 897.656 cv
240.719 897.586 240.727 897.517 240.735 897.447 cv
240.819 896.799 240.893 896.158 240.967 895.516 cv
240.987 895.422 240.992 895.324 241.003 895.236 cv
241.431 891.68 241.856 888.09 241.998 884.609 cv
242.759 884.924 243.509 885.272 244.244 885.652 cv
244.244 885.652 li
244.247 889.861 243.726 894.285 243.2 898.658 cv
243.189 898.746 243.184 898.844 243.164 898.938 cv
243.164 898.938 li
244.181 883.263 mo
243.488 882.828 242.776 882.419 242.046 882.036 cv
242.041 881.296 242.03 880.569 241.985 879.841 cv
241.797 876.331 241.145 873.024 239.7 870.079 cv
242.727 873.764 243.911 878.321 244.181 883.263 cv
.827451 .741176 .552941 rgb
f
244.244 885.652 mo
243.509 885.272 242.759 884.924 241.998 884.609 cv
242.03 883.81 242.048 883.016 242.047 882.23 cv
242.047 882.165 242.047 882.101 242.046 882.036 cv
242.776 882.419 243.488 882.828 244.181 883.263 cv
244.181 883.263 li
244.23 884.055 244.239 884.845 244.244 885.652 cv
.776471 .666667 .466667 rgb
f
242.931 900.868 mo
242.931 900.868 li
242.123 900.506 241.3 900.181 240.466 899.895 cv
240.544 899.149 240.626 898.402 240.711 897.656 cv
241.55 898.047 242.369 898.475 243.164 898.938 cv
243.164 898.938 li
243.089 899.579 243.015 900.221 242.931 900.868 cv
f
242.408 917.44 mo
241.864 917.317 241.317 917.21 240.768 917.118 cv
240.581 916.338 240.43 915.541 240.309 914.73 cv
240.948 914.905 241.581 915.101 242.206 915.317 cv
242.206 915.317 li
242.246 916.033 242.313 916.746 242.408 917.44 cv
f
296.999 932.132 mo
293.919 929.847 li
293.92 929.845 293.922 929.844 293.923 929.842 cv
296.999 932.132 li
.898039 .898039 .898039 rgb
f
265.962 948.334 mo
262.88 948.334 259.817 947.956 256.864 947.234 cv
257.411 946.317 258.01 945.426 258.657 944.568 cv
260.342 944.796 262.049 944.913 263.761 944.913 cv
264.908 944.913 266.056 944.861 267.203 944.754 cv
269.61 944.531 271.871 944.078 273.986 943.463 cv
274.894 943.197 275.776 942.9 276.625 942.575 cv
276.386 943.996 276.239 945.437 276.183 946.885 cv
276.183 946.885 li
274.068 947.5 271.807 947.953 269.399 948.176 cv
268.254 948.282 267.107 948.334 265.962 948.334 cv
253.003 946.055 mo
253.003 946.055 li
247.68 944.154 242.887 941.104 239.204 937.111 cv
238.712 936.576 238.239 936.029 237.802 935.474 cv
238.019 935.367 238.239 935.263 238.459 935.161 cv
241.913 938.436 246.158 940.973 250.807 942.633 cv
252.062 943.096 253.35 943.483 254.667 943.812 cv
254.701 943.821 254.735 943.829 254.769 943.837 cv
254.151 944.549 253.561 945.29 253.003 946.055 cv
280.044 945.499 mo
279.97 944.009 280.008 942.509 280.162 941.014 cv
281.435 940.374 282.63 939.682 283.746 938.966 cv
288.674 935.802 292.102 932.106 293.919 929.847 cv
296.999 932.132 li
295.554 934.086 291.821 938.614 285.942 942.388 cv
284.174 943.523 282.205 944.598 280.044 945.499 cv
280.044 945.499 li
235.775 932.591 mo
235.775 932.591 li
235.775 932.591 li
235.503 932.145 235.24 931.692 234.986 931.234 cv
235.18 931.516 235.393 931.783 235.605 932.052 cv
235.728 932.207 235.853 932.362 235.98 932.516 cv
235.912 932.541 235.844 932.566 235.775 932.591 cv
.827451 .741176 .552941 rgb
f
237.802 935.474 mo
237.053 934.538 236.367 933.574 235.775 932.591 cv
235.775 932.591 li
235.844 932.566 235.912 932.541 235.98 932.516 cv
236.309 932.912 236.653 933.304 237.007 933.69 cv
237.474 934.195 237.958 934.686 238.459 935.161 cv
238.239 935.263 238.019 935.367 237.802 935.474 cv
237.802 935.474 li
.776471 .666667 .466667 rgb
f
256.864 947.234 mo
255.546 946.905 254.258 946.518 253.003 946.055 cv
253.003 946.055 li
253.561 945.29 254.151 944.549 254.769 943.837 cv
256.047 944.146 257.345 944.39 258.657 944.568 cv
258.01 945.426 257.411 946.317 256.864 947.234 cv
256.864 947.234 li
f
276.183 946.885 mo
276.183 946.885 li
276.239 945.437 276.386 943.996 276.625 942.575 cv
277.041 942.415 277.448 942.249 277.848 942.077 cv
278.646 941.744 279.417 941.388 280.162 941.014 cv
280.008 942.509 279.97 944.009 280.044 945.499 cv
280.044 945.499 li
278.829 946.023 277.535 946.489 276.183 946.885 cv
f
188.162 951.892 mo
147.882 951.892 li
147.882 938.753 li
147.882 935.983 150.127 933.738 152.897 933.738 cv
183.147 933.738 li
185.916 933.738 188.162 935.983 188.162 938.753 cv
188.162 951.892 li
.239216 .239216 .239216 rgb
f
184.755 947.008 mo
181.96 946.458 179.119 946.045 176.237 945.774 cv
176.237 938.747 li
176.237 935.987 173.988 933.738 171.217 933.738 cv
179.735 933.738 li
182.506 933.738 184.755 935.987 184.755 938.747 cv
184.755 947.008 li
.392157 .392157 .392157 rgb
f
147.882 938.753 mo
147.882 938.747 li
147.882 938.171 147.98 937.618 148.16 937.102 cv
147.98 937.619 147.882 938.174 147.882 938.753 cv
.8 .8 .8 rgb
f
147.882 947.746 mo
147.882 938.753 li
147.882 938.174 147.98 937.619 148.16 937.102 cv
148.843 935.147 150.709 933.738 152.902 933.738 cv
160.207 933.738 li
158.235 934.237 156.728 935.903 156.464 937.951 cv
156.422 938.21 156.4 938.476 156.4 938.747 cv
156.4 946.167 li
153.512 946.554 150.67 947.083 147.882 947.746 cv
.192157 .192157 .192157 rgb
f
162.059 933.738 mo
160.207 933.738 li
160.602 933.638 161.016 933.585 161.442 933.585 cv
162.071 933.585 li
162.067 933.636 162.063 933.687 162.059 933.738 cv
1 1 1 rgb
f
164.381 933.738 mo
162.059 933.738 li
162.063 933.687 162.067 933.636 162.071 933.585 cv
165.611 933.585 li
165.187 933.585 164.775 933.638 164.381 933.738 cv
.929412 .843137 .654902 rgb
f
156.422 946.164 mo
156.422 938.594 li
156.422 938.376 156.436 938.161 156.464 937.951 cv
156.847 935.567 158.921 933.738 161.42 933.738 cv
160.207 933.738 li
160.207 933.738 li
162.059 933.738 li
164.381 933.738 li
162.213 934.289 160.602 936.258 160.602 938.594 cv
160.602 945.709 li
159.199 945.827 157.805 945.98 156.422 946.164 cv
.317647 .317647 .317647 rgb
f
156.464 937.951 mo
156.728 935.903 158.235 934.237 160.207 933.738 cv
161.42 933.738 li
158.921 933.738 156.847 935.567 156.464 937.951 cv
.27451 .27451 .27451 rgb
f
254.776 1032.15 mo
254.776 1063.8 237.842 1091.48 212.536 1106.62 cv
203.178 1112.24 192.671 1116.13 181.45 1117.87 cv
177.6 1118.47 173.659 1118.81 169.649 1118.89 cv
169.116 1118.91 168.57 1118.91 168.025 1118.91 cv
161.642 1118.91 155.418 1118.21 149.433 1116.89 cv
149.285 1116.87 149.137 1116.84 148.989 1116.8 cv
112.485 1108.64 84.6816 1077.48 81.5582 1039.33 cv
81.5468 1039.14 81.524 1038.95 81.5126 1038.75 cv
81.3422 1036.57 81.2626 1034.37 81.2626 1032.15 cv
81.2626 1031.63 li
81.5014 992.084 108.192 958.806 144.537 948.617 cv
144.685 948.572 144.821 948.526 144.969 948.492 cv
151.783 946.618 158.95 945.551 166.333 945.414 cv
166.889 945.392 167.458 945.392 168.025 945.392 cv
174.067 945.392 179.951 946.005 185.641 947.187 cv
197.283 949.583 208.084 954.319 217.511 960.894 cv
240.034 976.558 254.776 1002.63 254.776 1032.15 cv
.239216 .239216 .239216 rgb
f
212.621 1106.57 mo
220.111 1102.07 226.864 1096.48 232.661 1090.01 cv
226.864 1096.48 220.109 1102.08 212.621 1106.57 cv
232.734 1089.93 mo
232.739 1089.93 232.742 1089.92 232.747 1089.92 cv
232.742 1089.92 232.739 1089.93 232.734 1089.93 cv
81.2626 1031.63 mo
81.2628 1031.6 81.263 1031.57 81.2633 1031.53 cv
81.263 1031.57 81.2628 1031.6 81.2626 1031.63 cv
81.2638 1031.47 mo
81.2639 1031.46 81.2639 1031.45 81.264 1031.44 cv
81.2639 1031.45 81.2639 1031.46 81.2638 1031.47 cv
81.2647 1031.36 mo
81.2647 1031.35 81.2648 1031.35 81.2648 1031.35 cv
81.2648 1031.35 81.2647 1031.36 81.2647 1031.36 cv
.8 .8 .8 rgb
f
168.025 1118.91 mo
161.642 1118.91 155.418 1118.21 149.433 1116.89 cv
149.285 1116.87 149.137 1116.84 148.989 1116.8 cv
112.485 1108.64 84.6816 1077.48 81.5582 1039.33 cv
81.5468 1039.14 81.524 1038.95 81.5126 1038.75 cv
81.3422 1036.57 81.2626 1034.37 81.2626 1032.15 cv
81.2626 1031.63 li
81.2626 1031.63 li
81.2628 1031.6 81.263 1031.57 81.2633 1031.53 cv
81.2635 1031.51 81.2636 1031.49 81.2638 1031.47 cv
81.2639 1031.46 81.2639 1031.45 81.264 1031.44 cv
81.2642 1031.41 81.2645 1031.38 81.2647 1031.36 cv
81.2647 1031.36 81.2648 1031.35 81.2648 1031.35 cv
81.5581 999.812 98.6708 972.287 124.07 957.34 cv
116.563 970.084 112.236 984.917 112.133 1000.76 cv
112.133 1001.28 li
112.133 1003.5 112.213 1005.7 112.383 1007.88 cv
112.394 1008.08 112.418 1008.27 112.429 1008.46 cv
115.552 1046.61 143.356 1077.77 179.86 1085.93 cv
180.008 1085.97 180.155 1086 180.303 1086.02 cv
186.289 1087.34 192.513 1088.03 198.896 1088.03 cv
199.441 1088.03 199.986 1088.03 200.52 1088.02 cv
204.529 1087.94 208.471 1087.6 212.321 1087 cv
223.326 1085.3 233.639 1081.52 242.851 1076.08 cv
239.939 1081.02 236.549 1085.66 232.747 1089.92 cv
232.742 1089.92 232.739 1089.93 232.734 1089.93 cv
232.71 1089.96 232.685 1089.99 232.661 1090.01 cv
226.864 1096.48 220.111 1102.07 212.621 1106.57 cv
212.593 1106.58 212.565 1106.6 212.536 1106.62 cv
212.536 1106.62 li
203.178 1112.24 192.671 1116.13 181.45 1117.87 cv
177.6 1118.47 173.659 1118.81 169.649 1118.89 cv
169.116 1118.91 168.57 1118.91 168.025 1118.91 cv
.192157 .192157 .192157 rgb
f
214.426 1039.87 mo
199.787 1039.87 182.875 1032.67 174.005 1026.21 cv
159.326 1015.51 138.914 990.97 151.341 972.07 cv
156.364 964.432 166.399 961.88 176.473 961.88 cv
183.67 961.88 190.888 963.184 196.305 964.867 cv
211.568 969.609 224.914 980.352 231.981 994.787 cv
234.41 999.748 244.055 1019.45 235.957 1030.56 cv
231.027 1037.33 223.129 1039.87 214.426 1039.87 cv
.317647 .317647 .317647 rgb
f
121.714 329.636 mo
119.881 329.636 118.395 328.15 118.395 326.317 cv
118.395 294.713 118.278 236.296 118.276 235.71 cv
118.275 235.377 118.324 235.047 118.423 234.729 cv
118.477 234.55 123.977 216.652 129.917 198.602 cv
142.241 161.154 144.318 159.603 145.693 158.576 cv
149.391 155.813 153.616 155.771 157.343 155.734 cv
161.582 155.692 163.667 155.07 165.031 154.307 cv
168.602 152.31 170.066 147.926 170.711 144.008 cv
171.052 143.79 172.781 142.73 174.395 143.382 cv
176.298 144.152 176.932 146.766 176.754 147.44 cv
175.278 153.017 172.596 157.17 168.783 159.783 cv
165.117 162.296 161.021 162.336 157.408 162.371 cv
154.406 162.401 151.8 162.427 149.858 163.756 cv
146.833 167.92 134.841 203.899 124.915 236.198 cv
124.927 242 125.034 296.271 125.034 326.317 cv
125.034 328.15 123.548 329.636 121.714 329.636 cv
.309804 .407843 .243137 rgb
f
121.711 329.64 mo
119.879 329.64 118.392 328.153 118.392 326.321 cv
118.392 294.712 118.273 236.299 118.273 235.715 cv
118.273 235.383 118.326 235.051 118.419 234.733 cv
118.472 234.547 123.981 216.651 129.915 198.597 cv
135.591 181.35 139.094 171.72 141.355 166.246 cv
141.357 166.247 li
139.096 171.721 135.593 181.355 129.917 198.602 cv
123.977 216.652 118.477 234.55 118.423 234.729 cv
118.324 235.047 118.275 235.377 118.276 235.71 cv
118.278 236.296 118.395 294.713 118.395 326.317 cv
118.395 328.15 119.881 329.636 121.714 329.636 cv
122 329.636 122.277 329.6 122.542 329.532 cv
122.544 329.533 122.545 329.533 122.547 329.534 cv
122.282 329.6 122.003 329.64 121.711 329.64 cv
143.407 161.698 mo
143.406 161.698 143.407 161.698 143.406 161.698 cv
144.581 159.404 145.183 158.952 145.687 158.571 cv
149.391 155.81 153.612 155.769 157.342 155.73 cv
157.553 155.728 157.728 155.726 157.868 155.726 cv
157.697 155.729 157.522 155.732 157.343 155.734 cv
153.616 155.771 149.391 155.813 145.693 158.576 cv
145.186 158.954 144.583 159.404 143.407 161.698 cv
.8 .8 .8 rgb
f
121.714 329.636 mo
119.881 329.636 118.395 328.15 118.395 326.317 cv
118.395 294.713 118.278 236.296 118.276 235.71 cv
118.275 235.377 118.324 235.047 118.423 234.729 cv
118.477 234.55 123.977 216.652 129.917 198.602 cv
135.593 181.355 139.096 171.721 141.357 166.247 cv
141.812 166.481 142.273 166.704 142.74 166.917 cv
140.472 172.496 137.025 182.035 131.575 198.597 cv
125.627 216.651 120.131 234.547 120.078 234.733 cv
119.985 235.051 119.932 235.383 119.932 235.715 cv
119.932 236.299 120.051 294.712 120.051 326.321 cv
120.051 327.873 121.11 329.172 122.542 329.532 cv
122.277 329.6 122 329.636 121.714 329.636 cv
144.738 162.354 mo
144.288 162.146 143.844 161.928 143.407 161.698 cv
144.583 159.404 145.186 158.954 145.693 158.576 cv
149.391 155.813 153.616 155.771 157.343 155.734 cv
157.522 155.732 157.697 155.729 157.868 155.726 cv
157.947 155.725 158.016 155.725 158.074 155.725 cv
159.978 155.725 150.761 156.025 147.346 158.571 cv
146.797 158.986 146.133 159.486 144.738 162.354 cv
.247059 .32549 .196078 rgb
f
195.775 93.3213 mo
195.775 158.412 li
170.711 158.412 li
170.711 118.386 li
170.711 111.469 173.525 105.203 178.052 100.663 cv
178.185 100.53 178.305 100.411 178.438 100.291 cv
179.845 98.9371 181.398 97.7553 183.084 96.773 cv
186.814 94.5824 191.142 93.3213 195.775 93.3213 cv
.309804 .407843 .243137 rgb
f
178.438 155.105 mo
178.438 117.28 li
179.969 119.034 181.292 120.974 182.367 123.062 cv
182.367 149.322 li
181.292 151.411 179.969 153.351 178.438 155.105 cv
182.367 114.193 mo
181.165 112.795 179.85 111.496 178.438 110.311 cv
178.438 100.291 li
179.643 99.1314 180.955 98.0979 182.367 97.208 cv
182.367 114.193 li
.247059 .32549 .196078 rgb
f
203.409 89.7368 mo
203.409 167.651 li
182.367 167.651 li
182.367 89.7368 li
182.367 84.9579 186.243 81.0947 191.009 81.0947 cv
194.766 81.0947 li
199.545 81.0947 203.409 84.9579 203.409 89.7368 cv
.627451 .627451 .627451 rgb
f
217.348 162.487 mo
217.348 167.651 li
168.428 167.651 li
168.428 162.487 li
168.428 159.527 170.831 157.124 173.791 157.124 cv
211.985 157.124 li
214.958 157.124 217.348 159.527 217.348 162.487 cv
.568627 .568627 .568627 rgb
f
222.522 166.803 mo
222.522 194.974 li
163.26 194.974 li
163.26 166.803 li
222.522 166.803 li
.27451 .356863 .223529 rgb
f
165.545 359.656 mo
220.237 359.656 li
238.535 359.656 253.368 344.822 253.368 326.524 cv
253.368 221.702 li
253.368 203.404 238.535 188.571 220.237 188.571 cv
165.545 188.571 li
147.247 188.571 132.414 203.404 132.414 221.702 cv
132.414 326.524 li
132.414 344.822 147.247 359.656 165.545 359.656 cv
.215686 .298039 .164706 rgb
f
184.504 166.803 mo
177.726 166.803 li
177.726 166.802 li
184.504 166.802 li
184.504 166.803 li
173.079 166.803 mo
173.074 166.803 li
173.074 166.802 li
173.079 166.802 li
173.079 166.803 li
.454902 .454902 .454902 rgb
f
184.504 188.571 mo
172.224 188.571 li
172.224 179.839 li
184.504 179.839 li
184.504 188.571 li
184.504 174.834 mo
172.224 174.834 li
172.224 167.651 li
173.074 167.651 li
173.074 166.803 li
173.079 166.803 li
173.079 167.651 li
177.726 167.651 li
177.726 166.803 li
184.504 166.803 li
184.504 174.834 li
.219608 .286274 .180392 rgb
f
186.788 359.656 mo
174.508 359.656 li
156.214 359.656 141.372 344.827 141.372 326.52 cv
141.372 283.149 li
153.652 283.149 li
153.652 326.52 li
153.652 326.52 li
153.652 344.827 168.494 359.656 186.788 359.656 cv
153.652 271.028 mo
141.372 271.028 li
141.372 221.696 li
141.372 204.172 154.993 189.835 172.224 188.653 cv
172.224 188.571 li
184.504 188.571 li
184.504 188.653 li
167.273 189.835 153.652 204.172 153.652 221.696 cv
153.652 271.028 li
.172549 .239216 .133333 rgb
f
212.101 359.656 mo
199.821 359.656 li
218.115 359.656 232.944 344.827 232.944 326.52 cv
232.944 283.149 li
245.224 283.149 li
245.224 326.52 li
245.224 344.827 230.395 359.656 212.101 359.656 cv
.372549 .439216 .333333 rgb
f
214.384 188.571 mo
202.105 188.571 li
202.105 179.839 li
214.384 179.839 li
214.384 188.571 li
.419608 .486274 .380392 rgb
f
245.224 271.028 mo
232.944 271.028 li
232.944 221.696 li
232.944 204.172 219.337 189.835 202.105 188.653 cv
202.105 188.571 li
214.384 188.571 li
214.384 188.653 li
231.616 189.835 245.224 204.172 245.224 221.696 cv
245.224 271.028 li
.372549 .439216 .333333 rgb
f
214.384 166.803 mo
213.264 166.803 li
213.264 166.802 li
214.384 166.802 li
214.384 166.803 li
208.618 166.803 mo
202.105 166.803 li
202.105 166.802 li
208.618 166.802 li
208.618 166.803 li
.654902 .654902 .654902 rgb
f
214.384 174.834 mo
202.105 174.834 li
202.105 166.803 li
208.618 166.803 li
208.618 167.651 li
213.264 167.651 li
213.264 166.803 li
214.384 166.803 li
214.384 174.834 li
.419608 .486274 .380392 rgb
f
259.989 275.98 mo
259.989 278.197 li
259.989 278.502 259.962 278.794 259.91 279.086 cv
259.485 281.396 257.48 283.149 255.051 283.149 cv
130.725 283.149 li
128.309 283.149 126.291 281.396 125.879 279.086 cv
125.813 278.794 125.787 278.502 125.787 278.197 cv
125.787 275.98 li
125.787 273.245 128.003 271.028 130.725 271.028 cv
255.051 271.028 li
257.785 271.028 259.989 273.245 259.989 275.98 cv
.145098 .207843 .105882 rgb
f
259.91 279.086 mo
259.485 281.396 257.48 283.149 255.051 283.149 cv
130.725 283.149 li
128.309 283.149 126.291 281.396 125.879 279.086 cv
259.91 279.086 li
.117647 .168627 .0862745 rgb
f
222.522 174.834 mo
222.522 179.839 li
163.26 179.839 li
163.26 174.834 li
222.522 174.834 li
.145098 .207843 .105882 rgb
f
222.522 178.167 mo
222.522 179.839 li
163.26 179.839 li
163.26 178.167 li
222.522 178.167 li
.117647 .168627 .0862745 rgb
f
197.538 96.3094 mo
197.538 94.6596 196.2 93.3228 194.551 93.3228 cv
192.901 93.3228 191.564 94.6596 191.564 96.3094 cv
191.564 97.9596 192.901 99.2964 194.551 99.2964 cv
196.2 99.2964 197.538 97.9596 197.538 96.3094 cv
.305882 .301961 .317647 rgb
f
194.103 166.803 mo
184.504 166.803 li
184.504 166.802 li
194.103 166.802 li
194.103 166.803 li
.611765 .611765 .611765 rgb
f
194.103 188.571 mo
184.504 188.571 li
184.504 179.839 li
194.103 179.839 li
194.103 188.571 li
194.103 174.834 mo
184.504 174.834 li
184.504 166.803 li
194.103 166.803 li
194.103 174.834 li
.34902 .423529 .301961 rgb
f
196.386 359.656 mo
186.788 359.656 li
168.494 359.656 153.652 344.827 153.652 326.52 cv
153.652 283.149 li
163.263 283.149 li
163.263 326.52 li
163.263 344.827 178.092 359.656 196.386 359.656 cv
163.263 271.028 mo
153.652 271.028 li
153.652 221.696 li
153.652 204.172 167.273 189.835 184.504 188.653 cv
184.504 188.571 li
194.103 188.571 li
194.103 188.653 li
176.871 189.835 163.263 204.172 163.263 221.696 cv
163.263 271.028 li
.294118 .368627 .25098 rgb
f
163.263 279.086 mo
153.652 279.086 li
153.652 271.028 li
163.263 271.028 li
163.263 279.086 li
.231373 .290196 .196078 rgb
f
163.263 283.149 mo
153.652 283.149 li
153.652 279.086 li
163.263 279.086 li
163.263 283.149 li
.207843 .254902 .180392 rgb
f
194.103 178.167 mo
184.504 178.167 li
184.504 174.834 li
194.103 174.834 li
194.103 178.167 li
.231373 .290196 .196078 rgb
f
194.103 179.839 mo
184.504 179.839 li
184.504 178.167 li
194.103 178.167 li
194.103 179.839 li
.207843 .254902 .180392 rgb
f
172.224 166.803 mo
171.009 166.803 li
171.711 166.475 172.4 166.124 173.074 165.751 cv
173.074 166.802 li
172.224 166.802 li
172.224 166.803 li
.454902 .454902 .454902 rgb
f
172.224 167.651 mo
169.026 167.651 li
169.698 167.389 170.359 167.106 171.009 166.803 cv
172.224 166.803 li
172.224 167.651 li
.219608 .286274 .180392 rgb
f
173.074 166.803 mo
172.224 166.803 li
172.224 166.802 li
173.074 166.802 li
173.074 166.803 li
.364706 .364706 .364706 rgb
f
173.074 167.651 mo
172.224 167.651 li
172.224 166.803 li
173.074 166.803 li
173.074 167.651 li
.176471 .227451 .145098 rgb
f
168.428 162.506 mo
168.428 162.487 li
168.428 159.527 170.831 157.124 173.791 157.124 cv
176.495 157.124 li
176.2 157.403 175.9 157.674 175.593 157.94 cv
175.195 158.19 174.832 158.49 174.514 158.832 cv
172.655 160.294 170.613 161.532 168.428 162.506 cv
.454902 .454902 .454902 rgb
f
189.961 157.124 mo
187.013 157.124 li
187.013 151.176 li
188.384 148.412 189.388 145.434 189.961 142.306 cv
189.961 157.124 li
.666667 .666667 .666667 rgb
f
189.961 130.071 mo
189.388 126.943 188.384 123.965 187.013 121.202 cv
187.013 85.0508 li
187.013 83.9092 187.212 82.8202 187.571 81.8115 cv
187.571 81.8115 li
187.571 81.8115 li
188.567 81.3735 189.655 81.1211 190.797 81.1079 cv
190.253 82.3026 189.961 83.6437 189.961 85.0508 cv
189.961 130.071 li
f
177.726 166.802 mo
173.079 166.802 li
173.079 165.748 li
174.716 164.842 176.27 163.804 177.726 162.648 cv
177.726 166.802 li
.611765 .611765 .611765 rgb
f
177.726 166.803 mo
173.079 166.803 li
173.079 166.802 li
177.726 166.802 li
177.726 166.803 li
.509804 .509804 .509804 rgb
f
177.726 167.651 mo
173.079 167.651 li
173.079 166.803 li
177.726 166.803 li
177.726 167.651 li
.298039 .360784 .262745 rgb
f
174.532 158.818 mo
174.843 158.487 175.195 158.195 175.581 157.951 cv
175.238 158.248 174.888 158.537 174.532 158.818 cv
.611765 .611765 .611765 rgb
f
200.873 83.6173 mo
200.272 83.0172 199.582 82.5055 198.826 82.1029 cv
199.583 82.5048 200.273 83.0166 200.873 83.6172 cv
200.873 83.6172 200.873 83.6173 200.873 83.6173 cv
1 1 1 rgb
f
200.98 157.124 mo
196.333 157.124 li
196.333 98.7067 li
197.064 98.1623 197.538 97.2913 197.538 96.3094 cv
197.538 95.3277 197.064 94.4568 196.333 93.9125 cv
196.333 85.0508 li
196.333 83.6569 196.04 82.3158 195.51 81.1343 cv
196.704 81.2327 197.825 81.5719 198.826 82.1029 cv
199.582 82.5055 200.272 83.0172 200.873 83.6173 cv
200.94 84.0817 200.98 84.5596 200.98 85.0508 cv
200.98 157.124 li
.701961 .701961 .701961 rgb
f
196.333 98.7067 mo
196.333 93.9125 li
197.064 94.4568 197.538 95.3277 197.538 96.3094 cv
197.538 97.2913 197.064 98.1623 196.333 98.7067 cv
.443137 .443137 .454902 rgb
f
213.264 166.802 mo
208.618 166.802 li
208.618 162.487 li
208.618 159.527 206.215 157.124 203.254 157.124 cv
207.901 157.124 li
210.861 157.124 213.264 159.527 213.264 162.487 cv
213.264 166.802 li
.654902 .654902 .654902 rgb
f
213.264 166.803 mo
208.618 166.803 li
208.618 166.802 li
213.264 166.802 li
213.264 166.803 li
.72549 .72549 .72549 rgb
f
213.264 167.651 mo
208.618 167.651 li
208.618 166.803 li
213.264 166.803 li
213.264 167.651 li
.537255 .588235 .505882 rgb
f
187.013 157.124 mo
183.241 157.124 li
184.696 155.286 185.962 153.295 187.013 151.176 cv
187.013 157.124 li
.501961 .501961 .501961 rgb
f
182.367 89.7001 mo
182.367 89.6966 182.367 89.6934 182.367 89.6899 cv
182.367 89.6934 182.367 89.6966 182.367 89.7001 cv
182.367 89.6561 mo
182.367 89.655 182.367 89.654 182.367 89.653 cv
182.367 89.6541 182.367 89.6549 182.367 89.6561 cv
182.367 89.6184 mo
182.367 89.6139 182.367 89.6093 182.368 89.6047 cv
182.367 89.6091 182.367 89.6141 182.367 89.6184 cv
182.368 89.5803 mo
182.368 89.5733 182.368 89.5662 182.368 89.5593 cv
182.368 89.5663 182.368 89.5733 182.368 89.5803 cv
182.369 89.5376 mo
182.369 89.531 182.369 89.524 182.369 89.5173 cv
182.369 89.5243 182.369 89.5307 182.369 89.5376 cv
182.37 89.5063 mo
182.43 87.205 183.384 85.1343 184.901 83.6235 cv
183.386 85.1363 182.43 87.2085 182.37 89.5063 cv
.8 .8 .8 rgb
f
182.367 149.322 mo
182.367 123.062 li
184.395 127.001 185.54 131.464 185.54 136.189 cv
185.54 140.917 184.395 145.382 182.367 149.322 cv
187.013 121.202 mo
185.757 118.669 184.191 116.317 182.367 114.193 cv
182.367 89.7368 li
182.367 89.7247 182.367 89.7122 182.367 89.7001 cv
182.367 89.6966 182.367 89.6934 182.367 89.6899 cv
182.367 89.6786 182.367 89.6673 182.367 89.6561 cv
182.367 89.6549 182.367 89.6541 182.367 89.653 cv
182.367 89.6415 182.367 89.6299 182.367 89.6184 cv
182.367 89.6141 182.367 89.6091 182.368 89.6047 cv
182.368 89.5965 182.368 89.5885 182.368 89.5803 cv
182.368 89.5733 182.368 89.5663 182.368 89.5593 cv
182.368 89.552 182.369 89.545 182.369 89.5376 cv
182.369 89.5307 182.369 89.5243 182.369 89.5173 cv
182.369 89.5136 182.369 89.51 182.37 89.5063 cv
182.43 87.2085 183.386 85.1363 184.901 83.6235 cv
185.663 82.8641 186.567 82.246 187.571 81.8115 cv
187.212 82.8202 187.013 83.9092 187.013 85.0508 cv
187.013 121.202 li
.501961 .501961 .501961 rgb
f
156.751 164.981 mo
140.875 164.981 127.959 152.065 127.959 136.189 cv
127.959 120.313 140.875 107.397 156.751 107.397 cv
172.626 107.397 185.542 120.313 185.542 136.189 cv
185.542 152.065 172.626 164.981 156.751 164.981 cv
156.751 102.425 mo
138.102 102.425 122.987 117.542 122.987 136.189 cv
122.987 154.836 138.102 169.953 156.751 169.953 cv
175.397 169.953 190.513 154.836 190.513 136.189 cv
190.513 117.542 175.397 102.425 156.751 102.425 cv
.305882 .301961 .317647 rgb
f
168.106 162.647 mo
168.213 162.601 168.321 162.553 168.428 162.506 cv
168.428 162.506 li
168.32 162.554 168.214 162.6 168.106 162.647 cv
.8 .8 .8 rgb
f
174.51 158.836 mo
174.512 158.835 174.513 158.833 174.514 158.832 cv
174.52 158.827 174.526 158.823 174.532 158.818 cv
174.531 158.819 174.53 158.82 174.529 158.821 cv
174.523 158.826 174.516 158.831 174.51 158.836 cv
175.581 157.951 mo
175.585 157.948 175.589 157.944 175.593 157.94 cv
175.595 157.939 175.596 157.938 175.598 157.937 cv
175.594 157.941 175.59 157.945 175.586 157.948 cv
175.584 157.949 175.582 157.95 175.581 157.951 cv
.454902 .454902 .454902 rgb
f
176.497 157.124 mo
176.495 157.124 li
177.174 156.483 177.823 155.808 178.438 155.105 cv
178.438 155.107 li
177.823 155.81 177.175 156.483 176.497 157.124 cv
.247059 .32549 .196078 rgb
f
178.438 155.107 mo
178.438 155.105 li
179.969 153.351 181.292 151.411 182.367 149.322 cv
182.367 149.326 li
181.292 151.413 179.969 153.354 178.438 155.107 cv
.196078 .258824 .156863 rgb
f
178.438 117.28 mo
178.255 117.071 178.069 116.864 177.88 116.66 cv
177.899 116.677 177.918 116.695 177.937 116.712 cv
178.106 116.896 178.273 117.082 178.438 117.271 cv
178.438 117.28 li
.247059 .32549 .196078 rgb
f
182.367 123.062 mo
181.292 120.974 179.969 119.034 178.438 117.28 cv
178.438 117.271 li
179.969 119.024 181.292 120.965 182.367 123.052 cv
182.367 123.062 li
.196078 .258824 .156863 rgb
f
168.428 162.506 mo
168.428 162.506 li
170.613 161.532 172.655 160.294 174.514 158.832 cv
174.513 158.833 174.512 158.835 174.51 158.836 cv
172.653 160.296 170.611 161.533 168.428 162.506 cv
175.593 157.94 mo
175.9 157.674 176.2 157.403 176.495 157.124 cv
176.497 157.124 li
176.203 157.401 175.903 157.672 175.598 157.937 cv
175.596 157.938 175.595 157.939 175.593 157.94 cv
.364706 .364706 .364706 rgb
f
174.529 158.821 mo
174.53 158.82 174.531 158.819 174.532 158.818 cv
174.888 158.537 175.238 158.248 175.581 157.951 cv
175.582 157.95 175.584 157.949 175.586 157.948 cv
175.24 158.248 174.888 158.538 174.529 158.821 cv
.490196 .490196 .490196 rgb
f
182.367 149.326 mo
182.367 149.322 li
184.395 145.382 185.54 140.917 185.54 136.189 cv
185.54 131.464 184.395 127.001 182.367 123.062 cv
182.367 123.052 li
184.396 126.993 185.542 131.459 185.542 136.189 cv
185.542 140.918 184.396 145.384 182.367 149.326 cv
.4 .4 .4 rgb
f
141.493 160.597 mo
139.931 159.617 138.469 158.491 137.127 157.24 cv
137.104 157.214 137.081 157.189 137.058 157.164 cv
138.417 158.446 139.902 159.597 141.493 160.597 cv
127.175 152.488 mo
127.173 152.485 127.171 152.481 127.17 152.479 cv
127.172 152.482 127.173 152.485 127.175 152.488 cv
127.16 152.461 mo
124.498 147.636 122.985 142.088 122.985 136.189 cv
122.985 125.438 128.008 115.865 135.833 109.684 cv
128.008 115.867 122.987 125.441 122.987 136.189 cv
122.987 142.089 124.5 147.634 127.16 152.461 cv
.8 .8 .8 rgb
f
158.352 166.589 mo
149.958 166.589 142.394 162.983 137.127 157.24 cv
138.469 158.491 139.931 159.617 141.493 160.597 cv
145.911 163.375 151.142 164.983 156.745 164.983 cv
160.777 164.983 164.618 164.15 168.106 162.647 cv
168.214 162.6 168.32 162.554 168.428 162.506 cv
168.428 162.506 li
170.611 161.533 172.653 160.296 174.51 158.836 cv
174.516 158.831 174.523 158.826 174.529 158.821 cv
174.888 158.538 175.24 158.248 175.586 157.948 cv
175.59 157.945 175.594 157.941 175.598 157.937 cv
175.903 157.672 176.203 157.401 176.497 157.124 cv
176.497 157.124 li
177.175 156.483 177.823 155.81 178.438 155.107 cv
179.969 153.354 181.292 151.413 182.367 149.326 cv
182.367 149.326 li
184.396 145.384 185.542 140.918 185.542 136.189 cv
185.542 131.459 184.396 126.993 182.367 123.052 cv
182.367 123.052 li
181.292 120.965 179.969 119.024 178.438 117.271 cv
178.273 117.082 178.106 116.896 177.937 116.712 cv
183.599 121.967 187.146 129.472 187.146 137.794 cv
187.146 153.672 174.229 166.589 158.352 166.589 cv
133.699 160.841 mo
131.108 158.428 128.901 155.61 127.175 152.488 cv
127.173 152.485 127.172 152.482 127.17 152.479 cv
127.166 152.472 127.163 152.467 127.16 152.461 cv
124.5 147.634 122.987 142.089 122.987 136.189 cv
122.987 125.441 128.008 115.867 135.833 109.684 cv
141.584 105.14 148.849 102.429 156.745 102.429 cv
166.556 102.429 175.384 106.61 181.544 113.288 cv
175.503 107.54 167.352 104.035 158.352 104.035 cv
139.712 104.035 124.592 119.143 124.592 137.794 cv
124.592 146.702 128.044 154.814 133.699 160.841 cv
.243137 .243137 .254902 rgb
f
191.793 142.313 mo
183.922 142.313 li
183.922 132.343 li
191.793 132.343 li
191.793 142.313 li
cp
.568627 .568627 .568627 rgb
f
101.756 709.864 mo
99.3168 709.864 97.3407 707.888 97.3407 705.449 cv
97.3407 663.406 97.1836 652.915 97.1821 652.135 cv
97.1803 651.693 97.2455 651.253 97.3771 650.83 cv
97.4492 650.593 104.765 626.781 112.668 602.769 cv
129.063 552.952 131.826 550.888 133.654 549.522 cv
138.574 545.846 144.195 545.791 149.153 545.742 cv
154.792 545.686 157.566 544.859 159.381 543.844 cv
164.131 541.186 166.078 535.354 166.936 530.142 cv
167.39 529.852 169.691 528.442 171.836 529.31 cv
174.37 530.334 175.212 533.811 174.975 534.708 cv
173.013 542.127 169.444 547.652 164.372 551.128 cv
159.495 554.471 154.046 554.525 149.24 554.572 cv
145.245 554.611 141.779 554.646 139.195 556.413 cv
135.171 561.953 119.218 609.816 106.014 652.785 cv
106.029 660.504 106.171 665.479 106.171 705.449 cv
106.171 707.888 104.194 709.864 101.756 709.864 cv
.478431 .478431 .478431 rgb
f
101.75 709.869 mo
99.3135 709.869 97.3353 707.892 97.3353 705.454 cv
97.3353 663.404 97.1767 652.919 97.1767 652.142 cv
97.1767 651.7 97.247 651.259 97.3711 650.835 cv
97.4414 650.588 104.77 626.781 112.665 602.763 cv
120.215 579.819 124.875 567.007 127.884 559.726 cv
127.886 559.728 li
124.878 567.01 120.219 579.825 112.668 602.769 cv
104.765 626.781 97.4492 650.593 97.3771 650.83 cv
97.2455 651.253 97.1803 651.693 97.1821 652.135 cv
97.1836 652.915 97.3407 663.406 97.3407 705.449 cv
97.3407 707.888 99.3168 709.864 101.756 709.864 cv
102.135 709.864 102.504 709.816 102.855 709.726 cv
102.858 709.727 102.861 709.728 102.863 709.729 cv
102.51 709.816 102.139 709.869 101.75 709.869 cv
130.614 553.676 mo
130.613 553.676 130.613 553.676 130.612 553.675 cv
132.175 550.624 132.975 550.023 133.646 549.516 cv
138.573 545.842 144.19 545.789 149.152 545.736 cv
149.44 545.734 149.677 545.732 149.866 545.73 cv
149.633 545.736 149.396 545.739 149.153 545.742 cv
144.195 545.791 138.574 545.846 133.654 549.522 cv
132.98 550.026 132.179 550.624 130.614 553.676 cv
.8 .8 .8 rgb
f
101.756 709.864 mo
99.3168 709.864 97.3407 707.888 97.3407 705.449 cv
97.3407 663.406 97.1836 652.915 97.1821 652.135 cv
97.1803 651.693 97.2455 651.253 97.3771 650.83 cv
97.4492 650.593 104.765 626.781 112.668 602.769 cv
120.219 579.825 124.878 567.01 127.886 559.728 cv
128.491 560.038 129.105 560.336 129.726 560.619 cv
126.709 568.04 122.123 580.731 114.873 602.763 cv
106.96 626.781 99.6491 650.588 99.5785 650.835 cv
99.4547 651.259 99.3844 651.7 99.3844 652.142 cv
99.3844 652.919 99.543 663.404 99.543 705.454 cv
99.543 707.518 100.952 709.247 102.855 709.726 cv
102.504 709.816 102.135 709.864 101.756 709.864 cv
132.384 554.548 mo
131.785 554.273 131.195 553.982 130.614 553.676 cv
132.179 550.624 132.98 550.026 133.654 549.522 cv
138.574 545.846 144.195 545.791 149.153 545.742 cv
149.396 545.739 149.633 545.736 149.866 545.73 cv
149.966 545.73 150.053 545.729 150.127 545.729 cv
152.651 545.729 140.396 546.129 135.854 549.516 cv
135.123 550.068 134.24 550.732 132.384 554.548 cv
.384314 .384314 .384314 rgb
f
200.28 462.713 mo
200.28 549.304 li
166.936 549.304 li
166.936 496.057 li
166.936 486.855 170.681 478.52 176.703 472.479 cv
176.879 472.303 177.038 472.144 177.215 471.985 cv
179.087 470.184 181.153 468.612 183.396 467.305 cv
188.359 464.391 194.116 462.713 200.28 462.713 cv
.478431 .478431 .478431 rgb
f
177.215 544.905 mo
177.215 494.586 li
179.252 496.92 181.012 499.501 182.442 502.278 cv
182.442 537.211 li
181.012 539.989 179.252 542.572 177.215 544.905 cv
182.442 490.48 mo
180.843 488.618 179.095 486.892 177.215 485.314 cv
177.215 471.985 li
178.819 470.442 180.565 469.067 182.442 467.883 cv
182.442 490.48 li
.384314 .384314 .384314 rgb
f
210.435 457.945 mo
210.435 561.596 li
182.442 561.596 li
182.442 457.945 li
182.442 451.587 187.6 446.448 193.939 446.448 cv
198.938 446.448 li
205.295 446.448 210.435 451.587 210.435 457.945 cv
.627451 .627451 .627451 rgb
f
228.978 554.726 mo
228.978 561.596 li
163.899 561.596 li
163.899 554.726 li
163.899 550.787 167.095 547.591 171.034 547.591 cv
221.843 547.591 li
225.799 547.591 228.978 550.787 228.978 554.726 cv
.568627 .568627 .568627 rgb
f
170.08 561.596 mo
164.694 561.596 li
166.553 560.87 168.352 560.024 170.08 559.068 cv
170.08 561.596 li
163.899 554.75 mo
163.899 554.726 li
163.899 550.787 167.095 547.591 171.034 547.591 cv
174.631 547.591 li
174.239 547.961 173.839 548.323 173.432 548.676 cv
172.902 549.008 172.418 549.409 171.994 549.865 cv
169.521 551.808 166.805 553.455 163.899 554.75 cv
.454902 .454902 .454902 rgb
f
192.544 547.591 mo
188.623 547.591 li
188.623 539.678 li
190.448 536.001 191.783 532.041 192.544 527.878 cv
192.544 547.591 li
.666667 .666667 .666667 rgb
f
192.544 511.602 mo
191.783 507.439 190.448 503.48 188.623 499.803 cv
188.623 451.711 li
188.623 450.192 188.889 448.744 189.366 447.401 cv
189.366 447.401 li
189.366 447.401 li
190.69 446.819 192.138 446.483 193.657 446.465 cv
192.933 448.055 192.544 449.838 192.544 451.711 cv
192.544 511.602 li
f
176.268 561.596 mo
170.087 561.596 li
170.087 559.064 li
172.264 557.859 174.331 556.477 176.268 554.94 cv
176.268 561.596 li
172.02 549.844 mo
172.433 549.404 172.901 549.016 173.414 548.692 cv
172.958 549.087 172.494 549.47 172.02 549.844 cv
.611765 .611765 .611765 rgb
f
207.062 449.803 mo
206.268 449.012 205.36 448.336 204.363 447.802 cv
205.361 448.335 206.269 449.011 207.062 449.803 cv
207.062 449.803 207.062 449.803 207.062 449.803 cv
1 1 1 rgb
f
207.203 547.591 mo
201.022 547.591 li
201.022 451.711 li
201.022 449.857 200.633 448.073 199.927 446.501 cv
201.525 446.633 203.025 447.088 204.363 447.802 cv
205.36 448.336 206.268 449.012 207.062 449.803 cv
207.15 450.422 207.203 451.057 207.203 451.711 cv
207.203 547.591 li
.701961 .701961 .701961 rgb
f
223.546 561.596 mo
217.365 561.596 li
217.365 554.726 li
217.365 550.787 214.168 547.591 210.229 547.591 cv
216.411 547.591 li
220.349 547.591 223.546 550.787 223.546 554.726 cv
223.546 561.596 li
.654902 .654902 .654902 rgb
f
188.623 547.591 mo
183.605 547.591 li
185.539 545.147 187.226 542.495 188.623 539.678 cv
188.623 547.591 li
.501961 .501961 .501961 rgb
f
182.442 537.211 mo
182.442 502.278 li
185.14 507.518 186.664 513.455 186.664 519.74 cv
186.664 526.03 185.14 531.969 182.442 537.211 cv
f
182.442 457.896 mo
182.442 457.891 182.442 457.887 182.442 457.882 cv
182.442 457.887 182.442 457.891 182.442 457.896 cv
182.443 457.837 mo
182.443 457.836 182.443 457.835 182.443 457.833 cv
182.443 457.835 182.443 457.836 182.443 457.837 cv
182.443 457.787 mo
182.443 457.781 182.443 457.775 182.444 457.769 cv
182.443 457.775 182.443 457.781 182.443 457.787 cv
182.444 457.735 mo
182.444 457.727 182.444 457.719 182.445 457.71 cv
182.444 457.719 182.444 457.727 182.444 457.735 cv
182.445 457.68 mo
182.445 457.671 182.446 457.661 182.446 457.652 cv
182.446 457.662 182.445 457.671 182.445 457.68 cv
182.446 457.638 mo
182.528 454.506 183.855 451.695 185.954 449.674 cv
183.858 451.697 182.528 454.511 182.446 457.638 cv
.8 .8 .8 rgb
f
188.623 499.803 mo
186.952 496.434 184.869 493.303 182.442 490.48 cv
182.442 457.945 li
182.442 457.929 182.442 457.912 182.442 457.896 cv
182.442 457.891 182.442 457.887 182.442 457.882 cv
182.443 457.867 182.443 457.852 182.443 457.837 cv
182.443 457.836 182.443 457.835 182.443 457.833 cv
182.443 457.818 182.443 457.802 182.443 457.787 cv
182.443 457.781 182.443 457.775 182.444 457.769 cv
182.444 457.758 182.444 457.747 182.444 457.735 cv
182.444 457.727 182.444 457.719 182.445 457.71 cv
182.445 457.7 182.445 457.69 182.445 457.68 cv
182.445 457.671 182.446 457.662 182.446 457.652 cv
182.446 457.648 182.446 457.643 182.446 457.638 cv
182.528 454.511 183.858 451.697 185.954 449.674 cv
186.938 448.727 188.092 447.953 189.366 447.401 cv
188.889 448.744 188.623 450.192 188.623 451.711 cv
188.623 499.803 li
.501961 .501961 .501961 rgb
f
148.364 558.044 mo
127.245 558.044 110.062 540.861 110.062 519.74 cv
110.062 498.621 127.245 481.438 148.364 481.438 cv
169.483 481.438 186.667 498.621 186.667 519.74 cv
186.667 540.861 169.483 558.044 148.364 558.044 cv
148.364 474.824 mo
123.557 474.824 103.449 494.934 103.449 519.74 cv
103.449 544.547 123.557 564.657 148.364 564.657 cv
173.171 564.657 193.28 544.547 193.28 519.74 cv
193.28 494.934 173.171 474.824 148.364 474.824 cv
.305882 .301961 .317647 rgb
f
163.415 554.962 mo
163.577 554.893 163.738 554.822 163.899 554.75 cv
163.899 554.75 li
163.738 554.822 163.577 554.893 163.415 554.962 cv
128.033 552.19 mo
125.967 550.891 124.034 549.4 122.257 547.743 cv
122.227 547.709 122.197 547.677 122.166 547.643 cv
123.966 549.34 125.93 550.865 128.033 552.19 cv
109.02 541.424 mo
109.017 541.42 109.015 541.416 109.013 541.411 cv
109.015 541.416 109.017 541.419 109.02 541.424 cv
108.999 541.386 mo
105.458 534.968 103.446 527.588 103.446 519.74 cv
103.446 505.211 110.341 492.3 121.035 484.092 cv
110.341 492.303 103.449 505.216 103.449 519.74 cv
103.449 527.587 105.462 534.966 108.999 541.386 cv
.8 .8 .8 rgb
f
174.633 547.591 mo
174.631 547.591 li
175.535 546.738 176.397 545.842 177.215 544.905 cv
177.215 544.908 li
176.398 545.843 175.536 546.739 174.633 547.591 cv
177.215 494.586 mo
176.971 494.307 176.724 494.032 176.473 493.761 cv
176.5 493.786 176.527 493.811 176.554 493.836 cv
176.778 494.079 176.997 494.324 177.215 494.573 cv
177.215 494.586 li
.384314 .384314 .384314 rgb
f
177.215 544.908 mo
177.215 544.905 li
179.252 542.572 181.012 539.989 182.442 537.211 cv
182.442 537.217 li
181.012 539.993 179.252 542.576 177.215 544.908 cv
182.442 502.278 mo
181.012 499.501 179.252 496.92 177.215 494.586 cv
177.215 494.573 li
179.252 496.905 181.012 499.487 182.442 502.264 cv
182.442 502.278 li
.305882 .305882 .305882 rgb
f
171.989 549.87 mo
171.99 549.868 171.992 549.866 171.994 549.865 cv
172.003 549.857 172.011 549.851 172.02 549.844 cv
172.018 549.846 172.017 549.847 172.015 549.849 cv
172.006 549.856 171.997 549.863 171.989 549.87 cv
173.414 548.692 mo
173.419 548.687 173.427 548.681 173.432 548.676 cv
173.435 548.674 173.437 548.673 173.44 548.671 cv
173.433 548.677 173.428 548.682 173.421 548.687 cv
173.419 548.689 173.416 548.69 173.414 548.692 cv
.454902 .454902 .454902 rgb
f
163.899 554.75 mo
163.899 554.75 li
166.805 553.455 169.521 551.808 171.994 549.865 cv
171.992 549.866 171.99 549.868 171.989 549.87 cv
169.518 551.812 166.803 553.457 163.899 554.75 cv
173.432 548.676 mo
173.839 548.323 174.239 547.961 174.631 547.591 cv
174.633 547.591 li
174.243 547.959 173.845 548.319 173.44 548.671 cv
173.437 548.673 173.435 548.674 173.432 548.676 cv
.364706 .364706 .364706 rgb
f
172.015 549.849 mo
172.017 549.847 172.018 549.846 172.02 549.844 cv
172.494 549.47 172.958 549.087 173.414 548.692 cv
173.416 548.69 173.419 548.689 173.421 548.687 cv
172.961 549.086 172.493 549.473 172.015 549.849 cv
.490196 .490196 .490196 rgb
f
182.442 537.217 mo
182.442 537.211 li
185.14 531.969 186.664 526.03 186.664 519.74 cv
186.664 513.455 185.14 507.518 182.442 502.278 cv
182.442 502.264 li
185.142 507.507 186.667 513.448 186.667 519.74 cv
186.667 526.032 185.142 531.974 182.442 537.217 cv
.4 .4 .4 rgb
f
150.494 560.183 mo
139.328 560.183 129.265 555.385 122.257 547.743 cv
124.034 549.4 125.967 550.891 128.033 552.19 cv
133.918 555.898 140.889 558.046 148.357 558.046 cv
153.7 558.046 158.791 556.946 163.415 554.962 cv
163.577 554.893 163.738 554.822 163.899 554.75 cv
163.899 554.75 li
166.803 553.457 169.518 551.812 171.989 549.87 cv
171.997 549.863 172.006 549.856 172.015 549.849 cv
172.493 549.473 172.961 549.086 173.421 548.687 cv
173.428 548.682 173.433 548.677 173.44 548.671 cv
173.845 548.319 174.243 547.959 174.633 547.591 cv
174.633 547.591 li
175.536 546.739 176.398 545.843 177.215 544.908 cv
179.252 542.576 181.012 539.993 182.442 537.217 cv
182.442 537.217 li
185.142 531.974 186.667 526.032 186.667 519.74 cv
186.667 513.448 185.142 507.507 182.442 502.264 cv
182.442 502.264 li
181.012 499.487 179.252 496.905 177.215 494.573 cv
176.997 494.324 176.778 494.079 176.554 493.836 cv
184.084 500.826 188.8 510.807 188.8 521.877 cv
188.8 542.999 171.616 560.183 150.494 560.183 cv
117.698 552.536 mo
114.253 549.326 111.316 545.577 109.02 541.424 cv
109.017 541.419 109.015 541.416 109.013 541.411 cv
109.008 541.403 109.003 541.394 108.999 541.386 cv
105.462 534.966 103.449 527.587 103.449 519.74 cv
103.449 505.216 110.341 492.303 121.035 484.092 cv
128.606 478.282 138.08 474.829 148.357 474.829 cv
161.409 474.829 173.153 480.391 181.348 489.275 cv
173.312 481.628 162.468 476.966 150.494 476.966 cv
125.699 476.966 105.583 497.064 105.583 521.877 cv
105.583 533.727 110.175 544.518 117.698 552.536 cv
.243137 .243137 .254902 rgb
f
194.982 527.887 mo
184.511 527.887 li
184.511 514.625 li
194.982 514.625 li
194.982 527.887 li
cp
.568627 .568627 .568627 rgb
f
225.87 776.788 mo
171.208 776.788 li
164.958 776.788 159.892 773.003 159.892 768.335 cv
159.892 754.946 li
237.187 754.946 li
237.187 768.335 li
237.187 773.003 232.12 776.788 225.87 776.788 cv
cp
.152941 .2 .0588235 rgb
f
271.405 668.635 mo
271.405 724.051 238.17 768.976 197.175 768.976 cv
156.179 768.976 122.944 724.051 122.944 668.635 cv
122.944 613.216 156.179 568.292 197.175 568.292 cv
238.17 568.292 271.405 613.216 271.405 668.635 cv
cp
f
170.238 560.934 mo
225.703 560.934 li
232.045 560.934 237.187 564.774 237.187 569.511 cv
237.187 583.097 li
158.755 583.097 li
158.755 569.511 li
158.755 564.774 163.896 560.934 170.238 560.934 cv
cp
.188235 .25098 .0823529 rgb
f
159.024 574.741 mo
159.024 574.741 153.446 587.869 151.484 596.525 cv
150.427 601.186 149.775 605.548 149.389 609.512 cv
161.964 609.512 174.539 609.512 187.113 609.512 cv
187.124 597.991 187.134 586.471 187.145 574.951 cv
177.771 574.881 168.398 574.811 159.024 574.741 cv
cp
.215686 .298039 .164706 rgb
f
149.389 609.512 mo
158.501 618.623 li
196.225 618.623 li
187.113 609.512 li
149.389 609.512 li
cp
.188235 .25098 .0823529 rgb
f
196.256 584.062 mo
187.145 574.951 li
187.113 609.512 li
196.225 618.623 li
196.256 584.062 li
cp
.266667 .329412 .101961 rgb
f
146.667 622.079 mo
145.492 627.723 144.515 634.341 144.153 641.769 cv
143.873 647.515 144.009 652.786 144.362 657.478 cv
158.612 657.548 172.863 657.617 187.113 657.688 cv
187.124 646.167 187.134 634.646 187.145 623.126 cv
173.651 622.777 160.159 622.428 146.667 622.079 cv
cp
.215686 .298039 .164706 rgb
f
144.362 657.478 mo
153.474 666.589 li
196.225 666.799 li
187.113 657.688 li
144.362 657.478 li
cp
.188235 .25098 .0823529 rgb
f
187.145 623.126 mo
196.256 632.238 li
196.225 666.799 li
187.113 657.688 li
187.145 623.126 li
cp
.266667 .329412 .101961 rgb
f
126.029 609.512 mo
133.904 617.387 li
147.394 617.387 li
139.518 609.512 li
126.029 609.512 li
cp
.188235 .25098 .0823529 rgb
f
149.103 574.842 mo
156.979 582.717 li
147.394 617.387 li
139.518 609.512 li
139.589 604.298 140.254 597.195 142.769 589.194 cv
144.605 583.35 146.951 578.545 149.103 574.842 cv
cp
.266667 .329412 .101961 rgb
f
149.103 574.842 mo
148.617 576.015 143.489 588.281 141.613 596.525 cv
140.557 601.184 139.903 605.54 139.518 609.512 cv
126.029 609.512 li
126.414 605.54 127.067 601.184 128.124 596.525 cv
130.083 587.862 135.664 574.741 135.664 574.741 cv
140.138 574.774 144.612 574.808 149.103 574.842 cv
cp
.215686 .298039 .164706 rgb
f
113.637 655.375 mo
122.95 664.688 li
139.205 664.688 li
129.891 655.375 li
113.637 655.375 li
cp
.188235 .25098 .0823529 rgb
f
132.12 620.403 mo
141.433 629.717 li
139.205 664.688 li
129.891 655.375 li
128.91 651.279 127.997 645.557 128.316 638.731 cv
128.68 630.928 130.517 624.635 132.12 620.403 cv
cp
.266667 .329412 .101961 rgb
f
113.637 655.375 mo
113.285 650.699 113.134 645.421 113.419 639.674 cv
113.788 632.25 114.76 625.632 115.933 619.984 cv
121.329 620.118 126.724 620.27 132.12 620.403 cv
130.98 625.95 130.025 632.435 129.69 639.674 cv
129.405 645.421 129.891 655.375 129.891 655.375 cv
129.891 655.375 127.88 655.459 113.637 655.375 cv
cp
.215686 .298039 .164706 rgb
f
159.024 762.41 mo
159.024 762.41 153.446 749.281 151.484 740.626 cv
150.427 735.965 149.775 731.603 149.389 727.64 cv
161.964 727.64 174.539 727.64 187.113 727.64 cv
187.124 739.16 187.134 750.68 187.145 762.2 cv
177.771 762.271 168.398 762.34 159.024 762.41 cv
cp
f
149.389 727.64 mo
158.501 718.528 li
196.225 718.528 li
187.113 727.64 li
149.389 727.64 li
cp
.188235 .25098 .0823529 rgb
f
196.256 753.089 mo
187.145 762.2 li
187.113 727.64 li
196.225 718.528 li
196.256 753.089 li
cp
.266667 .329412 .101961 rgb
f
146.667 715.072 mo
145.492 709.429 144.515 702.81 144.153 695.383 cv
143.873 689.636 144.009 684.365 144.362 679.673 cv
158.612 679.604 172.863 679.533 187.113 679.464 cv
187.124 690.984 187.134 702.504 187.145 714.024 cv
173.651 714.374 160.159 714.723 146.667 715.072 cv
cp
.215686 .298039 .164706 rgb
f
144.362 679.673 mo
153.474 670.562 li
196.225 670.353 li
187.113 679.464 li
144.362 679.673 li
cp
.188235 .25098 .0823529 rgb
f
187.145 714.024 mo
196.256 704.913 li
196.225 670.353 li
187.113 679.464 li
187.145 714.024 li
cp
.266667 .329412 .101961 rgb
f
126.029 727.64 mo
133.904 719.764 li
147.394 719.764 li
139.518 727.64 li
126.029 727.64 li
cp
.188235 .25098 .0823529 rgb
f
149.103 762.31 mo
156.979 754.434 li
147.394 719.764 li
139.518 727.64 li
139.589 732.854 140.254 739.956 142.769 747.957 cv
144.605 753.801 146.951 758.606 149.103 762.31 cv
cp
.266667 .329412 .101961 rgb
f
149.103 762.31 mo
148.617 761.136 143.489 748.87 141.613 740.626 cv
140.557 735.968 139.903 731.61 139.518 727.64 cv
126.029 727.64 li
126.414 731.61 127.067 735.968 128.124 740.626 cv
130.083 749.289 135.664 762.41 135.664 762.41 cv
140.138 762.376 144.612 762.343 149.103 762.31 cv
cp
.215686 .298039 .164706 rgb
f
113.637 679.682 mo
122.95 670.368 li
139.205 670.368 li
129.891 679.682 li
113.637 679.682 li
cp
.188235 .25098 .0823529 rgb
f
132.12 714.653 mo
141.433 705.34 li
139.205 670.368 li
129.891 679.682 li
129.162 683.843 128.625 688.973 128.805 694.831 cv
129.052 702.911 130.577 709.668 132.12 714.653 cv
cp
.266667 .329412 .101961 rgb
f
113.637 679.682 mo
113.285 684.356 113.134 689.635 113.419 695.383 cv
113.788 702.806 114.76 709.425 115.933 715.072 cv
121.329 714.938 126.724 714.787 132.12 714.653 cv
130.98 709.106 130.025 702.622 129.69 695.383 cv
129.405 689.635 129.891 679.682 129.891 679.682 cv
129.891 679.682 127.88 679.598 113.637 679.682 cv
cp
.215686 .298039 .164706 rgb
f
249.544 622.079 mo
250.719 627.723 251.696 634.341 252.058 641.769 cv
252.338 647.515 252.202 652.786 251.849 657.478 cv
237.599 657.548 223.348 657.617 209.098 657.688 cv
209.087 646.167 209.077 634.646 209.066 623.126 cv
222.559 622.777 236.052 622.428 249.544 622.079 cv
cp
.266667 .329412 .101961 rgb
f
251.849 657.478 mo
242.737 666.589 li
199.986 666.799 li
209.098 657.688 li
251.849 657.478 li
cp
.188235 .25098 .0823529 rgb
f
209.066 623.126 mo
199.955 632.238 li
199.986 666.799 li
209.098 657.688 li
209.066 623.126 li
cp
.215686 .298039 .164706 rgb
f
268.955 609.694 mo
261.079 617.57 li
247.59 617.57 li
255.465 609.694 li
268.955 609.694 li
cp
.188235 .25098 .0823529 rgb
f
245.88 575.024 mo
238.005 582.9 li
247.59 617.57 li
255.465 609.694 li
255.394 604.48 254.729 597.378 252.215 589.376 cv
250.378 583.533 248.033 578.728 245.88 575.024 cv
cp
.215686 .298039 .164706 rgb
f
245.88 575.024 mo
246.367 576.197 251.494 588.463 253.371 596.708 cv
254.427 601.366 255.08 605.723 255.465 609.694 cv
268.955 609.694 li
268.569 605.723 267.916 601.366 266.86 596.708 cv
264.9 588.044 259.32 574.924 259.32 574.924 cv
254.846 574.958 250.372 574.991 245.88 575.024 cv
cp
.266667 .329412 .101961 rgb
f
280.718 654.014 mo
271.405 663.326 li
255.151 663.326 li
264.464 654.014 li
280.718 654.014 li
cp
.188235 .25098 .0823529 rgb
f
262.235 619.042 mo
252.922 628.355 li
253.752 632.218 254.466 636.47 254.943 641.075 cv
255.809 649.438 255.688 656.956 255.15 663.326 cv
258.255 660.222 261.359 657.118 264.464 654.014 cv
265.376 649.94 266.165 644.519 265.939 638.143 cv
265.655 630.085 263.859 623.53 262.235 619.042 cv
cp
.215686 .298039 .164706 rgb
f
280.718 654.014 mo
281.07 649.338 281.221 644.06 280.936 638.313 cv
280.567 630.889 279.595 624.27 278.422 618.623 cv
273.026 618.757 267.631 618.908 262.235 619.042 cv
263.375 624.589 264.33 631.073 264.665 638.313 cv
264.95 644.06 264.464 654.014 264.464 654.014 cv
264.464 654.014 266.475 654.097 280.718 654.014 cv
cp
.266667 .329412 .101961 rgb
f
237.187 762.41 mo
237.187 762.41 242.765 749.281 244.727 740.626 cv
245.783 735.965 246.436 731.603 246.821 727.64 cv
234.247 727.64 221.672 727.64 209.098 727.64 cv
209.087 739.16 209.077 750.68 209.066 762.2 cv
218.44 762.271 227.813 762.34 237.187 762.41 cv
cp
f
246.821 727.64 mo
237.71 718.528 li
199.986 718.528 li
209.098 727.64 li
246.821 727.64 li
cp
.188235 .25098 .0823529 rgb
f
199.955 753.089 mo
209.066 762.2 li
209.098 727.64 li
199.986 718.528 li
199.955 753.089 li
cp
.215686 .298039 .164706 rgb
f
249.544 715.072 mo
250.719 709.429 251.696 702.81 252.058 695.383 cv
252.338 689.636 252.202 684.365 251.849 679.673 cv
237.599 679.604 223.348 679.533 209.098 679.464 cv
209.087 690.984 209.077 702.504 209.066 714.024 cv
222.559 714.374 236.052 714.723 249.544 715.072 cv
cp
.266667 .329412 .101961 rgb
f
251.849 679.673 mo
242.737 670.562 li
199.986 670.353 li
209.098 679.464 li
251.849 679.673 li
cp
.188235 .25098 .0823529 rgb
f
209.066 714.024 mo
199.955 704.913 li
199.986 670.353 li
209.098 679.464 li
209.066 714.024 li
cp
.215686 .298039 .164706 rgb
f
271.049 727.822 mo
263.174 719.946 li
249.685 719.946 li
257.56 727.822 li
271.049 727.822 li
cp
.188235 .25098 .0823529 rgb
f
247.975 762.492 mo
240.1 754.616 li
249.685 719.946 li
257.56 727.822 li
257.489 733.036 256.824 740.139 254.309 748.14 cv
252.473 753.984 250.127 758.789 247.975 762.492 cv
cp
.215686 .298039 .164706 rgb
f
247.975 762.492 mo
248.461 761.319 253.589 749.053 255.465 740.809 cv
256.521 736.15 257.175 731.794 257.56 727.822 cv
271.049 727.822 li
270.664 731.794 270.01 736.15 268.955 740.809 cv
266.994 749.472 261.414 762.593 261.414 762.593 cv
256.94 762.56 252.466 762.525 247.975 762.492 cv
cp
.266667 .329412 .101961 rgb
f
280.718 679.864 mo
271.405 670.551 li
255.151 670.551 li
264.464 679.864 li
280.718 679.864 li
cp
.188235 .25098 .0823529 rgb
f
262.235 714.836 mo
252.922 705.522 li
255.15 670.551 li
264.464 679.864 li
265.811 683.094 267.703 688.823 267.51 696.136 cv
267.275 705.061 264.056 711.665 262.235 714.836 cv
cp
.215686 .298039 .164706 rgb
f
280.718 679.864 mo
281.07 684.54 281.221 689.818 280.936 695.565 cv
280.567 702.988 279.595 709.607 278.422 715.255 cv
273.026 715.121 267.631 714.97 262.235 714.836 cv
263.375 709.289 264.33 702.805 264.665 695.565 cv
264.95 689.818 264.464 679.864 264.464 679.864 cv
264.464 679.864 266.475 679.78 280.718 679.864 cv
cp
.266667 .329412 .101961 rgb
f
237.187 574.741 mo
237.187 574.741 242.765 587.869 244.727 596.525 cv
245.783 601.186 246.436 605.548 246.821 609.512 cv
234.247 609.512 221.672 609.512 209.098 609.512 cv
209.087 597.991 209.077 586.471 209.066 574.951 cv
218.44 574.881 227.813 574.811 237.187 574.741 cv
cp
f
246.821 609.512 mo
237.71 618.623 li
199.986 618.623 li
209.098 609.512 li
246.821 609.512 li
cp
.188235 .25098 .0823529 rgb
f
199.955 584.062 mo
209.066 574.951 li
209.098 609.512 li
199.986 618.623 li
199.955 584.062 li
cp
.215686 .298039 .164706 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 23.0.1%%For: (Cheremisinov Oleg) ()%%Title: (weapon-01.eps)%%CreationDate: 08/10/2019 18:51%%Canvassize: 16383%AI9_DataStream%Gb"-6Boa:VOX9i3i]l3O!i1*Ig#9QTB(1>_V+-)<92MU#<+l[ICfY_9,;'-8X7Z%5rRa,B*oV,1-CJ,gX]CW/WgK*WqI4>cbj>+#%IWB]+_olti^&7TnlMpbWDVfg#r&jHCJ+N;rTD\Fr^V0ODmAHI\4oO?Yh9.alH2[$mh=oeK?Tio3qYQoRNdlNKEqcU^ho]l/m(U&X%rqt<=G),6VT)Na+ao7Xkle?'umquLGIduLD0&Om7Ks,dd5CG3:aQ<1U`9$;l^(ADQGAl?Z/'*_?bhrEZ0KotbL#]*2r7ei%T7-b%%ooh>\?G69o5Ednt^W_#]0CQW%U2mfpcZ`-ET?8g2Vn7G,o#(&XqS:p5QMg@!cZX>as(D)lmi_Cs(M.lNj"];^5In?2qXK9Ws45Ze%rsSl#]<I3@b\qrO_BZ_m50pj.jL=!kG7WL/Vg(eAhWn8#]m0,EO5Jj`,Q.C^G;$[WroD<E4#,(Q:"k#hru$<jF/<r&So8WC7;I2#%k.LT.cV]2,G59sTcgLf)oA+o2Hh,G;C[KgRlSi07qu<K#QWI#ZDh!"\p\LLg5'nM-Qm$4u0u&&-c/!G$Hb'"Hq%NJnnCd_h4lLT\%?@R=r7RlL?k<GVDI_Ml]$30e<Mgp!Bk<"VdV[rRqGBY]ipZd8!*PY-F^3/UV;Q3)g2T<7KTsig#Go+BFTls5e!S@&b([7sWaE[XU%lY#*=Hhm9or9fK;m8C[t`Tq0oX95m*?.Ju8leg4NDsMoG4lqmb]X`B'n*U&)a'T8XI_PX.Qh&f#bAWEE?D-,hQ_+aCdU1-BGlHu4%rS@$_r^JO?iB-u@rquFR^65gp]u3(3J)kP5f=uV1KDb!NY@%7th(N.7l`99Jqeog>bMDS.T"Vekl0ifnjj/*7V<l=i2h-/HqN(4-%0>G&EZ;0AJ-dTO(firCjjWEsJ4T31Z9hkKC\,DqC:Z&g2/Yh^&h66k?s2Y_\#Lp`\GH[W$Pu![;QZM#346_LOrQF:prn.8Jm]/d?%aD7uGX7Z>\a1LN<^)LsjkIpbA^Noh>jce:hA+dS3;1A+)3c_nW::trFqa]F=L@BE8*5'>#/)GQgn>f&AkfK;YLpk'Fq9AZW^%KG=%Xmm\eHh[K!:S'e#p?h/nhu2Nee(s!U&)[CqpUaM1ShKiPo)%N/j6uan>kt<oG]WWUjf`%V\(lJ1ST+Ba;.+^p?g4n_CT]fjIeb)I%).3C=`P9'3rp9LubDf$6Da^KcHi![.b<LLVk3`h&mE;DDiG7norRLJa-@VRGr\o'k+"6;jSr(mB@$8:tS1jp77!.ua4StJS:.o][%^HQunMuN.f+.g0V>A)rr(Z3&6gjT!R-f<ab-i06</iQI2bBc%K87-a!L#(_LY[7:fooj<ca\qm)h,"(8ji]#)7)OLi,-`Tpc_g#;%=_Rd%nBLUOdsmilERcqUG6`>6-[0aCIeIfF%mKjNMm'kj]g):e5P_Y#%<HJ3KG\_XTn[tTKOZuqF1@3NFO<l=`$@j5-+:=ELNnd@%GT1SMS9t\7X-@WS@V2uh8B5gEkB*2!p,V3$;pMr7QM:1ta!mYPm8W6-8gps?;T'ttEZCtV\%d7hgZ7gpa2'r/5H+TFl_j:EoE4b2%nQ.q4:@`n&Il"hYJ+`-8"np@Kg(%qUr`<8+D5-FWfetQ1r10X?cqJ,O`kO+lp!kj*]%RPXX5:ED?d8,kn4LgZ7,J&AfB7F)QKM0Z%+4)@k*F6M,LpM2YFG@G"[(aWJ%IK4?oZ(,2_r1pQ-cu4\V*0-9P5dW,=dfCt'/TV%^A@bas85<(kk`+s5GrQbLU3>P0V<5YkL8[;%4<72o;`iN.3TX1#`D_ldFf5%[HTWBGa5c]/g`P:U*m68[dkOH&qkH6uLYK^l3h-]#_r7gaZpQtj)7&K<&)lHC8*Bj<rk(J_O8HhD%^Mj"\0DiCXdKO(JV:XmRgWo39NpY3eXgKY=3`"3';+?C\Y0HXJT'PY7<aQk#N*"Ssf%7p"l`9?pj7W'Ip^-j(r=&W9I#<AHSbPAC%,5ij9'u*DV9TG<bS:2MC:d5O6WLp.3.\DTZS`FSV^&#_Ck.SI>[Ie0Xl1L>%dc.sbcbmq@]D%W#[\%m;o-N!iX@jZ-?Kh@7H_U7'%mg\TDWHZJ4.GF',pQMckY=2+02mJ6\9B(hRT4LX;5GG*=!m*RJ5N/`?fOcf:`<d-kaj-.[mkjp2*-Y-t4h77G.:7S9)]l_[\!q06%-0*E3o;6S'U(u4NC3:#*U2$Y^3;t-LGgs"SjQ)gjco8K5nnOfXDXq+he$=l(Fm?5)=2)7djitXg4]jG]39I#t3S$T#XFmSO^FEHJ%K\8hHS?9Y4)+Iq%<0XYQAO8XQocIa.E*+RE=bZc$"t19&;r@n\m`'B>>%]p%Eil[+loNP.BVo%7BNP"bZl@fZq$)6bdIEs%)UC]r%[k(mRk3ZRP1q2LAOVP;ONhqtF_>1CjB&''3BQO-eiqk[k0@f@\2WHlIjGc?<JG=5'J;A:e+>O?8U0^VNUMj^]4.52eK;OJD36FKG%YCi]mi)KT]C59t3arnP\dkPnT21rYt7l"*)Fb"HKg>L-ElRH*&+St=R\dF'!__'S].lQ>&9H3!0[2jE[?&#$0%RLG$b[9j@j02bm%k0\W?fFZS!Wl(&gofpf2'q;3k*Fl?pCk[D_$32kek%$l6`5.c%<d@24;=XX)rTIJ!F22+68(%YR)=+b-^:=p7Ap9I]mf6\Lh7]$b%I8qhZ%Q^Cs7I[_\+THDkQ/X.rjmT!Dn[j<9SDs)c&\l/+oUc&\Mq;V1qW0g4)D9q?bBNpUSR$\UFF;SD3%-uc%d?p)7f(cHp_5CO%IbOBP5J7!`q;'rqIf9,bbAZi[QsC!;!B,jS+_Kqc'9X1O8cI,+kT'C'reVpc;IddA_._5!gII*6;HQo!N=.929S5rS>ZeO^0QCO^%MMWj<>D(0tF-W^R)X8(rT=B/h.Tu\`:gC`"6OZF=5NNBcdN;'?QNT9`ihO_C::G86@0MQd$e5YuVM\SV`4:Fp.QVZD%_eldUeo&"%LRS!-n;_Gl4?"p2XE[P#d%84?Jn6JT6gq/*S',pBeBnr-:Gqo![CGMl,F8MrnjX_,d%B*nD^o_4.o_5'djeOI;ACbnU:=hg3dCuo%69!fE+`7;(HMK)W%I@(9<K>9Jc-_QE:Z.[,bJ#'IpocWWJ,QpM2>9J(/f<>hSCQt\hfG*K%G(99X5&0.^p,Sn'ctR+T,0$UCf^>I%N&7lW@=_q0E6sCMI`k_qb^Z.:YlUbp!s_36r$-MY[k`?V'ctVN_e<EIVbA()@\KILi'2;E]</DuXg@dDB,P&(H.=.*IC]*D^]NGJ%K(4F9+iDU#,Ka9RHooIF43O=-n47d*Dr4&p+`n;V,5[bGW,spIDf&b=YDgbV#>a'qTZGPpL\WL%DNNIc1?*gD"<!a>fKts::a]t^%@lVRInl(Lc%1Yc6J.ho+32Ns/>*'7IdK%=896`oAH"k6]$q2PM=H!7EMGq3RNXF3S75VfZM3I.;KiPIpDImL+)(7oXcQ8sHN&YH.%\X5oC!05*`N-H^6@ZmTAoGlu,@`9G-UV*..rWI6,ETD0QA[<0`&oP#S\WobH!C"Uk*?l`*h&_=2FF.=((iQa&$jI&'"9Sl2.*=eI%nknt;*+'OqHPp`=G:/D9gioVf_o*'*W<n1Z,Bo:ON'B!e%ij.Jl:%):1\IR,"GkR!(g!Oq0_4C7NCAJb9f>dVggOXqYs'D1>3<c(%o[NVIGTJk>c^;Ob=7pdEFVDH<ZnYa05KU:N'h;^:BA`tj1t(m/&d$n]A6j]qJ<.?U-fBRiE="J`%"0Ik0MKnHU1N"0kSS"XI'Ic(%?>8dNFO2S)/6&Q]h5./_T&-bMDu%YJ0/=uQ-d]/RA0%VfnT*dr@g&g^ENP7;AKm/M[lVC68"35CM^LiQB0I(le8b0d_N=gDP@@m>%5bg/fP6t*[#u:n+apX,rR&D[2o)f$:86pg_$[%AZQd@\sY&Gb'U,0Pa#M_<"AC+$jFa4jIIGBf,YE-A:oEC8hAc,DXEWAk(0kd>$%)2EYYLZ:ql@rWKJ2BEUjq+)4e&k&3Q(.Gh<d3`QTX:KYlL<>2n8`L"-$@P3"8s`p/^]KV.!3#adWV93<pj;<&P4Q&J*fajQfh@F>%)'#%K8!#IhA3ksXEKY<fTX@YAg5**nSD"kp9oXcC)DEt1)&_k"LKO!AL`MtXT6K8OWD0kf2VkOjF9H^8VV?6_mVS!?8)?auWXlj7%E["<LPIs]+Q[5&3_Zm8O_CX*!MOW7\0#&N7e-#G.b7D2^j7'=!^']sY=DjZj!5`=)bHda.2`7#_8("\=QMr:IW\N^VbN1t2J3neF%[$UhrL*<8tB*NJi6RZq=aUgY`'_#)':o=P$'BUT1TV7jMl9rX/4I%$'?o,2<.^-%Xe$?@G_V,gVEC'!8BekCnPo1="!BaYOSL7?J%c5'D[B<'<XV5[?k[8n()[]6h9kFfk+g9,5(of1]GgCLC/_r7a?PG(G*&[!2FJKo#mku'2Tq8&ggHqY(MWd`ST]uS7^0urprdiO!d%^>Y=j((\B@%LI4u\e[;a*gstp%:X(O-932r.D!IHR4&iR7'Ns%MkO#AP76fA.@!0]U<o!sq.:rmbdC%fc,.BJ0</G;4BsI'/>g@m%QsYkS='%;\X`[b4/@De5``app_7ZLF5M8S,lcKp(fiR"H$>*_K8nkZ=qU&?%CN!5iNoP/M7a9I80g032c&6f(#)21erJquX/P!H5%d_1:EE&*]'m3n#Zl?Z.a&!&d*gQ1T)-bSp<fGd$Nch.!2s3ocmXVt`s+%V!6GH/aqX#7104!;p:F!qM3N"Sd$82NshXV*UCNXfEl%ZT%*/-+tQT^>+>ZV!F+>MsS"N*R.YI?YGS+BG#q'b-W8oUF&!F:MnK*W_M!Y=YYP/X"=8)7+G0>V:()QH<mFRC6jj6RI2MlXdZds%3*2+J9f'J<&pj<i'[q.m=2"QW=G=Fea*l>)q1enR2uGU)8UJ%1_XgIf,++r-Xqt#DHa3#?_;Ffo2c5c-dq(lrS`Q:41ce@*lW0-,%5:]t#(/jA?0UaPDY&[hg#ON;*h-_>l2,-`(>?XP5!80\K7$He/<,/Rh8[MZ1qHT^D!VSoe7aq`*XSZCZ[L5qu,'KubeDO2h<#!^/%5H8f>fMar]2+4(d]e@"31;@RCV!'p8oUo5LBlo"tO(R^>>T0`^T8ESt\oO=E+)AgTlJX)uQ9=;cO#a)XSOT.C;9/>(;ub>%O;d3R%p@`TTO;4tSVV?(UcF;u#oQZQ+OCZeMe*ZBF,6RFH5/i^5CjA&_#Zt\jQ&\,k;3O5+h>r->n0Ge@5a)0p'p_fqo#01G!g3m\p5H]t%M)62m>(F]7^lSX08K;b=+q9I#3*R)Wm!tluOpXf2/?-F\6B_W^L/nA?J1*9#)Drp(&Z^!h)su&#P=8"QKJ*#!-7i%u/6^2/11hGW%raE\2'H#M&'g"f[cciOT=X:CF;`1;L7lQh#EmS]nQ;DA*JEqO"i<Yq5nrI"9BoUSZ%jp.<43hb-:(m`CO#rA_3Msifp&G_Jjd7*=%l@4s9=pjS.%J!YSI+BEiL%Fo>s+[.'aCbtQ=bHYFcHj9))ih<SZQ5(HHOGrG:h9.IAGOo;9]tIl':t-+;G&K?s8G7NB*E[OgE"##%;#]nb6M%NsXT!_XWL]C3NKZT=&9"jYErrNCb-!.5KB2XLcSr\L11"tr/%]8Lnh34WAD#aE&)4]>#PYu-LBSsNl@e9^[DIWQVKVZB%.4^6KX=Vj@s0r$<,jfK@Zog_EIQ3pFWF`[;O3PHiKnUR.='7F@&jg$@^T9Y@):JHOs5VhKq@pDKL.CdTqVePec/V$mWZXI#cFu_!%Ep@oo(]TRo)K:JC8Ke%T\$S*lfT6!,/bcLPh8QDs?,YbghrL\7_Q#!'Kq]")8fSRCA]L`G>)H_6<bdP[:pYILKS/9kTVfY$R0omK%Bk9,7N!1LOV2,,Bo!us[paJkOkCbP8A5OCBrG2o*0I5H9,qGfo2N$U<=rprloN<`#F"K=[@YeW?Ua9MLo/.8P]Nm9M2-4jgVqEUm%Z_qN/VrO1jR[U;1ZSdAHCEd,,bh-`d\LJ5lJ'N5mCB!@;T&hX^kT&rFbE8*$>KuKh*qeC;-;44UNt(N'of-5;m*Bdfp?2.Ciupd(%4f3QMs6)gK<\KKt^?FU;cSp64$\t+37\(.(WMX$a]:uQCNS.k)Y@oO.3<C`9SP7ot/bksjf/$]f*fR7D2bjJLJX5#j#1>:(o:gpq%'tNt\(7*Q.iOC8DCmbfoQ9aVmqB.T/^<n_u=tY`q$:g(<CXdWJJX[]lp.ILc@2fXppFn<G^s4,^JQ_de7C@N%DKd5pD96jo4fZ4m%*)b+&N;6]T+U.hs__0E$M;GSdHTlc-FfOoYP+AaG?&gefXTjjck;`GYQ,r@d=S1[Q0AW?[jd8g%aq5^XdQ<IO;?&iJ-s)FTGtds$%D`QO`O6JAH^!H4-Hp\[)bb#Zofl+)7-G(?Y=H7#We652:l0UXErG7nhCL0*/g8@YKqdYfC=!T.%j`K[^>j3_uj#+Z$8TDM"iiEuW%-G1:N1L4BJQO$@,Dt8M;CpBIV^s+^o2I"\n)IcY3\--ONLh=5Mc`G436Vtu1gbKr"<Cl5?a8\C[Nn&,&a)ib49"a&0P\\<]?2TL'%?U(ECIds,Phs:eBPkZX7D8"2o>Ae(.DNE:"<=Eclf7:Nr9F\=@_2Xc8T\)_,D>'i>&onDfb,3eCX>DeEH-L[Mf1bq=CMjq7[,2SM%oFdX"ACL46U<AEIMdDicg8kIE<cZ;c]j>W&=`%<0kFr^,l*BGlZ9h[4U!L._+0?g`@/49Ve<uU-(FI\2@ae66BL$]*afm_:g8VM:%NMf9jN4Mlj->on6qeM32c*>C]r9A6ciQ)g*\iB-VR:<[Hp]h?(NW\#2Ym7]34-/WGVqH'=pG"hnV"ZnKAoG1o(07r&G!X[ESf+2$%VIcX%_,q1P80,mtEUoN(pQ=/7/jQ0AJt"FbEZti%NDI`=]pgr+<Lp#PYbA)^bYNL,XFg9UP?Hj>RB):YWY7]JK@R5:SQ:oKc9QRa%MGZfRlFo(m[oG9IW:"B$(%4,J.efdV]cV%0Qp#LGY,VD559+/Kg:!_eS$BE$_O7K!IQXc5r*6E9\mItg-f_jcgG(qTkVZ)`>2JnM%j8?&iHM8k,4\h?aFC4Z[a6+C*p3:4T$:+\qAh3+gWYc2]>BT"3ZR=@mO(-*FjTn3Fk^FB,6Z91uPZD\.<Uc?5nbDFHR3Eu;\O#+S%X5Aq)e^78H5Qg?GU2jYC*rs,DR$Q`_D#qJ]Pb=?lD/0I3:e>W!YpW.dg(Y7V.o9EL#@+GT(k5&fOZ[ptAFo9+GjuT[TsL!QN[_CE%9JOu-!h*dn,!Xgcj#We=gsXJYZK>_/P2Vc/:%S0K=2(Z]%&:5Zig`S3ZDV+>$5.9Q,HuLg$NZ8iZ;Gmc@#.jg/)cRO0t0oVWe&o1%`,'O)"2KQGbC^I5?<PpAid8ORN$P(toh:h_WFg`=aRs^U,)rY5fu(AGf.10_&s;G,QG,?D]qa@E2TGE3e\]%=A&$d.2WIr"/O]bR%4Y.4c2M::*puK98WbtojVNi.%D+3c*HE2;p?+_(WUL=m<C<_G?PWn(`0Pn2:Gfkr`Zt0?Q?._E'pS`P"DGu>dIJqT0Zod$\-.dh$%rH+?^[RA:U0:T&Eg0'DWh!ghm*%/2t^WAgHVp$JWC2sLY4;lkRnZcnM0kE("%1FQhHpqP0WCC'3A-D2Ka@_\q,]<eC(cY7S#I8.)%V=L7P;r"e+/!lK7:6qn(^C>2#$23?P0Zq%#2Grho:c]JFmnBIPk?kS9`Q>j6hY1I1J)m&D4^@?_iSl0+fHZH*Y38P^B$9J!@)CQl%\[<jFBq7<65Y&H3SX#GJ"*YQ&BB+]QdJ'#_=d0\o,7HcVl=jN"(u<A;*=EWsO$5u+)m6^ZX#i"UD0<Rpj%<sghs[Z[V]+f20e1tk%cW3]:$?du[1M/7$L@p"!(Ah;l&Pg6LY82gUDuI#.8=/9hqa:I^lc1lJheTL7E\(%j>"@%qd53Mp@CLl?[6<@b<LJR`Nc-p!c$=9a%)#T2B2q7br:@bJ9I7q%Jaj`3qOWGBbaI5H<"O[DL/#eq7D^Qdq.uZ:bfK5L,;T[GO8X=OcBC="];0)jo*6)bO;^@HZ:T!JHH_f@F%*3b%C+utd0:SRn^KVLMVVno>?;(>Fg=`$$+EBhiOJ[GQh%T*9Rc9#kko8;3SOli0\aGP8%7JP_h52Yk5onIr&(WB*(^slS%//g[8%mn@NSOaV30a?:JdL6DP2;Y7=q^N][9-8RucnO.7Y8#$_;)ML'<H]k*@&_aJ>_RS:9=qAC=SAh!F.uWll#C@[T4EXg`*mPVIZoYp&%P?QAt_R2[9ZY;dEG+[X80-k1=.6bum7pRN'jHp/:Z\R&tW4t:FI3;#NrP-gc8q`o/rjq^6]$BuBA%F/h#`=LRpn8pjf7MHF9Dfkk%VT5>**]Go?O"+5_gV*p5JR7in`qRS!U-6>-[Ttk7Wsek>CaY7!SN*?4A:&u1j0a=)oZkq<DRY$T]\E$<H5[a?_mbrK1Y['nHE:iU%rQjciV<,eA;>N#L_fmt$2TuCV<-oUF0t$'DhVSH%2God`!6s*d]H@!TW6kD(^4VpCKpa^LGci(L92AXEl`2q3*Ub8$Ql`!3\p?K5%<-il/8T2`6\URih0L"KX)d5L]X^/t!Ebn+/m1q_ZNRls(P;BG1jO5q^Y&te]4=%9d/4`7E[PF26J["4FZEHtl^Xh'`o7hWeTu&C@%l.2]G,V_GWQRo"h:1>,r9X7;0e&.>9G"H91-Y"rl)b/:6=&saA0k9q,'>lG#Ai49\9LE"8R$BP+;^qFB524K;:WH/_gR^up@kpAM%,t5M=;k#C[C:AJr6RFCFacu83q6]lPC*1Zq^!*@%0Se4]=s%nBc_gZ^"#n^YZZ2CoK>Y?]a'H^DmRQ.=lFd!K[PaY"-#!!;XD8*;%*/A#4&WV@\Kmoi6g+mDK0ViO\DRQ#+P'#lMY@mC]Vl^Us*Z"hU$KGJ7)ZsVSrcrn\GT4o_>7I2VDXb)!%iT$jR:bQuO6MNUJ'9Wq%guVUU3!SPJa)bKocpdKt3W[cQS^H-CSF7Vp=q\2nCKIb6G#7AVg'1L4<867H:!/VlH(XNuh1W93.<##opC\:oqU8p<4[[f[->.>>%=4H'7hRPr)UUCF)89FWIl\l@e!HI'FQ9du_;N^Xep*a[6%f?+ZG])MoXa=lJM/+D5++=SLE=se=Ypq3bgd6d^jm?\c+$*hKm57cX%784kGq8_kXFEI[Sm%67*Eik-_WLj[_n>r)f`ao[q@1U>2!(qH4Cu[.*$:6RM.i`6!S/!m]e^RL+cjT[?L3%+b^sS.&?Z3M'$AMcW%Q^_=<GeE:PO^b5p$6?'!hiC&#@lDnb,U'Zm5YX;fKVSI2#<^3k^3P[o<-+Lg(H5.aDLVE\(Urj?EC$p:>10O36LdTGOFQ=OHDRBC%![kDo<g/_F\i7brjsHU051\^r@@Nc8<r=13SM&+*>\0<RF(kPV;=@$2jeLsC\=,Sn88K=DS?l1uEgcJU`%U!_HT;P?(*g^;G7TXj%.Cbap[X6ePqlX.GB#RI\nW].G0jIgth*P?>*jg=L]pU`H=*1RUe]cfqH+DTNqN9[/VrC0=_*)^uH;,FlYOSh^opRgYil4!DMkubO%&rS$$8)t&.XhH%OfE]H<V:JXM7O%QNRtc<A`3!fed5+;?3S:(g/K"Y/6"^-T;Fg0Tl/cW9gk(tidM@#Bo/,?nMVXLaN5Z?t;M\`t%U2_9L?N&7:*i,F+V:]4YE,_:Pjnc]3]gQ;8f:aMg-ek=C\hNeOMR],![T1_#frjP;1WZ:DpejPGFj$L:'#QZD%=53b_)b=mJ;u5*%0nLAq`'Jo`lM/@#DT%6/^9qsu^g>!LY1<%p8I9CBS:iaE@Eh<pAg:RA,!;*G0V,T1rZWffiJP\JQ6WTR2#^l%XB\!T>E6NWS1]3.%LXSR#D`NOZ]h/44oiVb@=ha!2500%b[^4>(TAj=TC>C)eI"\jH"73#<_0H&BH4@)8r:i_tq#K0.J>4hQ==$Bn(OistM!eU+o%n!5%H+V`fmq)j`JcQ?0+E9Xe.[n$kX<r3a4mH`O(OenLF&Ch'(<=K41Snr<$>c9<q@B^ba<I5]-fdXt<r9YK=+C;n8lIrdA&(%laApTM%a*G<`p1!?t0R*U?E>.q1EhYj`7:Tc(4l1_D;**Q!<,naK`VoQ'#4;\bK8mUdLYmc'+j)65B!#ZB?b,(0_4JORbet,uYibhccj*kT%;-)B#rHPg+nJYbPB?MmMC3JCB0<=^8Na:fq$h*_)k=:<,DI"RsLT]ajgO85o<1f*eI,0&HA@&81l<A/qENNAFRpj!uXs31[#H,c$%"Zdh%EO0B.B#CiefX#;E6"$D]*[?-CS'AjRm;t\iE966NAG3^6]C0AfmTe2L,$DAml+;XOD>,m&nlpS!Z`<WE<9lrpI8Fa8`F@u^%ckm!X)I2PjplW"fD&BqN[OTKil2+?F?Q1I.@q=gJ"ERc?&9C2eAdl\\iKu>B,D0X:;mt`L3:787==gMtZ>Knj)Th*=#C!0r<p7;9%"#^e8Dmo]cG0QF58X\n#)TU9L*3C:*b-&Hro=uplqKQ2ae1e1MIq,=cmYhI3-,'WEnF*&FD^!;71!$ek_P\P8k,':e2UEnS]`RtI%=X'&PMg!3U5V=DE`2Z2$=K!0#ZL:fSQ:\3LYjMVGppX&aitsZnXio,/>W^lr%RX95&#3PgO.eB@ErFkc@mmGsar^9:Q>FTZT[HhG%!c:<?c!g4Zr_GcF<oaMM.!HmhpVs@7rGg?&hVi=lIhW.54\,PpXmWOE^oOfMC9agcCjKKS>P2(0\%nho&AHI&Dqf21%@A6J!LI"K%b#)Umcl2-]<qG2#6_"VN:1pC"E[m-t=W*1&i`'rMS2pToq*-R%c<Li'Q%,R+^KhCum*44sRI8Cg2`"aL1T)CZ^c927N2WS/qkX]U%=UCgtiMo0!(8cEi@[oX$[Y*VCK@?aNG&XPGQp/KtK-NUuoI73h*-WEn5(;6PY2#.9J9*K:FM$NW4o\!D5?lZoViT/tn?G@=!b\)g%h&t'!0YMN=]Z2_A.%!3[0Yf*(54(U#DU\ImKMO?;XQRU;)gcMi^Te$a4reo(:.%O3ds:<'Tf4ooHL/tS7jm&sr74caf5;UQ'chXE%m+\dhXad7&kb*.ifZDau=<7faP+5o`3d^5][DU$;+$4o+F`ctod]2rB+$9LrB^@\Y`Za7G$Ha3Q$k;R@?lTH#.#a[ZYn^&a^IZgp%5L2)TDR\;2(R)ZGfB=I:pIa24[*2P+C%OM3*fR3RYmsa&hY5+Kn$8!q`NRk8jLB?PooH]i1#M`<7OGKOXG_i[LhST^kn9MtkA(f9%pj:2'4I\tb\k@Kd!H)bU3-^84FpVpl(k,TDpH/R1IG]8sE0,3A@7:r4]Ba\p-lUV;gV/rZpBlQ72d1X[=QK2,LAFs:S)%P44$OTQ%:p@Fo)ZpgJOkk)A*;Ehf:)n[@[1'_Z#5Wg),KX!,l!mG`d<&UMCONP^h:B&>hsY<eofQ#O(@j>SHS=Gp`E0s7E63"&IBW1c[dSCR%i3oTEqb:*ak,]`8ml8&Cp,u\7(#*IX?g#KIWbA3Ji];'$SOQP7)WDhZ4VY"HC?&Jop1*Llm:I9_n[MD(f7*HkHE(4K;rt8fWe\D[%i37!rD8&A5[0Xhl?bNK:,nqjNZpfU:-tpfYkbeT"W%3SgOG8*F0_LaYe25+@H?<o@'Ag.qnTOM6_?\Ns#S(8#[6<=6UO\+#"[%"5%?j-d9WlK*Dic/bmEED'UV/LMRD'Q3G"`h3Uf0.3Z0+=3EY$EYbkJ$]ETP$2d/(<EqO21>@Qa(3ar`;A&a\]!WUhm)KY2sM]RG/Og%gXAu71W"g+fZ3[e)b_IYkQiuJj(Oq(4^uWFRJ'a]I:d?Z<JYo^[`6_F2fd_m7bJ+ND*YrggM25Z:q3)52<]j1P8(D7KG?T"8s*oA%nUp%F\i11T8Ais\rbW!l*sh<T$Lci5oZD-?qHfs.`Z=3bfYar.HF[Cp5<TR'\2H%LqlHt'A@#;*FKt6%rc66\7tD'jqW%!pM;>*=%)e6?nL\.s4l*lDjY3mid%7E<QbAQ'=DY0&/rO;i`SJ>FSNXRK0_fh/TDA.jY+r`9ccJ0'gO]$FW%N@?M]HtOB>(Au9rd%<9*KqV5%!jP"F(IS[b%)Z`!n2"U""Z$!<'L!%]cU6[_:`+r(^E7"]DsLA0h*@pK+Zm8b`md4_lCTg(cS2N9:>PZY(K_j;ke<$gI*[CKN&_(9%F\,pVFR-ed0#('KTj<%!L$aMqf&X+1\ak4;g4rr3!RJHGXnEo>gN-l1$ZaQQbIWg4/L`EpD>'\Og6I0C/)^4+2g_1=o=t:om*4AD%m1.I74T2&!Ra$nc;5hehe7TK\1CEdmL&-`pI7BnoUJRR[W6bJ*BB\=G;#!-e4qEAIoI,q0^Ac/S07WTiful>#?@Mdj(P@3#raP`E%n*lg>^\Q-<2fJ+j^D+`cnAD_2roMZ\n[\P3G0["T,*'iA>4j6)3UU?k2bf%I/nB0ij6ZQ<HiF'6s!7X?JcE+2]%uiTbTHk?r:BrE%n5&W6]3jt)q1$`&DtK4M@L%\fP^^s7$^':mddA2Hl1.=D0](d"FE<5(o(VVIYMYkA4alqge]T>Ds1J4h[upI__lHkbG<ap`d[K7_%o/G"P]R'PLiQ9P59!`sE]4]IY^AdNUdl0MGrLI3_?feJ>msk.a2`U>kIbhJ7D[q1[cRh6F+ml&WCf^./;!$om]V"(Gi=.]I(.5bA%F3-K[_G/1\C9*#."85NQ!f6Al-Sl)+TGQjoFsH$@"Ra9`VPcDY`ck4(i@HRE.]"l@8<rEepRRL=j?bTXG+mG*PiqC<bVuAPZocEq%OLeS4/2rnm?B^m\DIeWNOi/47!\]^a;aYFH#rgj%G[;i*r5L+0o+l7Tk51^nqjTRgDd0`.@[$5/jB:^o@-TRu'?$Ho5u9r$26aqs%c_$>t=kcXN\bT19-roGR[:";<hR\S:gXRk4&91^[!Ct>9ili&&14PKUc0T2XaW@Q#V6Rs[LB(YhZsLAdU-Bdi2.p^;MVgH#7C1o'%q;,8'.lVZ)((nVLa-i"_npJ&CT$l\@jWu_.P1Ph?Ohi!!A=DiP/%2XJ7S,*&@bT">nksOgm$Wga%J&mABXFt]dOs*,-n:KXPEToo%XEX`b'V7#%$d+XJ(8_d?iT;DH_YkA[:Shp)@rGtaqtYnJFK.mE]URA^%VX]U6gF.OGll^O@fhN5U8D$dq\qN0.Z(lH)/hn`2jNZn%dR,h1,ph"7OHeGd*j^oNV3>=7ZNAQ!0=VCdh2!D#Hs7]fF".4B'o[+F9SCj8JW3N;ET-;-i1eW[j0Z@tHsa.U9UI2P@$;=XP30&l%5Qt:`XR))u0"3`_14:@!I?nG\-Vi$JpfA?ngPbNqNLbY0kCV)4do5\"*,Zp`5e^ib+LX]]l`kk[PTJ$[25m\iAVPImb2;uK7q"l5%a4o/j,>g+WmVIp4WQ]$PR04Df<*lM'rYVl;]t?$<>VD7@Of"F)gq8S,r%,0GVH_NSNP!'2a!(]<-G)m]*Ip2*LN\$D=S&>Fj>4G^%%lUQr!Ki2fhh_5]^;G#4V'LVN#*KZnUI=`^e&KYo-AZ4VSU`5e+2riAR75ji-dBoeG1-1'`D.,eg'1P\;;TJfZR6UuGl9m-,SI@N%cj]KGkc<Q3Q3b+Li@_W<hRTk#S5+L;*+U%R`3p7Z)S.e^A6rKEU6hYnV2n&>MTI&'Q!1_S1<+Dc102=oU=/[Y6%5V#F*&mk9n!P.%X:&$nlPrkJ$:)pO?67!7IC&2!7@/O%/,5!FWg#J^B6!Rc&$"c?(<$QU0)m>N?R72<9/?]R(E:N`.B0&.q,JR:dduN=`(lQgd'L&8%\3)7Klm\'.VK!1s=am2K_U]#n]<5W*Gnf#bb-amW9!/kfO7&jQ.!DFl+R^_rmKTW-%PJF2m+@EJ[CDLc#gana;IuQ.$aXOMXHL6%%866r9iadA#-Gr6lU\(%G]G"3Xp%LFA(+?-*K\;-p_^QJ@4^g<.HS\2C#+J;!):1eo&F`5Q,i@sN=G%`YDmP!Gh]at_4<]XN_#4>#%JVof8X=Z+h&YRtLgl,iWHV5I4J1Dl$>!?8]=Y*m)6H1c.Sc.'@P]8;L/+S?kq#E-]AZ?Gd5f/6.*a,/F7GI'\d^*[6!P@+Fk9)"#%P)<6C'%OZ>On!3c"j7Ih]jM1.NmV"RD#&+1^!I][fa(2M<&$I'?6`t0dVP[HH;VZ^^NrZG,],=T-KlI'$9]LX>-*2k#Y>0)/Bsol%HBZIp(2MPWT:5-l-G:4H1eGT(O],kZ-=1<a>e>058Hc`j@ImHDEC_S=>$dFb$hu&o#C02\$'n>m1XNMWZT(`e4Ce*+!1$,dO[.N0%D)?N;UVtKbN?B+,$!X&g3f?A56Sll[1@HM)%ohqT7jU@JpQ\\,U9D\nb>qpKBO&%uM[EFh/nFP_fJGuGDsk9iAW*Us8Aa.%QSu8$%7$<G?^8dl_abA+c$_sdFim#TSB='lM,/+?a7I_\W,BFq3)7*WjO'[s2g3B<i'5_Wt)fCpKl=s80)Z#_a'-43WZOf8[7p[Q1$fC/V%fQd+l/0(O%7@Ik].%MAJ2O=.=)c]'r<&a0$TM$N,%DVaQp.'l-!3&^p(kOrP"SOZGR94(7;#Y7mY+3L5F%qCq/<P*!VO+BP)5$Pr%SQDhi5j<9&'fLPq;O:1OV*e/O1uqO`OE`X]q,+FYk6-AKOih-1BKe@pWoXQ8dkY&S&PjFnK_d;Zo358%^qlb2DH'!+b`1N<A%&'S%ch/\A5e"p7Nr/'gJfn+OBSqN^m>-ks>h,R5eJN;_ar^8\oqTPA@o$NFaY9U:/rEl_3dOpi8Gmco:S&h(bBd-R9!NAH:cSkr!7E.4%ZBQ8]16li[_&?9p_TLLEM.hsm8Kjs#22)IB7[Dc,ir]W+P)=r+6WDqX%Z`_<,W*12,HEGfBPt)@AD0W$Wg/a<RWi+Ait_d"Tr-d>%_9JsbL/OY?K]sbbO:JuMkEaZAO\(DLQIBklFBG?L)C79&`Q]i;fV#[JfMl1sPY+>b;IW!r,[pE/Zq+R!=f'*Z,`=@1E$s%48X^J\%Q_Y9[[&[L:o8/2_3Z,:5cZ6bQB@E=T"&O(8ajiJbP4<nLj'328\%&-2+TaBR+=OI=,8Yk[ID7aQ`J7-dg3PNGW@Y=07Tl1]V'1OV%_fs<RgNbL#jOpg_R=mJIJkOSh"DB]K'Bt-3c]cbLl[CHd-,F#0MK"BBZ]UgK!f]Ao(FOH?e5Y^m3=6P&?gO1q"&HWbW4S/M9uB=$%\j`Y'G3jWQ*S:8UFe%Eg?XO[DH#3E3mdIo<oD7.`Dg+E/*;31#rp\pVYMMCX\Jp'--E_kBgM$(IPKA]KL^%8.lGq(mPgPUQc^CY]%*YgaJl;@C%\Z./tlSb5W6/lnK=@c7pYgWu7T(H=I)NR)S1lHB2bp>,8V$d6U)QmNQK*`^-5cjTID(2>hTR!/<)a$!;,T9]("#!,'%-_]6cY]JR#P3k2Wb'*\9s7E:.1n[!:GB6cY9rCB_Z7mVDQ)%GG3\/("7^(5cl3kF&G[]o_b/@ASh4ac2OQuJb`DP?r2QR)hqV9Xk%=h^or>S%Du6S4+/9X5AsC6(Gb8BW-+jTa8^23s2"!%d-h(jI5+nPs!/'R5j=Xr]ErM'dfV>NsNT:=l-V`&s(O$uZM[SQc8&)J/mN%^=dOq9G)!;bkI2'1CH(n98IRt_Z\g^_8:mBE@K;Doi,+6qIcIHMZc:rn*V0lE.#SDBV>1LHU52Bq!5R*cNHX$5c3Y^:t'Whnu7Tj%-1=XMVp/tPl=Y9+?/9FELMTjr:=<l'@hM@gAapb>ma/OdK"Aj0@qKfFllD]H2NR,IYtsli(i5lsaI=T-XJrEDS`4Gh46V!/Lrk^T%*+k-Pn'Pp$GK_l5i]T.9+B\&G)L?Xd/U)=UF9m`j.Er;D\,d:s_*o^rkp'gYOWooR,!EM>,,,qVV#^r(,TbhQM:aSG&g/>/Us`Hd%qAMb7*h<=%2TfL"5eI;X\3I9ZbCYaF#-V:emO0CghTM*8NbV\M,h"5Y0PT1jikp*E@'-E=!m".Ghk[\\PrAkGk`N@Zb=sg'?Qa;,%<-sO?$KupDM9JP:Aq:IB#2kQNO9A6ddCV.qMk*@jV#oBDR#&%W_hITIn\I%"9W906Yt1_E'>D<#D%V-3MmY&#T=c+h&3:@8g&u_5%JqCfP6to9nctj&n9d%7lLq`PO"3F5N[@1K&<t)q-3'sH[jP+8:E$B>j_n,?-l)l8&5a<Ri#'OFsB7#R1k(98N/V\hDOVE\ZK>qb-%#S[i`Q'Idt$RAG-d>TE>IBkt\%p_TQ=*hj'\WF3MLNt,Di$n-90;P>CI"jO:A#.5jQT6U\%X&>EVH'9Y%6>0+dEfs+?n?Jj2@0(7%Zaa#&m%q2u2'L#Y(XKIB7/]`](Ofb3"r>4CDWmL_[/d?s5b*fHLIj.^3mX(S'Tuon@Mt&o_>`X(^N</#SLE'Z)#L&G3=b@k*s@jd%'bq@gP3<.Wdbt)?>(WP."/V\5*Oa`UpeGP#=Fh@[r`+q2R@s%3)ojp(94$:b#pbN;ELpb,!r.GP-heE5=uokE&Kt5gWgLTq81a,%%D`P3F+?>^C"6j5;2jh=h&r8C@VhU5);isY@_6SdT(h("!:J"e2olie;Wak=e0j?qV!kGA3*H];WA*US^ctM^J-IPHW#7:p)plH1X%BB]@q[&^jeXBq6`SBOc&:e1!^4b4U;fH_LN_'\G8N+qo_E^3'd=$fdn-[A(G`PuN!L`TP9(UoiKelPN$*!WA.Jkq('!!PVC;5j&l%=&;WRYM.`WS[UfPn."K;7Ff349jC3,Xt#Z\HmBus;<lXD>q!H7^&kf9VJ;n/"'ZQbM&^h_2`!tBj/(ig6WHuW=_b:M'EkscN<V4G%'mE2&a9f)n\d.mVl\f2Z&G1KL!j#.=WCp1T`WDH>)".cpPcdKPRAqK2S2=W'Q0WA3dc_!LE/%'nSI;f1-&L3*(]uhD<>Z^X$um-_%DS;</!I;_!O$qoVfPYa'8A#k82_khJj/_k)QT62FIC@ITn'NFWHY["MW>%WD1aD%!'f!:-jo\FDK$/DJMFep'W^'YDQpU[CO!og@%74E=?:M,XhEb2[&MXVdoIJF`FlU9p4WKS8%)!eg0mZ1piJBKkoe-F/!7OcsM7#N,uBe68'oh%2i!(DIM_`:Ek6tqEbD2&'7QERq)%llUM3W*C;1=K<nq:^A"\Bkj/@ML3a0_0A?r&</8[V8EX,NUoF"5TdsM&EaB'6kr\BYcTXAbH+71c=*pO)dXf\UZSMJ![Bo8G]6'r%[>._>qH9$oaTi/MdBq)^^b:;5lA:EFT&9q@j.g!H^m:dLW__-UKA"O#RsFt"EDB1/7XAJX8L$W*%02%FXQs,5(:TJ\oDl--,#=5<%!Rt,l>dL4^($MA!3naWZ"1MsZ9_9(O$aIB-j+O/PK.SqLfWo#NVdM"gS;1rl&Mdg#*@hi0UCgHt*C[d7!]U@NQ$eCXP[ub2@Y\:/%3Y`8(OBDpAfJ<C\-lSL(13TpH^%NFr!1:L5/1:&(B:oKa'LLb30u>VSoV?.F)f#Hc5dhJZL^I]G4qbI62GBjW-'F-f!X$fsY(R88%!JFTV4Z3CB)?T,;J^+Pi4+kP'g&dfM<.WAL?uC"o<Y[HN%ed-:(Kdb:It%^[@F5;-(o$T^mYKf<Z4hf!Eaj=<5lkP2AEb5CM(uY2%Rit6SeuP<o(pZ9"6$4CHKg&+20]f]RJAoJ7T//Sd6r`CmM"rHR'EcAu^>YWEVPCuhjY^JH0[(a0.q9_9rMVFg3`XDaW?$Ao"bL/$%N%@h*$kY4ic3YbZ#lLr[/W$W.60cAs9Wt,\![VT46(\9&6\n4I:chje2sb0C.&8?6k=Sc38!+*].iS/9F0#h%/T@AaTc'Oci+m+%%MYK?O_j=^,>@@i!0W&XS#OfHFd1A-.4O!1/AgE:g(-(?n:QqK9&Ac;T>pM3*`Q;l\Pr]k)O5jW%5c[``ZqD0.)$\'_7/VRYSV>Ja%$#j<a8245h\#AqR(CAq63du,rqB^/:mn]SZ;eC<5Hf+WJg[\d/kC%8*69K7R!Krkn1XEXD;^6D(*M%$<-KFL0]$/#=i]RUq&Vh&7%KJ'))?^QfcTo=Qe3#ER\d[IWH4%;],>,5WmaP]!%_dZP0qdn%6RL5D%dF!n,+f3Es7QZ)5eX$j-+)s&i.Xc.f+X7DjauCrI(,.pF%`,lUu+W"H&R(oNPXor_S&n@&+`Y%YNF%TM'7,Y$0B#LnBA&LSM,$_@\ka!"/RHRd58_,oJ,R)1hn<Va,^)3D,?P<7f['4.5i'$>X%,M=6WWe+4i*4(Qb(J)0,B%FJ`,\`qic604f-LD*aQPia>blLkQ#T2'WO5MdlQN7RJ]#_t*dF0r*L/to93h/Z$)FC\Ej^Z6aB*8C_%.2l2)R"6qnS8\J>qZ,B0DB9KEZWplBA=<P)qJlc:d@;i#@VuC%"*Y;Q.W$tpR1RT$(b/(W6>%n'+`Q`]N>H:uUb!,aCNa:/_MosH%j6@3-reX#f\/6'K!/YB9bJ8sV2P\6OZ/0dGW3?]q\r:%ILJ8BMokmgb(Ck+(dYs".CgILAklKR!gc3d"C<<c%Lk:(eQIsEcJ7s(N%8*!)_;ZKGpdPmom@mZ+%)[,f>/.`+paLi']7d,*:6Pq,5?DQVaELLK")@f'DC;CBl(F!a4$#6\\EMm!OGKeh]\.EVYUo0#Ubd9Ch%Sp:Np!a\_[9N&<l#,F&V>@a.X`>X#nj1R,[1qeloFdY6/d1B\Ldc3bY7Vd0p1GSBN-3GG@">?BZ=SsA*$/Jr(hG)BcNhkFC-1qiN%a,Ba1XLXO_bu$=>bf3@8eekH>!l8hujp0!*Me683)F1&@h[#f`6nD5W2PA`8:Q*e'O(a@R-;+V-HBghU@S)_o7oPC&NJE`T.-V#R%`ZDT]!9A)?+;FSOE7pU@_>m_p>kBkDK]01r.3X;'c1)o&#):_?/SO(b_qDq?HHg==eQ>P^6:eMB\5ejP;N`Wkjb'tBL5/0KEZB^W%MFLENY7UV_3BX46d51:m%H])HYs?Ck\gT(A,-ldH)l%ld?;sk$/f;k@+&N]+1:AQ'l<OJNFkZ+1+=mUb_6o;J+bd?[IjJl294SUJ%W\l/]:'MG\>n0!LGMQuO#@mhK0^1>.GC64+dX`7^>QMd]m(7'af2H`ZBPpn]q3<a<3Z?nCF>_O`=KlW"]4V6Jn?[][$&2#pe/:<^%P/UOqRa.iLac73@a@65SUE1Wq@lW2(+BAY3L4cCP"@NrbCfh-$Rt-8K#7X7oc6+/h1'o&LBKIR;3]cq<;`b4+cM7IEO!u\e?b/X%%&8=U.2/U2YJ:r.K[!%/@Las8A*noEN@0)2/bY3`\Jk?_t`!YE2kRPF\GZZP0`ak5"Mh#2%TKW.mTtqI4f/?K5d;'?qF)VCreZ9B$%&Y]_&,H>[SR9!n="'*%`2kI"mOg'JG)IFfi\eu#L,ADD]Urs0A92$jdoA]fl32bK_6h.Y:(NloP-[H4%R_1++G@jQ9_2HalKS3!4%?dkDW"_eBiqh?E=Bg)oZ0hdBs'G<TL>7`Zs>+tPLBolbI!Fs<4I=aH"XB8`XHU[V=]?rAY6PR'91Tde4AoG,rgTTrET&r(UA:_2*%,AF'\@=?]sdYu75_d;09dtP=:RfeU-Ku0?(.UGXOqEWJTR]U6jFcQP:162b":sIZLN23H]LeSC=p&$'X5me*K`8IIF'*=NEoZ2nl%-_r[FHO`Uf^3-amBb<pX7M<a?OFIs4]eBmf%R`9fZKXnjhV)GY-@1_ZZ^>.g\iK)%C(Xq^"GY'L2E]#i8#(lR+@uhH!0F<TD2^S!%J5AJaX3JjZ&A?CT$.1b:@os$kZ4kK:D"5FRVZZ<b<!E=IL)M<@?jQ6_!m&1W2#3:(F)Pe";/Ui2!="Oe8"/.J#q*rjq9!Y2c(IL+%"UkdIS*!L;moO\:S#H\(eC`+JP+jsed?GWfYoG=1lP6Qn9M*2ia$>]-<>&"`kFad^l2q[IcXo/-;#@C_KGFJGZ9B/e`M>aiWE:&_%e,(;nRfg)pp>HF;-!a9=a3jcjo<PUNJNOLh/cB"9>Q]2<.Z:-m5a[L&I((Fr,"D[E7UOiaefICRO.=U(O<?2/&sJ3!V+LabcNXVp%28^noHpm3mH'?noXtZoh[@$S*]imgNTnX];/A$G6$<R>*:Z((8^Ba-2/I8CMr']<^3Us7"nH*pSnkOPh7kJ8u/$[%=C*Mq"a#!BN%Vo9AW(bfS&->U'"35.rn)5oG][hAgN=fkRIXXC4L?>\+:h'sRDN5ccXJ`tRR_R!CoA]2oqbMZ>:#;L:Qn`^Y&(l>Tm0)S2mk6T]e%Z^0-=N%0g@RLq7TJD)^S!ZaB'R9lSS%'/`.cnke3BF*>lb\32?&M>G/g`U:oJ#(Gfja1N,^_-n@0uNBJSt^k$>oL`XV5sSr>U#r:%kEt-7j+2s5^_.8i0]l\D"6rC6ofOH9XUUXSXZ.O=*r8\0RRU\W7YpXMU:O1HZS$T>XWp],L5pnsX%"H%#bIJ*V(IZHkaF[%VV(*4%-0fb,YW<Gj5Wear"]R:YJgE`mIC!p2WNZ'2nl*!X_[+TchIr+k1J?I6f+J%I3BY8jM'1j]T*XsJX4S%4W:N$-4.$cHJT7U(9=4i,%_KXA*Zt;F`Bb;D?W^P%j4;K6Z[cRXF9T<;'<"aK3nGbW%6NjA*cX\@OY\DGIERU`snS55alK'4I6YS9^)664m7PkdjEhu!#QqEd(%7\Z5"RCrqIa9*97`$^OCb/5fl0c?469T4_BLaOm7&E-9:(Ef.)b^6@FZ9jHZ3NYJQj)=&a,_a5]O]dHu6jtIhTL+gn<(:"E)MJY)%(NeJIdK$2n.(ln+%TWY0=3_-k0l<`L-WK:s#&/W$5pFe&o.s=SEg@tA1e385N`V-i\H#'>?GEdiA+^V5?prtC&/en#!?a;U.q4f0%,0l6paN.//fAKMYQ?l"E4%9m^X?I-i1]\I!!3V0Xi+([hcp<DA#2K\XRZa87`,sWL0+s(l"X](6=)&#F=Vl-rQR=PeU$3n(Tl[q<%7&rTTCPWV%G=YP$9*s'qoZF8?:EM1B!/]oW%,>OA4739raWphncMa1%C5B?U*NU"sO:/JA;8*?=6o.TD`MfK8TtDKk_W4/UislVS%dLX/l@"e.qc2'_e_$*,n&Vh9qIW*+C#(:(28^D'91,41nKQ1G=,8.ml1X@5l0m>Tn?A3?q,EPhNLl4QdR4&Cb%fW8ZSX-mc53#!s%AWB>H9atpa:CIYVLGLSOMQt,Q+=/5r)=c0LWfibg1M[GbN(eI,NY3[`l%OhQ1PCIUV.cNuc^'Nf9q;u)6:utnVpQ]39VPrF)^T0f%N2iR`3@sYOC=;]U/VY7E%"fQri/8_L<a[LWZ:n@j>;]?J?mS9QQiir!':;5n#ns^p[X(*Md^'KY1mcp@\<RDqB&hnl`:[n>:2*A1%TfaQop&pXH8<LjF1K;55Q/K&u.NM]e(=c<1+O+5hRa@U![f?D:P#4'B!tmLC04YM.AcO'K80!:%(GVXVes]mhZ:Aa=`aZaqkM1Vu%Q1[8jk:eb%n1dg`f(]d-AU\C%_JQ)!27uMO[3/1M9@Q&OIL+[$ZuI4KaPp^Z$Yg2d.#<s.LQ'Vp]I\thO_WHgeDYjB?UMht:JU*V%f,$t4PmC>MZP&]+Q@%9*Br+T7VC`+`672eXJmQsC=>ZcUh5%ARN-UtnkY;U:A>?t8LVqU>>R6`<<hcEr_6\dS_R)K.@BjMu"=1C^%Y+ND)&Ga>qBWl.di1Y'`Mo'p"2*3&!3WPe/%#M9C`JF^>MDYF;!e*o1U)'J81'M>2oFPfHOMa5V`P!Ua6X>K#P%OAJbC"k_cH5Y'%JIV3j&LnBt9DOF-N3"A>&q_";?>'d51*^G9+Ens+AOVf.kpQ`"T.\7r3L^<5X(dZ34X^MtWsQVLj2`T-hfLm)=G$#dbT6K+c@b,q%(MH9M!_/^Ujiq<'_D%@&$JqJS6mR]6#:QgLiD9a'+fJ).!>L@*2C'hJmuXhB+Z?/f)*hLMMb+":7HPK3$;UoX5SXCb3aNe^KJVQO%e`4L#o-F[2Bj35m'<]5.M(q:hR3iNYIEl(3KkO[p/M,YFWs5iQUiTkC8RR:<WbH[_MHO/Y'J*[sf;^i:bfW7P<r`Xum=QNBZ[^f4%W+H9ZREunG0kW:8=X"D^d'?D5\H&+bF.O:^9tsr'!#oT>2;-d#:D&NE3CQ$F[8`JCM--uH)`,[CqE:R2e3c\1bdhDq@dZT5c[FLp%/I4egP#MFF'oXApkr51+[BK;CCXrc[BD-#k6M6Tm!EI8Dh(jBGOn-R5DSdJl5L#M<aHA?\EH3?Q_ueamM,t*Pc(:>e-1gC/<%ReN%A]fPAOr2*u"o7K"cObQPAJIXQ4_l#Q5B/f1qFk9b?juaA;9'[Y+u!7,QV#i"K"8tcA^rjDMmW?M*QYtE\7/DP!NA*e#goB-4S-di%Ip156,ci36jjM)C@KhkWC1c0b6,pVC7A_mBXj*:u9P6\qXFP#,8[e5JR;/Zc"j2So,$=;:,1pb.(,T\4.D98>4L#u=ONoNo[*b$l%-dY+eG#,R>%):2;+tQP]RKToWpE^]bJBZh[\I1d"cnUo289dL8pIBkl$1<(b+:Ptb%GO.2U.OPq6fQQM?CEWMG^(@$49-H9c0Smc%D3^MkOf#CA]tl3#e=!H]X*YTYkCrD-3;0Y473Nfh6'&!''SAb&hGn"N[0EtW`OisOAi??]*H/?=EJXf3aCX51[gLhOCVG;E]:Gq8%TME14UGOkI/5UTkOJn;!kq/?@;3+,(O_'B2"pC</&83X''!FISeu!AclG2$Tct%gK2*%+.Z:tFIOD)'Wb1;o((hP.:Tj_[:d6Q(#%cRanYQ@jS2NINI%;%Nhn&bLO?5,a-HJj7s!IJ:SsP5$(2SMT9,cj@XB0tCrAi'HQLko:7-Y5?5P7:=BU1o6h%$ob+Yk.SV2bW:ds%kQsE=$p:2_q$OT96cC`tBVV>Bi<1A;!&)N_H$@:bl<ZT*A[i?b9=d:mV_R[eq3@SX,p,U-hXa2Iguf"\cnE06qR:\+h*$%)pW_<1%J_oMbH,"[rm,cj>=5WuPlW=*Y%\[7BIeCU&S*.69:OfhMrVr>Sdg*Qn5oIhEWBjuj+8c:rJ_j[AiW\YP/$ooKbY@ES91=Z3Xtq,E%i6koZD#s@6N%Q[g&EV'(+JBP_N7'PSK?4B>>>R;5)F13gq[OqZC($025]8D+D9gr&)itHI4H)TYWR2593VN'*49sC=lPWHmbm;@a%_@s1aCorX$ZRuJi5`,]?PuO'FCPj*A6mV.c0R48k2*k;to#WS\OSl*P&T,m,%6`Ip)Q6_>8C#ET4!@=@G+-e?60HUhAtJ=4+Z0pb%)XOc0AWRTqFbcAK%eBeTc<"gaG`=JpnO+r,BNZ[:ZT9V8.u]mRUo'a-%,acm:4-#j%P!Un$^*tM3.T";3<=3A:jEM.$5ue<1c%RR%*\\isG".PGQ4lfW^(D)u`/V\:G?P9AJUsNERMiBOmdq:gTOuc*M1o:Z@G%(A*FRiV6t8_2=eZHqm/W,"o7I$6.(X^l_SgQS:RN@n%,bfU;PCPl3fE3*0E#55F.VbZE,h4HVSsBY'99<HpknPNKBopucr%qS7/6bC-$]5&=go-dHaH2%JN^Q`88?ZII58tQLgIr0Xd%JA'%,&9`W,\uC8NF`]6#Oi+!YTe*)"`TEO,;H3U.L65TJKnl_H:?._XXud^)Ycj-?so,?F%(Td$%t?@ID:-XoFP>sUQm*TpBf"s@2PkQ%eZ=sqZ^a-NSCOcL8O(S.FFd:1i!e2n=Xsg3hM;F]fYjjMVl$_"2aDufMa.7u<KREGXF?YHFfZ)B<BWos$TY:r9Z23$$#1pZeL5:'%2pZS"^)Eu#MIkkAMGBA+]7a7[XqSBj4V-Kr%TD3l2.im7OP3#SKHJ/]^Y+:Q<Ac6HcZ^d#gFk'SP^[0Sc-5>K_<92!OZ=pQ9eW;2%jnN:A#Znkh,Kp\3_\bC=\*R3";:WQnXXIm!pe=HjSfl-_9gI=X<=/`b*+F/+W7d^)i/I79O`"W-T_W"F,\q8ur.DaS7R?*ScTP59%_BE'.S6#!.P,N%S,OWkbV82;Cjf:!kLgW1T]-M*()G#WUMA?uV/VQUAQ&Fa<lBT_0=`l[X9GD+Fb^>A<.*o`^TR=k5()3Y<+Q@?H%CE7N^^lr2-1\,^@frpJA^'HK!0K7)^JTrN)Dc#!l$*+DpHNQ6Y]u2sqW%'TuXI<Zt*od7CYp1N%[E;q/-n:Fb!]c!o'97Jb$gJ0L%]/?e!)-'s-lG/?J6_u0E'GBXQ/PORGCV\7sP7e[PTG4dAHr>HOlt0oN0JFYP%>!Ou!]^ZI]g0c[njc**U"9?%Ai&JNjLl_u"2Spo%!_DQm:8'BHW_i2T#]bJY!NU8dV]2,+_S:n3<66VGjF!#7;[@^?"rIh<Bt6Y</j![>,G>so-OKI9/8WQA6tf+t7ko@[[0VWUHjFFO%iDu6U">/_#DK_&R@K=8=`^",t0)%Z&$lE+A1stX>P/__]?V/a7@HQ6\H"VX.TQed:PF9l':]'lri_W/[.VM71P#l,U>lsL@MNr+5%#S[EkGf[7G/J=Ee>kj15SCk>:Tk/N0HA@W=r'8cC,/4D`)'h@O1cto"7e)b$+jeobk5ri"V+4J8jVMPdjN"S8f6-3]A/inuPq`PT%P*e7WhQ3"ELk?NbKNh@!pBk#a$=\ro=!,e?&Q$\?9bd_GZY0c?*Pdp8Bf""G1`MWdnZt_O3RLGY9-h-mq"AI]37%gOPDrEeHj6OR%5f4;"<p/_[,RFr7E8sKa!+k_(,C@UF.!grNo1qdj73h5WO:mqp(lP,=C(+?-+=RY5+Xb!HStYk@/tgQm!Mq]QC2;saA$'I$dMA`\%^Rfh9Z9FLUW?SV@aN>r;ecqQuGR5Wn%BS38c4;<m7LC4%&9P1]phTu^#[/W%g(b;ZThG\J6F+ZlR\ZYi>jlLlZu@'C1U)^e%YF[#%"VWc`PF->D,GH5kf(\Z#6JD#"0:9Bjq=4Lg?pO819YK_b?>,(XY)f\)^*+^1=:&_=3-M>8+K=lC($l$":F%Q*\ZRJh$5tO*7WN)R%\="DcE`Nc[WD,aE1i3eo7ta,Z]qT42b`mmb&@4,96/rOt6_G%uRXkd<p?"p47Qcm9YV7I,W'4j=ILaPK,VMJP3J8a`Q5S3m;EKC3%$l'ri%/5D^bRA^%"<L.S[9Ih\c_H=:rBZt6"#K?[U=6DZ/9PCG:rRKXS*Z;MGl`>$$7t[GA1=Psm53#!R!ONQk.(oNW+e9qmP%Lq%<H>-S2J^qQ:p)UYULCun&OX/Z)d+NJ@clm94$YueKJq%UKNA?03bn@68M8r1K%n_:jalt6c1S(M8B[<%@>9oCggh@:qQ5ju#F0Qh%^4a]C=Cdf70?g_5-?&FCf1CK23?a<2r1_UXrA#Da/AB?.jC(VI!:$0\G66mf]I]00POqkfN&OO9&'.k54s*PN,2m=WZFpf4JRQ4H%*WkCK/2(u<Fe>r?s"^uf+.`30<G)`67=!TXl%@\)KN@&VB,\8g.Q&g.+@AG&=TB/=DotYM)DGmTe-2mVUe+1E3Y5^')RB]/Ba(OJ%<WqeUq8UQp5`*b&(RdVu6lTP@TE/'=TI8-jA+5QdI%Z_!K\;[mJWcbt!o>"4RQR**+kpgIY/0B+n:66VmNG`=:coalI!J7$4/\:[%Cblc"JTB<t`I6=kWeL*K:774c-foB"!maju?LsnC2)H.<MfF/1auUFVF`oE:N!eSQ"mF;-2Ck&EPlU$5T$[TpJ2+rHhCK4k67^@'%ee*@f2JiWX+@A>YYf\?R'`s3+RB8Ukp''6K-.MTUjg9_lBel-%=4Ems1X0A3W%[TR-";b)AV\`1#D,B9#FBhH.R?[8f6bC)E!FAd%X9-Es^fZ3I3maWM7WOrjXf'FB!J2T,=^cf^`ZeWrV;r9X9r(T9>"kin.'1*sRbGQ(eY[.`UfZj-,]b@!E#c:Bgfa&qVg)ul_#*aV%EmY:bL:+n"eKQfsZ-nl27d9Vo?a[S@2T]\GJJ=s+=ullrh_R9mYb%^Z&h$(9(`VX`UrHjI-:JLsCc^AmUeL2(R0)s4O=R2%\7gUr%249KG!E(\$Vm1l=Q-6rJ!ZW.+h,W>[-SsM_Y&:%O/00lZ<\;C'C!S;f#(f^k"!TO`<6Yl'KLhXP)W9TE.a8hL!`ceMMQM`1C5Z0c%TRn4;)(c8628UI^RY3Ob#Xq]#8RjGi\M?Kq%Ul%fCG%fBTU6n&lU[<IaYI:OWYZOi;5K,b':V:/adYn)lAdFf\pdXg/<lRqfrJsZ%i_i#JNM'gN4$>u;\I'KkAe(W5'qL9,Dp_7'!e9-4N(Q%fB<)B6PSNlP<+Dj>%\p:uYsfgE`hMeK;;+:A(>Joa+I<tC$_9gh5Tk^X%7g&8%#Ri.t8=AM[&hi0U#XK-b@pNI7K2DUr/.l"kg:WN/L&c0;MnG-O(-L)b"lX#_1m#G-R8+<VWXhWe<g"9q,Ri6--%5%5PY<6!%`YGd3Wlea^I;N8XJ@kti:*?lbErn0n<Gue*F4R-!oHfm?^G=i*3#K4uk99tQ8eG-I*"Z'8Cpq=W28H1D+E*e0AmXFJ!jp$!K#E3e%<%Bh0=4139SC[&VlBH]fL-]?eNrraYC2(k@eJ]Rmdfj;+B(]!O!/NVH8n5N:CS3]n(e%%s7ig7g[@f41fci,/WOQpk*T*c,AJ<)!%rE8S\1V7,1bVgjm_/=miJCm^PoNHjJ<2it*&/8R?+),hV^7Fn*bm%JU&J8)Vepa8TBc\DR4gW2"-9!AmC%RkT$e@-BkY)bj<R&G]%dE^2DdCC.+Nr0Eb_7Ed[dV'_Eb1Y8PD=CfAAge`.Oc+,CF@E-*O.+#'4*aPj=$,)N\MU-jNJ>L?Jk:bVHD4<)/^CKR?a-.Y]:JV(%L&O#Z(tP8J'bJD7=j,8r$e6mEV4K\&;F>a49VWT8d9&^.Q/Tn@3h?4Y>M07c\e^kdo=\Rl'sH8(!&;RBONYR:5CbR(S0L$%O@]05%AQB*H7n?O_i%;/VV/^"m1MHV!7TPS+`-3nBNOmih;6PFLqH/u-ENI"OQ+>Qb@q8TLSqF[Ca2$)CTa%<`;cZ:IolF0F_Zjln]u5Rm%WlAWR7_T`e#cYki)/*4E%V!RiUI%R.iD!#GAue/_BS?na;'O;V22$D6GK)nWOo>I4?AaBZ,Udi\ekR>-C(5.RNnbQuRT4uG*&&',%W3k2VnSp"pQ-;057oem)o`.M'd#'M&Cd1^1!j8`b+R)0WE^DRDR'f6b+9r2iJClU&O`WZR=/'7U!]CBjHXN)DLRCZTYYN^?iFT%i%%qDFc%2lDB7VWnEM*^t#M*O'JB.bI#=JQOdJQ7[q:S.EUW5!5"^`&MAa"b77]henj2]dLgf$@9:SQTr0@fo>sM4DM<pQlVF<MLMc%"cD1I[Q`=KXb@8K6T:F,6@btR<Ds!QQ*&brYo/sMhd1l!TJ3ee$#"q12M0B!O<.VqCc4$hfSX4E"d`G6H<s:0OOMi"-a.)/A#Ft#%(b;Tg3I+HIR:[sU9AGj7Z*C%q[qXN#!G_i))<PB.=S/qo*AFad'c^K/U'WRr)jO.u@=9=U05@23e7.9\Zcu'\m?6-pZ0=pSTj:RF%RWd]4e9`<jK^$PXmT6:I)RUBCgVE=b<cYN7]kU&P"4rmhXrY&'$$k/dHO6Zh<YVV1#>f2r"u7Ed$`^9);'84@N#rIJBs7\C/QkhY%1.b_oF26RA5V#t,28`hK$ODW',jCmJs65_sT]J":Mf:,VmY**21$Q&_hI'[GT7^?H3,K-O>pr1)g;B-.*\^r/T$ghC18(MK-i?dB%Y,&<qI4:^ETomo?:?m53X4:&@C)aQa2'7Es$[%duOiA9?qSg6]Fb7taOfs91Oe6]ErW9VpL_*I4N*OdcgR^<o8fHQJ.O1^O`d_,*%4>9@5H56[pSOg=/`U1MebogUi>8h56N?j)=1t#b4U/B?AUg#^11Qk:=JZWusae:5[=(08qNLY5&;k&m1o!th1dR[ru3AD(9K?l`D%]=nqLcRX)/]VUQfpb/_-dC>S;beb4aBqMpf@J'+;SM(oM=tI:;FO:BI'A=DiU@I%BY<#lEkSFdCglOr`30'ge>g]d?\lHRHJmHd^%16,>]n>692s3;;f(kLdJ,>iQk]SFcGSXSZoG+*)jGi1%l=e_&?2d;:P';Clras_m^6urU&jL5iN`1C)>Adm'\(.I5+-\uA0BlmR2%BL6"#9/V03OBl>3?Ke(c+W\&Qd"T(_\Wn3S\N8MDAj[*r\=3ea3MV?6],e4-(OBa+'f"pbTn`i%!9lR+4#HRS$^F2%BK26u&tukC%EO.BA6`5[YAnfcE"#2W1CTr[J][5+$fV!;^Kk<^kNoJ+e%:=[PHmaVcU^&L[-T&qi;qb,9\"Y&-Kb>:TKKsAj7VFUfq7&p]BXCN&%%XdGl#()R$fsC68K=iYDP#jh\DV!q85R7g*,oXQ<6>5f<Kh1Z!#gIh6K"MX]&!DJT>,Aqh3>X!-dK2&]HKGuMXB6AXTolND<m9YV%nrQ;L;F7RMOV:opXN!%oB\nVa?mgXTjV,;f%4O-0=t/3/TinFWYlDQI9kl(Qp2=',#mIYg['N)_VhocoN3(C;Bilr;.l<Ro(<1N$%B_!ug&#PI)RO0/`TfXh_GJ7O4HDcIO7EZCROVO=tZ-8a,XO(Jt,%H"uKn`")C)L`Z!IcM*[BW%s^htr+BPs3VinBM/)W9nD/Bq9@%9K%sEq$ei2F02tD7;%<dJg34fl)`5;ZS4AN@>/kUoPuH21^'6Of1D[Xqs(cUfNI%7(6Ros+bdosUu^>V.5^Q0n4G7-ciiBra)7^"%`6X=k:bSWk;#9*0><&;s2qENAl`AG5eAsn_@>2^IU0Z,KTcqfmoZddQM3`">XO)th.04)MXO)dOY`rb;$B:^;RMNmM:!u=^Ul6$l%o0g'Xd%2M_2(b?FSof@"9*n=Q)X^_XV-(SONa+!+Z&$Zc]cAPq;*ggFqpm3iXT2b%KN<q</.3i48nYnZ6Eg.KSC%++,/44-[([Ka%A`JGMhnLs4lXp]ZVb:MNdV*VP-M<C`ctlkQ'@\J))0-s]7&P\b_..Li7VJ,MrD7-[p.?Om<^pbQS?1Q"0L>m";?XQe63@tO:et_W%`]9<230&sESqUS&YDgg.<WgK;(.Mt8M^h6h^^,p&C(/S2#Yk&@[P/">()K"fiCF7amn_&m4!c^/at2$kTcGQ_>2E.DPCoqTGp"Q0%8N]Y;NKFjB^):(!3[M.*C0<!Zf.0?`BKB,:GjUaB,Vd`,-]Jb-r+4sH(b)0+oX`_9;*m(60,R"A64(nR*L/h/.%qZ<j%ET*Tg>;[%eCk!N1tE#q;XBXpkXh\oV?8,$U`.):PgDOR*1fV+NJ0oK2ciUb/7N[*#bdNTdAM[0)T.-jhBRTL&t3FA&43_\ZJJ))>;eSb$),JG%_jomb#`[A9#PL[o%8o]M!';>\)(8-p.j;8%E#J#b:'b.9J`KE.?"YrQ7lG&UeOX38AC*RnCG#u21pbauO#h52Q`M@Vc3.FcZ41n"%khMDQA)Mq#O:$9,J]<]Rd4HWj\S!j^*7,Rj+hU"6J0p/kKN2N4`oo^kjb<aRYmVnLG5c,EH3@o[Q2d7H:0r)'IqICd2pggeccik"%:@`u9):CeEVt3,/>@7+;1B(oWFEa==s1*0:YcuJ=_f?kCIV4/-;.AmU$iP.h#!@&%kL@E)Sc/AUS,MTXJfK]3S_oSpP9#q@GGfa6%dhCQ[<Do(0EF`"fr(o;OcFU(i!k-+mX;@0SJMZ_t]=)mWB71#\3A2"#i'EcLY%0tH*:?Tg(gc1X2u`It#CST%1D8-CdV'bPL@r>&%Wf6_@S9j[&3qG///r[VtpmJNn/+#.%O^r/okC%NTm1!pUqol:%mRM*+cN"u%)dVKPAe>=VJ2b-e1kS_4BqHQQ3e`.YRCc@KYcnd*%6f?ceqs=/C0I,s@hN^N\SbSTuR\ne1"O+>CP0lhubR,*[m%*p>L9"7eBG*P92FX^Ec*Dnn#$emfqoj'qGQXN2RBV`&)qnrQ"HkgU%dlu7WeP3t`g1QR#dN.PYc]$IQhfRRb6El.Y8-A682[*eo<i:?m"Y#f7OnP3"-MZ0;qTQ@>p/bmT#2,Va`pCIE5'(pW>/?d&R4M]=%lg1_!,fX?,An6<:gg=>m=eE7H,&;'WlSBg/ANd=_S%7.;%PI.f[V+j+c]3]U:bF!Y1S<o^`u++u&SWQ@*a#%;m_Sh*cMC3lU0PIQ%q@'u2]tKR$)&%_Y4a5=e8&eF,M^.IB:^Ug`/>UU>9oimEdV%24??[;0=J*,4,0[9q5!.gd1QeE<5!qXL`0']FOd%biQ1Pq,m^BZf%53'Kgc[I-fjqC=#fh%fMSZmREP<M(VDRqF_1VQ^B5s"0b=W(@Z1ibc9H\ZcakBpkg&4]peI&:F497PoJG0A/iSb&7&5U3@O51:r^%[52bcZfm'EXDpFF$hcDR5!/1@<77*'R@JtYTJ8X*m:PciBnXfGV7qrN_Y;7m1>]b:4lb'5l.A)TZW!`P]]"47OQs:G4]B3\HTL%?%-"Kdnq4?j'GRGo4emW8'1D!'jBA+l0%YW/E."W5*n<nZ[k+MDDG%g_->G;uCqGcp.[h:mrS9VmE9[fo$1skeQR3Ti@SN>XaW>dk[%7_WMU"-UR,o0'uee,9J3h_R_gah8=fo0%.7.Gq6^4u:GV[iZV-T/F,_#0pl5=ZdJFB4X$HC!6;\WG]o/3M.06Vb>Z&TAd+,MtKX;%N&T<%N)'5.YL6-X8()$2/!2`SOZl-13H7+E1[\i-/d(>o^0XC)3pAHN+GRa"qQ)tk(Up3dgnI!9Pg9]a\Wu]Qg4)$IH=;3@i+Bk(%_YD>k.]1dWN6f_In82Q\-;I"@rQb2^`3O2nM$r?"if_Hrd2APo'[hZ-Jao-^8L;3Z;*O#4AtprBc]$Wj_Ak"sBh9d3ZuS@:>*6U%%B78@r6JF&=@H):W9%c;l1DA`ghUYi%@6Z/qhoPZ<#Rh#G3pSSP/_t?IZT^aN9Q26B1Sd^5lE&<VJ8M_XYW`_<l^P4:YEueD[*h#$%1ET1=@Uso,5h(LuZTb-sag/L^4u:&A^6+QN)<4&?=ZYk)qF>`Sn#Xi/iTd\CcA0J!/U8Xj7YVHJ(ggC;20g[l/aKb2)dWd'B?0#R%T(H-jg3pQe`^ou#.lPDOdQTaIQJ!0WQd5LVme8`i4tG\._b0gMCcEp+OnP1lB>lQ'#"+3^d2M>Xc^k>nV+WGJcYS>D_*aCD(tr/;%$gk9E#/kCmT@$o/?f,Ri@68N<oF:1D^ou`a>A9__DL>ZbI:f,#\0#FW&LM;(Q/+e(N!s>>/M$3E3%&9#0"Zi2R>"1GesWSWNlbD#%8(qSk1&8BI(><D3h!2TWSbAJJ:jV_ap).F@>$,^UcRb1;2F<u0)=NZPepANg`k0YWlb(O\g0/P\nigPsCR9/"B9`Ill+G?T;C)G6%1E^n:&2;sR1nl_\0"fLKIgdjp1GZ.*F2-'c6XjBQ5l6N6f<#lNm5$QGQ+Yd`T5bA.rK6ajM;4N3kFM:6O">Q&I7F-"a8\^,N"8g%%VNX1g/ufJlYs*e"<?$F`I3oC*mBo^d9FQ*tE2D#IA&p-GdqPH=&U&J6(H%k[]5`eBcfumh[dlU<U7ucU`qp/N9AqeAcWgqU/h't%%7a?f,(Zo?9=IM-'5;Nq)V62U=o?1QAFRJ==hYLHMM%ATpB'u>\S"b,pB?+76(1%jPZaM'%0f/61W4ZN-Jh0hlknu$]7d=XKg$**m%7fCO^C,I7AmUsbtdZ_nrrQKYHC:,+)jfnh<B>_ghba#%C<5onh8,=^A(WlW's!p<F9E(2s5I9!s`l#mr9O!Tj:$6uFnE(dK$hlGK%;RhS%aSh(k[@OmgqjC;SD?/+qT:P+[Ub2<sUq.(ZkC1EM@275-rJZ"rMXV)L1Tp@-pm(`E&gmL9gs:?L@,-J5),FX0jMLks1]ZI[%)nDU*c_9-@iI5Ai*)QFIr<sLR,U7I"1n!jAag'R!TBX-IPI"1P_e7T0*iYbT-#(:ar<rp5G?4.]c]3AD1<)@O5=<Shd=qFbE1?8`%4]"B'eJp#<48#r?:>e.7eB`@IV$nBDT7NihaDr,mIYNM<&gR!(K%]'`>)8dOn)lA95;S^;Y$9aq`!omF/+#.@179NIBqLl39XS;W%#!/)<>Y1P2QpY.>T7P-RjHkgicd5IDCbC[m/3g=e-%'U=9>cMQ\_4t-$f*Tm$T6*t\nB'ZrTmUsB1SgOgd:c%\Eu$XJd8l"E1\kA%VmAP(>X>@CL@)Nj<;MmH)>-Ml=ut7kUD$b`8#g3H_;ms@Wb9hFPI[tT4bGX#9V!,sB:(i9[o/g\9SflJ`PC64QtjP0%,ZA;3M*cM%0U#e$iYhP_XO8")SkDm,g4eK'N>+J5eAC]K.="]M__WQ17bnrR.7#e,_siWTWnS&,L1g:8D;]UBeHBRu7sa?)j0u6SUQE\cAT`$+%\9W);m#:Unr^CICY-qL)_X*44X&c^Bc=At0D5DBp.jn<p/[We+cBKo$TQR,r3>P*M9EFXNL"7+Sg(YK0B-c`mcrO1[G\P"%/ZEf4%$DB&Ac7#b_Q1dQ/N3lpQq&C6BZ.R(-ni7pcJ8C(fk)=^^*DG[Zbdj,nY`Ll/C^$$1F#bJ&j$O`aS?WMHkY)a=B1u;\@s&u..%&4@%Z[p.7d7A;IG91Bc:eBJ(n2NeX%p4(H+X(j[_W/ik1(8mHOY`edj;0.U8=I$1F%*T0=@#-uJ]Scu!-@]]OYbK6%*4RN)'9U7<,=,2%$lgC`^QUWm(=AGeRDI`f<A]C#5o^#$F^]7olq[5cTlDFO%\/!AE@1$YMI1(f$*p=dE^SlG35LR=S;#"O&2fX-2a#AfSlhkpn2Onq%'@/A64O.&^l0`G6S8hkS5-6rmP[I5=n2Nd-S[o@m6c&ofKuob^7O&/Z^uS0G(BO3Sj:&)?619NL)3tHddi0WH>!=g!Q,sor3/Kd7%->,jT3cCCU3tT%93>4W4&(?B*8VgG[[q0Sl3<1%gL!#f!:,:PiL!#gl<_+a)1I#:@AS#nZ;3d-qH!t^t(el4DKuoaN<$@Nlak<X>%'"1KZXLq'[mD@;QTK4KO3g2@ZGQ:8R->1pNm=iYbTh75P0feP[0l<>KRD`#r>FD!%GB7\FATA!DcRRG,adFlB]^e%W?-*G`n2Rb0%M!0glc:"G,0KPCR>t7eaN_Ian:bp+8,%jD2_l&d@)'4g@mN[iMiE4e]7cXtDNL#$oYX,X8k(^sFkq!+@01=*ie91F(Ln&1n':L^$%B>=L:>d(lOj(:i'gCcNQqOEI;-ZWgV((Ig:aVc.lZ:oHhB6],`[2(*%-&&RlmtJk$.#Vuld$^C5AP=V<1Qb6,Uk-XU`?'Q2(+*Z<%GKKr'9[7l96LYp@B41*8__+X.pj1[#@UO52Zm#d\0KHbjWkV@jCI?[[V/cbgjI(#@WLO9YqinQhcG[j+fI^(JO>%lb:cSV<Vq8PS%E[KY_]_P=a$qZ$\=f@i.$hK&!"tF7d?+Afn/n]n1H)5L@dkg0;+1[o`rkV;^3gVWHWk)8?kAk/KN/#_Nk03$?!T$T69[+BqjZ&>^%;uMEWE&gkeq7`>SS+SgWKFO8(PA^a1G;<f)F[hr<2J8m\3u>>Ac@jrB[@4tgGf;S&3C?'5D<,a""D%XUkAk1gF(KBiEB2p#bMS1G%Hr)g>oUMf?O'Kt(f`PuuE&k8EN3f@%3KoPI2Ht:^En7&!crMc33hG,SUN8H5U"%nP7P8?+:b5N3>g=5gp1`W/VH7!4>KO\B9HsR<%.1;IuF4o*S0f%qhTD9q*no)(39;W4N85,<R(^>hJJCnM3&=&8+@0Zs=p9^oZ"?#*BikFcRX'!u-+>(5\'Ru:`!o&L7fLee<_5u8;%+I/8!(Frp2!E@.o<S3Dc(Pai&@%h'GF$Nh=1$jGC6-jJ&P`$TMnQ9iOONWK2(&7-_0cQQu"Tul:/Z0PW<U1D0W-6RJYG2jedd[m(%hR;-5>2,'KPoCP@i*s5Z(hnj7MJYqH9'P):-Y(RPYpgOaU$o!]V_FMDY<XMg1GRX'nVAI)Am<#Lh*f73;]$dg922b6/"M`4\!Ce,%pRq;3LOnhr8;G>;#=Q#*TpIA'H0*)*$ncL#)UYHBNsq2QRW_jW9G5BXqhVMg)OV56Ob@q9I]B'r!Jr)X:.W=;ZJ&mbMd6:u60cQ_%3GVI,2fmZ%[.CXrRQ98e.,R1.CE)L8OD@:K#.6k0'=$*u8V6giOM3JcjZ2N2#\J\'E^k@%,h[C%:"1]@idt.5N#EsCM2Yt9[.4?_%B`;n"9biWfT`V;'0P6d$U!\/r*#1a[]9%Bu1Q3O[8ZaImKdZ(Tp1=i?`EA[AX]ZXs7?PY4XmR4b3rs0;89'._L,^,7!B#gN0Zo_C%V+Pm=f24r;K+4Dc.]`;,j)1N#pYACGQkeUib5)jg"8ck5YFUtH!&6^=76m/tPb5`Z*2bDK&O=#^.9@T3F6NJ9:$J2]*0\So7'"&q%A3i02(eBosV)"qc5:\)aZ32o;EGsZ$QrV0r.>[`F1;d^sFs)D]'S=@85/pD+X4(!eGVq_%)Tq\t8Dkd]5aM(n7/\2!#tR!E700FM%;?%;k`kss&!*Frl2RSNlP/aDG$eD%6,&sa&la$YOc8G&)K2u%"F76Msi:CI_/NGKt]?$s8J-.Z]R0&Ac1,P.Z[!?LTRVe.$76-0n%!gP[dPPC83ZXKM)aiqngj;,C'V0#?sZ.^g$aQj:,BKRXm;%Tr'(0P1Q5E]"K\*db25Dm,55kVo]^_Nst!hhper2QKj*[HSUA.q5Y%7AkLO.b)ch!s])<=EP,)JPsS3$rSh?K-h53=3esB`NIBM=!6WAj/2ZQN'04Mpeho_$P73q4,Qn+GeQj:a+bl.)`THl>:,`C[8Z[;%1Me0jYSML1kpJbW*ONCK7q9mqRh04T#9`!`NLdh9Q1mNqOO<,@kYEW5fHH5>2gBg_Ps`D^4%`%r$j3k>68!R9AWGYNdi,K!Z<@S;%fO_*5#qR%5F"ttNX-@PfSH`uBj\ut7Vf<80PORn;>tJ]_d-]g?"4G(t#'<Vg"7@jtB-Mbu=-\<@(;lFe'c9T"0uLj:/D0?[[a;to%28)-Y))O^e;9DKK%+6$X:-gB=XgO@P+R[Op:'%_\-RF]8"E#,Hc=sac)MVW7VR/E]N_T2_L!(+1HCL%#1!Z*56M;"E+<n+9OU?te%QtjO0'KZMs$a=]\EME%eO/*ZK"qhat?@nu!fJIU9-4&=+-5Xt.aq]Z!9'RZm&elGB'g[:>6Cg1CMK.rIlB.OPTo%b<4<]9]$0.0S%0]$9<NPOKE,UDO,<a?;OE+$%P,TZ3^2J]-)efTYSC9D#J^B:s"6&SduYo8c,LdMnSe6!4&R>H?(Du6c4BEr+`k\P9oTMrM9ZG%:;%%,;@+E<1`k39Yb<((Ypk61E*GGJ(]gg-u[K,1:,VWKL@h+Bj<on=ZaHXr%/9ADRY:6Z\P9c.MZYO)/@$D?cT(0EgfB5l)"WahY"l%bWH=cBZ,u;(CMU-9q(#G$))2Q3"b4CP]XnISB#ik58ZB..l#/-4HPO@$rV!A#n)Y7WDIGU>o8&`jUKCiS$R[>W7Q+rYSk8[LU:G\%%cdZ-GXCX>.W-BNE:WL]bo)WtHO*(B/MY9b,=XIJrHdAQ@`04#<MRNadf>HgXQ$[9??skbXp0^k@G;;)k],Q`Y^4A]oU&qGP\E[4%Xn91<0D7-N4h\'=--F3690q'#^2'W.WJ8.]-XhWs@FFOXMu(\g[E-n<hQb9+rkIg5lZ+"9E\71lI#%Z5+uBcClFL&$^BA:`cC@7-%5&"QRKYsL65Z!+=(E*F!n^Duq<b>?UDd7IL!f4P+p=NmC6=6b)X0T$3B!+QOeYmYZ\r9b?0bd#?&G):4AY6?5^kt5r:*Tj]bH)("%l6oJCn&YCe`EA+fMhQ@Jn-'ScRk7m3,U]s6N^bMakQ@C^-D7pb@KecNFTOWeFt_'iEBqC&#[Fi*WO@s#*@eLNZ.K[;>T)j@mNjSl%p,'J$e8U0i5g6s>.fY0,BQ6q87aa(3)U.^G_Jiq.OPsnCEiL8]`+!jQFK?[L<>QOUX(XWT%:K#Uaf9""PN2b=V,I^^4s4DeJWShS%.#I8T6Ck3'ntpaK$=k_2p-WZ$d_^ef>N#3rrGMH8B]U6-b%2gX<#>RndV-!AXU?^kH'a)agi]jd>bNRa$r\H&"NnNaj/j8O11F5&%bR%h"*?'+VfK;3&c>Z40_j+8(p[bkG-QQ91o54_BNeB^j6B&k>:3Fq+j0PaAMkqRa1qmY#Fob43WVhQ,UUD/3N2Rse8?S+J/)f7U%ZI3MBKj!fWDS2-'dF)BpNIuZc>mV'pTP0^I1NW/G1_DV,XC2XN4[:Nh8GjdD]B#d"nr.eg*cD7VhXs5(c0++(UNQ->aRaeZMg:*]%@A<5sb9g5dK.N(^-gOc)U^Z\f'r08QEXR[i4capV'Qq[hJdcBl9gE<A&LpN\e4ub\-mBtKJrb\k'm=*2;hCNV%mD*q$4`c[B=e$u%L`Bpb_r=5r&*b4c#167TMTbcK9%m`YKLAX4IkBq@Le^o62$i_"]"s&%bZ?,?3>N`Vj'Gr?X4BT@BuTcNd0dp<*2MF2^*p<ZjGpGs%KP@G/60fE!76B0YYkf&@L9@O=A8OlT<noqb:Kj;]!(Y>3+A&I1d$NRB:1Q1L`mm(X(SQ&.!Z<1Q!7-LY@%".d*1;BI>m\huPsXu[%)[0,g<o_P8"F2?H^`N-Z7I^ST!$#UHkeKK;7(0/(9k`W"nuQ]FaJ&SM\qI.CnRA5'G@QVVQ#7&<)'EW],99ruIH&qZ6B,pr>(DU*%JI*gVKTc\($IdYQ_GqlO10aiXV8>f!ORdouFk_:2g`='pSi@if]$u-)=h#;;6J;^?#!=?G/&26#88-s3FjuTK.a3J'O$;(t,"Zm-%@[;NtcpEEob)8=*&B7%'hCQ`IAgCpY3;P/`(dLf^BB:J5c/`O\e.9BcaH2?\;(]H>1<:,5O;3;$UB-$Y/c>]10o2'Wk;Fj3S"^T$%>!/fQTZ#Y=:5ZLB1^+KkA_K?Q-mag7ZaTDP1%F4+GY[k1&5M:(J9+]b$Oa\]DI@Th%chcM1P0D$4FR\N:kF$sL'6=d@mR=&\=uuJ%bu<I"9./X4,N(;_n%@6bO\s<#1gO9nfAP/'ogBA$L/'Q-off<,7V`U.-AePiE*Qp^J6o4!6N_7oWer5DKD%qpSr4[6;iR<q&@Rn3%#,7L]J.T38!q9g[mq<itL)*h0;X(dQS5p[KSqp(=bjSE(!)u2M'BMP0Ij6/FSN[S%ZiIL2*Y3,;(t;&#!=eH;<MbN_PVkSfOh_1I%MCQ-@QQ\W_bP.I;c9\&&@P#^=U#$HJrte#9W(lh.+/#(,#1;,UhGcAk+DS$G>E2H@>H$s!Ap-/J3"n8/7C5bmenN,l4P]\2"7>DL%M)g&cUR#+_a.U1>!jf0ChN,ku7$P7;!#4g8f9j)Q0EsKi[=2VIl;Y>LdHKns]<4W0&n$a(/&X!YJ-a@rKVBqIU6=45AtLF+%0=NV%<oIXaCOVNK5rCp=T)&?M^'C^N"^368Bct:u#9HkLK=-<4@<G,0fSW/o!\!1;36R-=4;tddWS(bNKWqDSEbPZOM$J\q8;eTiqgiN\%;kfuh3F*4nLK+Y$5r'+;F;%lQ+MPY6[H]AP2aNZC@i(/H5R&PI>I;nA;5be<XYkds.SuVAGiJhH\(k_+.CX&$"/=78;aF2E"!%B+%+YlI,%bSD#"?I'QAQ'MPA2+b(R'#=>E(!Ng+a4'N+Ng7tS&_+/>*IO%4fc8OlVg!O4seSgD)n\9"1(R&&R/`$-aAY+P2H&KOfh<0%3GJ^B>%e"hX"`QQhaF-]ar9eD-]ap@Uuj.46\LSI>$`U=!]MaFlu3p4EF8p/]<Nc8l[T=<GT?o_Yojiq88*@S&'-f"!qMFLDh>(k%AQ/ac;>OZ#n;<&/9I-oa#^I,0,1\3-6oZs5@Ta>5Qj)E"s+8Whb%icTWg4hI-0bRP*i\D.9e<\r<5/R-&>Q&=3soIW*K3r'`?Tpn%K9+MrnL1hqbjFJ!luJ)q-J;h4Khsru&7fGbB4;?N't$<P]He3(<"+<R\s!OUeSg-'\O#MeS>fZFSl0`4#`?1DqP^5Rf^NsS/lU.g%,YqqP@J6'S9V?q#ASrgJd90XdJ=c#j&L]b;"[`9Rfgs5qm=i,<()`$86R1+:W6`=h,S2(Q4.'ff4A!d"/8_:m+dOk+<0jU7A00EZ%-r!4!MUfJ53ODYn$sV+A4;5"/0bkFf#Q0)\!G:H.J;n`8p4_p6R;D4@>4<)t2HVkJHj;@eodV)F&03a77;n<^CK(c^O[&1D<+(sE%l^?N<<tq@O60*<)f0%a!N(E&l>>C\V?ZU15Ta[]ge+_9Wn<@NIFcm@S?$uoU702nDqHi[M/<Wk].?&r*aP:*i=N!9Z,+V"S;=J<#%.'l47H*"o;mk'555Qbfm,?dZ*_q,**Oq7tAUjtcUCkc_f>t?h,?+X`WjJC<\C*4[aFE9a)%V,[+.i;KW$mtlqc3A7s"HF=HkH)N3%cFKZuV!?5^@B?(k$X!UGe1`qRP.i_?;)pW2?$bMs;&&T*7l#`U;5$LMK&2E=L:aH8MB$CWj"Qum\^MNT;O&Q_o'.S$<g;UWk^p$u%OXP?o1>bmXCSpk6X8pd9iQN(04cNY'@PN)5SgdS_f'#jU\WnuS$.?+m5Ya^<!RGDJ%Xcbc.!A`5$KqV4n"I]kRGmd3(Ib!<\-#qH%9WXepns"@o-F\sg-m2]&R')%C-GLta%&nkL.6XC[!W.PC=YB2Z6?(qX1*O#jkb==c.k(rV+$Pc+-o8?a6]*04+q8Ec9(?B9Eo"'!%kSk@07G_@T<&;i5*C_.r&B:MVAIoQ1B-KJ?Ta!+RTL]?I;Gn]k_(9_SSHs=F"5__PUV)Dh,S<]WgoMhsY,I1=!CV-$l#6+M<^V\=%[`uL-PT#D3%uD"aXDhiN-S/EjGb)r+J7:ZiDL,]SQ)=??6=7bj$?V\ee_EjA:oTL@$HHJ,cV,Y6L.fhG4D]@]OQ2_$j65$oed@G4%Vi=_L]O3rH!>_`q8&ZX;H8=b-eD5hVi^G4AR&MfZ'r4G/A>E52bqg^lMu#.9?Jmr%((-d4#^CZ3Q'drhNtP$glQ]MmccJRC:I]0N%]=.4[4JHMb7t@RT)-19!p*.[GX8smuB]KeX<R=ZNU6e:pFBV2s=h)lq(3g"%3uj.g3q8375:&r.'lK:aN424*.J!8U8ImJ5/8iDf%JW]q!]erhG4!ks-ol`pj%N4t/*G>F''/th7389%9Ps7c9/S1Y8UEp>CTj4:p0q;SA3'(&^UHM#B&6]//F3Ip"M*WfSAJM_:/I"+=%go#M$d%d6@.QSD;6Gs`ZqlISp1S#4K,N#-Y?>)(+(.r!\3R.q*!;%@B`J8_7OIs>#,l94*ep$aOHV#5DpSmG7(@!R)J5a=<Aj-H_%E<<WnZ&N8q93/IN^d8DZco"D9d)*W=4@;@qBVF8"<hXMMHdH%G01cf3>QQYlo\]A*;sT.e`_%jg_pJN9HDHhRBe3./+g?]>9Q't@%1EF@I62ZX."_Cf=%`k!E;BD;gk*TO*Ea0H@At:%Y?T6#sA1:Z3@%q2q^[%GD[QM!NGYTb\&7h_8]$CXsKpdW#%:un7%>oG+moJF<%?Bp-G#tbh?AKhu\+ZR\V@:8LlcsedRIK3g'aJ:qkI3a?.fGo<]/&YoPkG:4%;Q#(CE.EWb4&?Vg+P39qpa2sRj@84KQ0a%Z@:lB0%Pl)?D5Ws]n-rr5-6]uYK&^\+q_uiCm_N(_i5]OWG)q?e[#:?D_03YlI*U8B5hDhJ*Z-,UJ$L0/2Ek&X$E("s_hZW2=n66G4BM7C)%_Ec0Vo,<6E<3nlRI'bp;7Y'pJ`f_572RA*G"kEe*;,$h.b)pmp,&Eeq!>E1D!3sepqV2,J=%k4HVZV*01ARWC-?#VR#UBk(5?LTH%Hi]LfZ30\rFNFeP&-l!B9eXk&`TL[dNPo4ajDt[P8#>iQ0hEns7ZhZT!QphDe3c2jdBZ"ddkO;q(DL$+8A\qKK8r&76<u.:6L5#k%eUb(W]qcfJ%Y6EfFE'd]CQXg;(=JB*O]YibZN=sA89U_`/VfH0M!5PN#mq)m&7!LJOY]&BoL+NZ-SD[Jmcbui"[1sJPhVXsEa.%]%3JCM>l34%j-cnF/+:_)L-EbNhWZHs.2CTs]U_&@+6.]7++:tge;P@L.l/9RoqC\S0"uo@)GMGIGDU<L]J*7n(h=oi]07`eme&GH^%G6qhR;,TLn(9?jE=(^O$aUB<]Jn5:SF"k7?+Y8;VMlFh/_<KgE0h!?L!C"Z!L%6&m1gGjFe7_fS@KK^YkV9e.hGQTG.8rO,@+p0C%._siU*0mN/.,(J[pq\-8)!l7*0GG]S:bk.Se02H+q6Y^b8Lp3(n9mn&_(eUW(eKA\=df/;S`I,7=98)VI)0:l!Ido(R/*-U2#XL=%l^4sX>Q^*&_KSCc8:Tp`W#HcWLc8?G#f&<K)s.m$%u(k*F#\bp`E!$^PRL.KT.4+f0%]XH,=O=g!6Ip4kpXc[q1h:LP%<lYdkM-$%-1Dqu`pnUS7l)!8KSRk`TLCU>[FR7/I\)1GGeOsL"fAFXh(+A3D*Ui[lNgu37B_5$-J5PAX[Y\kW'Q*<:e$!:4[X]CBtbd,"ONlE%7o$T%=9M6/"BeKM.-!!n8tl)&phaD"@5$:c^8=p7-ImFaXX$l,B:%CG;FW,Z1^:F:(>h\,\?mB.c=J."i0i#Fd"'P>KrD*/aS"c%%EWs7e$kImMZ#=R*8Eh?q6@r6OOaK:8<-eVF:1>pI[!`JffLBmq8_P)G&h-Ag0.%D+;4&'a#A2H#A\JgR;'nBm.E>SjdKg\4S-R%>%QhmC>Q$>)qbC[PS2h3lc/6<79T3,G(!VHg&G,<LhP5n;qJT@OHf9?->N`&/ea@jW<+`0<.6MPu6PnZ.tCOnOkZ?69U@p-%`F6hJb%oGZ!s$IOJ#L'#_`hr0u4fN(UT/[kcE.#Z-M#mEC0>,6ZXbGT+d'U6';]1E9pTZ'M`Ae2bXokjW/OMuPY$,KS4":>,B#2Z>n6?u=f%d3EHZ0/6!911qDdWVNsd$J)b@Leu6W7Sf$TXFK6;,=dRXNY,8$R#In0%.?dE2,JdeYJX0,4h"KYloip'R1@LN^gQ([<>:E1PC^&o%6X:@:Y<M&R^<&G]&pbN4B@N%184]9tB8p`XE;,Ja%N6OoRjc3d+tDf6R)4^^a3H]=.N67-)2`#<-\ml3_$0*d+g!AS3XXIMnDA2H%@9s9q<u+sXVPdSBnKda?N";$/M[J)**I&@:H%ASr8G\EWAg*IjE,f0[.;KTLZ:@hQ)br7ZVjYaZg_pV#K(HO`IUq6,E[+^VN8/r;%&!RIl_?1?@GE,*DV(0%q`2o%3OOZ4r=o^.KN==6E:L;M!8A&AFFANH]![K2[A;q:W:pKW!YpqRa!#qpXF-?#4V)`gkjfFH9-XOV:%IP<$-=jg;onkiQ<MiX)N.;ULnLf81a^2DN#G!]NXdMcjA-)E).jnNWqjoc;\On>M<$Yj<bn+2hJaHUU,R4>fMCQFfRQB"^bd=lV&%PT39%CDeKi$TVL;-Al2UI:10f:cB`:N7)1#bcu@Y<u7;fZ9a@Q-caV]U;el)U6m[hMcMO4!H$A6O>F^eR70T!bb-*5`8OH;<;Et"%HCKS!MT$[',smh&$;r/Rb03Q$oI:]=QVDd'Ep.M<(9MVLX1YkC$*_JW7<+kh+H!r]-!Vm^!*u9^MDf6c@EuY3cSWiK+;\`gBla(=%L*C/*#%9>Sm`f=(-_dCeHQgNG2L"58L7g;HO\D-G),@0BWlTfnd1QH?BN1^\&?Mj]+Kd?VD49!#-h]kaKTVtg^dpL(8M?'h;NceL%>?B"J=aj+Gb!ZV_Db()u.CYNfiJN8W@51X]ZJO1'4Vlc`GUm4fapP#g-0je=pFL#J.@*PW>pY^]NBI,fK]@?KXqp[Xbqle=`DKA*%5i+!AAZ>U2'X@h(m^h@'$<J-:du4sS71i^E<[\h6]T%^c$+p8ba>7GeT,&'^.,:bmHJ?/tr+E$4B-%/<L.\NY-"RmI5r>eW@u_7"%Z6GpgpaEA3k55F"6[iU)RR=Hd(d6B+Gk/_Jb)R%P26j4_bJM":(%Et*=a7NGIW!7^187b[!\Sl06kT[-(r>?<XZF=e86HZO3E+TZ%Jl(HJ7=k^hfb+U>K/&Q`bXlaY1uufUNmK%LR&FSPo0<UUhjN7-^e0<E1oa#._,ZX:8#]!*q^M?lE"'&$6'0f#NWZ^f"41]>8`q,0%W_+I8e*B/JJtZ`enNl[Tim?VZ+;H]C[=S\KFig]/+?KUk5QTAS`oHrZO=U_VSZmZe;YX$=mncg@reMh+OfC`FiZD9OX>#V-H:t&d%2%?jiPtl-QU@Nn\/R8b,&g=jjgE-d:<BB5PKq&[5bh<<:DdUWAb1EWrYZZ_l':ekqH8;Y]<D`)1<]D*1N?fWl@DKjE;??24dRh6X%B5+<2Wf[(oR*=Iok(69hZm/%481EpD).lJL'JQC_?W\]*6bTRcPS%@f$-86#[K0Pi'RLs"XL]I-0@+V?,pEmkb@=fnliehTn4GLG%?;<DQo#;U4O&It#<&#`&@oeuHM8+W!X_*o]&tSn#Fqpk4!6eR3*6;utg<['Knt`9Ae9]+97[>`kdUs/G(YQ0g"E%[tP&P<D]Uj`U%3mtt,4!V_nB[M'\'qT:9%0.M-^ra=pm#FK=/.dKJ+rbV>Bh<F(f!IAVP"0D<3tVl&>IP'uCHr-j!MOaE.S,i=S/J\KX.toVE*.2"%P%fj?6Bp$JdNkaq48k,`$Z2N[<=j!i0M7WFFohpnBg%k[<m@tuZ9ZE(ak+?bCG65/os5]0Jlq0rE&q1`]<JS);_o@FSa[a(H\@_;%r`'lDd2<UJ;dD;lRIReYPg7o?Vd>;MRlVS_?R<C@_,P`&81j#2"#UkOdS&je=rCeB[qUNuPGq8q8r8:aWO17s5YPeP6=JSF<.Ydo%P(tbTMiSo9kF*Aufo':&HMUB*h(=PYJs:8%SJLFN5lR=O[uqgfG;=c/V<p'*/g2CMC5jB(:25J885_WT&um[?KoI@0:1>uOPtSZY%Bk5U*BmNpD`&iM]"?aAIke!)oSIfma"cS,9.p0qj^gTZb;@&0t+fY>\-!GC7!e;:!#:oU(_m'07<4Zo"W8cK'M(;fgK2tL'%I+ja%K0WO![2Msfm\F9k]UO][P='t"),njL`De3lSULs-"7Rd9hFUh@GUK+E%CbCV$VS0C[X]RtGSAT5ZV:AbKr21254T:_i'?9LH?iW1%GqFWlRM!bE&iHE%Xs[4$>"Hl>RCI(,=sT9E.[^WJTd,V!a1$VW,m5d#f:lNW=@d<;/X)@'HSXl++"JiT"T,!Q=Hg"e0g.=N,\YAc%+[qc`r<*^)P$n,7*_RVsc^"J+X^K7t<LDanbVUH3(!'NRFjS:KP8t%c+Dgkq*s.H2<4cR#`t0Y#gg#UL<.TZ3"gZS'7?9_u?KNG-%]`u2A/LQ`<Pq<i#Za;m>[22Mei=B$[+bOdY@]5`c:?8mp.6oXISr%n/HsG_h?[^#-I$%W0@YV@`W9B.V&@MkB\s>.Q#Q\P5#B4ko%K[)?_bhWp(V_Qsi9R<Y0!a?2D"_oF[WjI<\hl-8sJf1@^XU56Q0-dYT,06:G&Ju!4)6;iDn;!P)mFYSB@7^/\*G7>u<#>n(!SpqZ%32\XoUPqU2d16i2KnINJ&:JNR+O-lbUtF9(&`7*&89fV4f$R[\OO,M[]o__<92r'JD&C,'::1UbOLEl*/5tk=p-Ofk]m#X%"=I1j%15=L:m(ca].BPqM.ti7P=oW4',UM9g?)^#<S6=p9j,PCc,A]d$(h>_Y1h]u.@7W[6#sA^`j01E[78JA5LP!WZ7emq,\l85@5mfB(%TS:Z7K,Fs*acsa5,*rOELq"#Xi)i,-AVNf_Oj,(h;;DeCSnKqb/J8>eij5]6!9CZ46UZOG)I/#mfq:`g91&+6SFWmm%nu\D";0@2%)ob?V+?$4="Wcm$M,QtZnk"UmC_N[N=k20%l33_/E_W<&Q3:-7OFdORIc0Xf=<Fl%TEQgI4[Xdr)#d[i&]kk]<k.jJ'`F;mZ@_#D%L)QFUlr;f-i3_bh.22nK8;Y\dh#nt&Yh;q'Sd57;Y21Sr6R1(;U?\bAB-MBXZLuqbjGGd\M)>]\8*I]q^W8epB`;tkMg95CFQj&0%(BKu`kU/g40VJ)M7p-2oZJcV8ULG.3&K3AY#"Sg28Baj!PtI:d=,gZ;<YUc1gKUN:@Y#+aT"3l%>25e+,d"bUg+tmN4_"e&eFX`X%@XI9n(7kh+%!HnUNlj3rU:_83d@nMg]X;Qe8eClS08s[X-/]AZ.+Rt)-qmS1Ql;^X9-`e`]Hj@8U'8=\o?/RKcn"a?1U/57$(j1,%p?tPicH:tpd7BRhK&KiRWg>RX/WhRlf\(I"E:DjBTnVj/LHJMWdh)@&=.PH(3N!!@?<D\>\$d.>2/^Xn8B8kY,?a)$@7:JJmbha^%\>`kC>LaoBJ:T"(;>?]Y,tT+t%otBk84%CIe4hq:K.0Fd3<NL0D6+['k0nB2@QK8q(4f^m*/;I*M$2uO2?CmG->f3NShfu#GeB/4%&'^orZ3a2OC+Y/sE8BMtU-uC*K1Uf5P#,:tKO>`R[&)b#Qg5om8fU@$)jFQe?U`+*(f$&7b/@p'\nciTVBRBk9Qj=[,.6,us,p9G%-<8==LgHAW$i(19:LH@0q&Y*&VQ2[3<?]>SEX6WGPL^;,'D\nqmhd>dbFLA5,+q`#FZ\$nVU6iM#q4@bU&#*I?9iJ+ndm&A8sB@l%P7k34nPeY=/N$phi]n(aW3&V2@b*SAC3]9mT/,%*K,;%[WSqV#K=[1+-8PQt;[M"kfK3;>"d2h[?-YiR'K/:T6Oq]Lh'Y0eGYc*V%8[?K`*d\+S()%:rS"]RR)></@)9:3l_tl8FSYXdDAK'mW8RlZh=WU[mLb>H8.Ec_<KqN91]+egIPB=3(Q!lF;jWTm4MSPsbPW1DP%V!I:'.3Vul=7<pZHkp:7_.l(`BQQJ;3/+1Ha7PLi\5mF@S;HSX^]I3]k_1+oMu#sY7fo"$i:XngkbH_b+[`*=RERIt6GY[=o]r^k%7cj]'*sGRUmMpo@q3YG8EM&UEG8:XrO!:&9a9&BrH!V1=P35-GW>Atjb*S5P"1SC76%G&-"riQ/@WtB^2R_O'RO<-@e2+4!`UT)+%n_cj-N#Wu0Mup]"::LiU\TeD/\5k*E(_-re`8ukl-.OWiEh=''#'#0i:MHW/R+4tQ!J=-,.YTS'$I1L_U)@#'C#f\:*j>aL,J)W$%H%W1Q6&MEKoFZ\(AF(W;k,`!eV(a'M<)QX8_A^E$IDh]oeHI:e.I3!(ab\3Y2h2Yqg(ZSsKX4LM5eSRn[g9J[?s*&1T",*(RT0Ft%HS)mCbcjl@e=ZoU(TO<]-nrLf*(n(=op4aaU8;KZJLl[R:rQ[rC'aDUrRFl]9+iW,+=^Q*D&4i[WRr#;<7G5/fRW#kZk,<qNZ/.[%@<60U.7N0n!"%X7.[U4@YS;9_=*-+#2N]7QeUF^jN=%_@7r=CGM84p<JV&B'T`D!upQW?H)M"W$OM3M3PE%,GNmVBo:I)&&78]3f%HA\@Pj"6hEg&_KkIT&L36*np0\rIbRJm(`[fPRDiM3hT^j6]Tm0:%c&kf%W''S@+.P+Gq\&OB^-=SY%R8e!o3pJ8IsiZ]fWI<ES^%5,Y,MQ<jsZ9Rb(*`tTeU4a&<0@6g2#C(VW3NofZN-N7&1ik7t.KH<(oXr;B[<8D/OI'Ji&9)a7iKshcHJrm0>:R$^`96a`C$6og*%M28BRMTR,=jI2Ki:J7@rXKbRN_K%?7'/#>LfN4]rcGYJ]*IYO%=rcf!CG482nh+;1[T/\T`_$eV6M_s(Y#BIC*,IFJriF1+@Q-;-%R+rn`]M[H__a9hb%%:1-MK5^Fp#ALVB*(;,C&eVt6RVYDLRCfYO0F-N!7QLT%3(s6PqjW]8L8ElGn@=oLZ+*2'Ep,)V#]U<NWDa&%Oe>sedp5r7&/[JPEC<E^W=$B3^URqD1p`pRm'$i0F(5'$5WA>PGXE5B?FPA$jf(duBR(;pQC1SHeKr=,,pbW/23J]PRi^4,\UbrU%BDC=3.5U`ai@2[/9$@=h^=LDXQ`K=2oCJ--77\848`A5,H[_#ThLFa/oWtNsL>l>bo]Y@a;h>98JWuD82sK&iJpJDm5]fKD@`ZV_%=/"+0m@SMo`f1l_B1[gaYVgJn<m<.X^iib!2d-iNE0B6e6L9rL^=\UlqZ(BX$ajim>W2H+QSQ?b^l[G(k.pmrd)L#RESQM9dXVe@%QKLh;Cg16PApIgOA[IN$13n8O*fLhiGtSP+"BC\B(6F-+JnRF4NQ1n<8f)37K<eB@ArSNEOEdH+KA<H].l)%WXrGI+adlhnAFa?R%KX!A/*7A*L;*Vo3%V4u_#7G,UM*am7&eV,pH<a9JW\!:u.67G9YigW9"Ef4(iaDLmU8la7Y1-QB':q*K4!JF?W^<7]X06egZ"B">%:fUBP`2$S]s.UVXS/_;pek=^&]'h%m"^^(Y^;We]pe0RuZKOWr;ai"9l+So%gISISK8P]5'iqXKNMLELQm"B3#YE5/7^B=5k@qjl%$N;>dJ:c+((%O]c/#sPtF+^hT3/r/r(P@0C3Y]ep@YC]o(Se-F`OZ3Sje<k*j5[I:j"]d-lX5qm5YVu;![USH(YYq0&NX874Gd'g%'*-?lXJkhJ3UrNO)DT$`CI*2s/RTCTH&+6GjY2(8P(6/ENqs[KM[)USa>)dCnO8_e@\'9,r7=OZ*oaPuL^+$'R(eg$E[m`K.sE\r%jfF+sKn#a_kt)YI7@%qMmT*.MP$FE!4(%+5<,e#=hb6pf9'&P@C5b,Q%G(J'o:E2/6m:&h2F(*bOPUAaOHLU2Qm8h4iG*tF;.L*!%2^Aa%(g5GT[--.o8#JO&=p2AAoMpS/Oo^%A_&hmmNkB=E-%?Bi%B3!qU6I2fAAA?4:dK6hR'pp@"i*#(+pj,o3@d]qARmk#8r.OK%WPgE-f5]]s'3+PpHR*GmErn0V/WuS:;ZJp+)_Z"X\0K.R1/P53adEU2=4gk,'Jh]TmKp`F"H$/9$;"Uo<<0um@nbth=GS37mEB07%ZBE;@Nlm$+>rcV'!HFqSHg6mV;YL%@<5n-M5aoQ7kqVEqdF(lQKdmqiLHqh7O%$\0qFBNBmKJ]p/5SS`'B.872)73D#UiZkLodl@%d"rqdga=8CcS@FaXV=-PKq=ELZWUD$L"Wm*161<Z"B.2Bnd'$+d$T>mJ2WPd7:JcEfdZ(l[rHB#\Lj.(K5/(b]oV76R&*9KH]6Mf%&ZVT.+&mG`G`is?bp"bn\&9a7nj#!!$BL]m:-qp3,jsBGdU+4'OLaX[WE'[.9Xi="s"i+1\5BMH>3J;r`B$m+8$s$X;G'JL<"L5e%E]6>UJ>L_JZ^JI@-1-?G3-&V3+Lttt[?Obgk_4#-ls%WC/cuW0D9\gZ'+'pdae0V8)6r0<PI=XN55MFfr`?TSA[21ZL86-@SHP@0%f&u;(Q`:_=;2EoQ$UZq%oHL:YUE?b\.^B9f:_4T$JJHoF'ThC0nq]bn:6QrtPEA.+K[7HSmSj=?QILgACR$u3b9X2JW%8io(cr*/%X[j!Ej:sM'>iVY;(*H8-Z@Aa.A&4iIP\sI79UeaF3$\>+jM2(B(km33D^_'/J3H'>TI5:#ogou%#,<9='I)",P*/4bLkcd:4Od@`%5]!X+C5N=;-YWjMN;e>9H?-#'9k\Q)Z&1C,I?mPe@e:Mk9QESD9eD:$U]nL?VuW3N`YJpK3g&I^M:,j$>$KjP&aE"9.\I?2'p=@[%:r0fX1mBNaP/Jo:lnCkofs[^RF_m39$Q,U!eYK^Q.C:56#5Md7]jk'i6:N4<kqTg.ou1*jN&<dS]i&H&D^\+EemsjLS5TDd[7Z1:%2OmO$;+afRjjFN%auihe&Mi>"2fZpZ@dP^P2&HF6KO`8G$Gbu9Q+3=*:5Yp+WX^qB0^NK3pZ3`"]Q7`jf/OGQN(h88k:(V6Ur0(e%B9VO(GQt<"<+%24ILpSHQU1?fS^#r*_YnRSqF`:`m.qWg"!3_j[G4-$h+Ar[\0".;Z-jaj\+-qZ(@P757Kj+O0e-tjWP1uM=pR98%as'6J:>h:7k[]@*h`]V#8s*C1&HIQVVP&p[lr]Okjal/Z:XVea_4eG>o#a*_E(4!H@oAk6OtHm.'P%dG^+H4FK]P%'&fYor))P4a%l=8]4X5$U\H6sViG"iV:J5^S&l0^>[M\%A';gT+/M'>P2A@\G\(MfrQWOP7m3>,srkT(]L[_^&Xa+d1L+#IVu>?unCRFqnP+p-0m%7AO\SC<h2r\k/3>?&#EGR7q[5\YrAZ-m90g*_8s3K(fWD19/OR1'FhK^ho@*68D]'`'>5b1\YraN<ZVL`186$:')N[$^4Vb'2"ld%`_/g,oXTPb%*SWU(k"5?n+9<V8dSeZkrMBq,EZA.AOot#CqSt!OWB5-Y,:#O;C*44%=B:;$G^]?Q"=Od7DEZB*bCtM.[t1(ZjWnf%lnCR>):"[hKsah>I%AD38MhrEXn(!<,GO'Ho^ma7!$J`p5pL&%X>AFG&Pc2iQPm+PWa[Kb+dl9Om4?,55]oZB894\`BREr`T(F4g%`7e\/^gUeI<^Ch9!CA%`W:DN]<.fqK(kiN4F`RKR\p_W,!'/H^@%j^sUoFjs#'B3JPr"288H;1)im;HH]D)CXQt?159FpV6/Q8m@%,o41O5h,?L>aQe8?J2PbUJhnM/8>Id\fCug(4m4AHpRPS#!(.`6^-XDbh5D]C7uT0:!"i84MIcUAtm]V<Zd\!:k6Op<)m#XC.T_B%:t&28So($h:+Ha"-((SmD7sS^C+HQ!*](H*E+0sU([D:BX\%=6+LtkmN9XqmU,=b!Pd4nW8'TbO(S6>S`0!Ag<Gi],F2HS)/Yo4o%bY_>JE2cn^@A)#*1@2k=>ob1@%4!T+n3BX9Z$=TrVhgo5K@-6roI!V,`,[@FKaOLmSgmS/=1g`9F@8tRp6)lq`)_[eqkg!:7M_U@%X+_9ekWJGgKR:OM74U:*,b3,:F0QHT^TdV`"lQ]WmAHV&$$8=8jYN7Te&d&mUpJ;@AthMe5D!Ri8!\i+//cWEjZB,F9N!$1ku)dC%8`4hTaUWkFXNA;:rYAimG=_X*8NDL_9KPm=0"@'%AHj9>WB,(,Hn7%8Cbl9p!\8sr6sQQdR-cO@^qD"JE__h=!A.bNXOL3@U0OeY%,Tr@T0!>Jc;u@abJVD%jFs<`tg`t*3jFE&$6*I,V#csuGdSPN&p+q_O<r,uss'n)9j!n"D7kQt+:9oNEockWR`X(`<q,j&07i=iN%Q"+9tXV:jCm7`Uf"mW7PY6IFR9H]&$8P,beWaVPEgBm;ZTmA&3SlLgX(&X4_X":!hRh4X^ZXYE8'nV0H#oqoiN,oq(J'^H_&NS5g%m9O(7[E7!4HBiZRPpTWk\'RbE_0)/N,KWQ?.949t?8<jaPujbe,[VCHmY*k`E%Re#hQ*JA/+%94C\B(_AO1`sWZn2i9a.N=2%p#a%PWZ6T["4=%E+ib/p>V/&6C,%H'jN(O*u\::`&O[D(1snHKeTq'beQ[)J7E"9@OsENFrlogZI\b(P7<U["eO'j:`$D=3HsBs74N$i%+YAj^&!kG^geY^qXX"3DU8F0H^_KLCEdBhrC7cr&*N2t2IX.[$TOEHO.dO5uBqaG*c"*b]2=>%8BVSGVR0YUYo!.#r6D`9Jeas]0%06N?D=Z.-J2bC3b@7hG]&hh/'[C+^"Xb8D'3O(#E!XKOs0EG)b*Rm8rP15k^JmHUt"7GDEb:W1P3Z)PoHrbKa=<Its[=eck1c%hp%IRKp*X2MD>DlX5J.!$U6/]d(f496/&W'\KFZ9A`kPEe#1^'h.D$uH=k5t$ES06U,6#GV;sP,>.WW/)uC(=XM\*FKd?@Tcls3aIrn%.8lH7\KDat&4MP$XF8mFUOeL8=2R'2O_7(0QZ*d+0UP=D9-AW@<?I-Ef+rg-dc*JN`l,h91X`AO__>^0bDC-uPR);mm5J0:_%:4%%P#j-=S4nk-A/oY`+X^_)HSNY032UWR.1%Gu>9`>Fj5;ICKp'Q<^c&GtAd'6iCP8IdD#%6I-;Fp>J9nA5id>G-&`+]4=051/j<&M'%e0[mpj@E]o22n"^AIJi+Q[LiM'NKar!:Y>u5<0tbS(o?K6r_uc6T]hoqqfNG!>>UQ84:E;"2"mI,nXW*Yku_]NFC&S$U5o#?5W&d%:.bX+)Q!F6XR\L3D$[g'+WBYm!1U($jJ'+qJiZJfFrA8>#mnLDL-nY(#Ak*`N3!K`LK_3ZQ4'[l7P/%ll@F,L,d,K0&?P(QBpe_0%7#hSY.t'Cp<"/6%l37":7bQAF=..LZ3.P'W!',R%8Yu(mfgC[n,bql_M2YnY11Aldf,rJCqtg/0/K:;JibsN'hFlWF2GU7QJ7IX*%SZ4+de;'#VA-lmUF^sZ[(jR>mo,1Q8k>7KUGpDfki1+ho8ig^_KX+-,6gc(QEu^]^3j>-.UfVMX=A+s\`#HC3.qq3&fqPqaS_"<r%TWf78B:=c-4!4aZ]J(*sTCX\mjhn%Os#ppdGH*)Zgl81>XBNW2[#,TVdMNP(?j>"6'(+@3eLX'%Tke=Lq7K;lPaZ'L6/Doja$tYl%81#RPBGE'c)@G;[W`KDfd],u1P:OQ)RCb/oOC`#`];\t:,QMV87K`gT'[X50/6P7)=K7=VN"ejb;J"[W;:\I\aTU+7K/OTBVPDSH%aXmBC1R0;&rM[kL>\^VuL\(]TgCgb1$^9PK-0\]XaUn,5R!0`I7NXV_K.7aDT^"1L"lPa2.3UY`-,VX_6!'grP*K;XZ'C.k=k&n.%VFX1r=)9:b+;m+V+FG6rOhp$rG>dPD+u<-WTLOZ>CMI%4`5n`H3A`<CMAekMW_/Bc&Fa9]77R2IV0Nn+,?"b*OfK$2=n_bmL9/$S%`\X%pR=R.eR!L;OAe8UK\mZ<t1[nf^[9Z4Wbb321qgL"_QCZC<2B=PT4\>s?A]V0BUlVB>7\P/N#8&^j1f,`8,XI_NI`PEf$=r5t%_8\hGaKVF*h:G&E$p+Ick>cs>gQ_o8XK"HReL/%Jj/HKJ(A:'pHjjJ-!+MGk)!3N+ho=)S4\FZE\uWt``\`P9On+l*AC%((PfF2!%_)@@Ma3'->*S[jk(bQVes'MVCp_g<_2X.JDb=HqQ>&>1Ra4N2J*EPriA$Y/M:UJ.N-m6@s59*12HORtF4uTd,e]4JNPi!ZL`_0`e%fAss\(h:,P*QaA9;06*Erg86Ukc>lua3Z":"CqD8Z5s9>ht4sJ=/#JIrYSi#RB$7R62`r(JZAd=&W-!2'd,;=H-ViY)2NZBn^muc%^sI_pR>Ln[#_bAE[]9<DBS]'EYR6I08f^bED'V@N&gNN.;uJF/nAD7'(sZV,njIp8'L3qnD#.WGj?q5gWW&8n9rc<frg4iZI7T"i%R)'!F;ce:@5A$k@B*S/d,6SQqO<6gt9=6/<A#L1jB6][`,?kjni^WKKL(\I0-<5MR>[`j3X7BaOJq/Bg7",PA9;H/XoeAf7=6^g+%rYRth,VgJ-O+BPi5(MpZOj,G239ZEcLCB5'd2t/Dlit(@eK6T'1f/L4X?U<aEG=I+5A&!_lM<er$nXY<e]05+H?'kP`u)IsIO[O9%Or;Y;YH8(g1X3RhO-)qn.SF:A1%HMb5sWE08B]'36kpf-(55MPqO"X5G#08"/lgHBjHd%tf@5B\>H,06qUj0nW\l,!3GLNi0;Gq,%S.J\!/-I&QO7CauNk1+/)28skGcCHT4pYqf`nFpi:VpVDg1)PtO;_`]*jap5Jo`a!*^_igJBCl=$tKn^\uFCnQDdXP'C@Mn%[fN8%6$j"cIL^JM<I7Cf#l?LH0iAR?P*p'GJIP:\_Q#b2S?KlP,OmMKSB?:\nM.BV4`qJ]1FVge!nCD#$li'[?=1[l8;]i6VQon5=9=02%\VcG>$]_:IA&F^EnM)^2Lh^00*s;,$"J2Xg)!n5@[uSGJ@!Y8f\VcHa\lkr:6VVq:99TuBX8&&*iFM3YnM*BTacNF[@tm6:QO!%8%//4tb6q8^jL.4XCS+mg2'1E`Q+2]S(&h]sS51Zs`&(4sBeB^#]dUS"l"ti[T@14H(U)BcIq"^Xj9?m[(0c=cHdUP!!/=:A(@p":n%G`S]A%+<[_mT&L+pbC!8D:2nuDR@kKS+Kh6[+-WgLAH'Z3C^SifJ58MW61.:PKt.Z-V%;(2+_j?3[R`lC![iPRKEkI<,rEH=\O"=%35uQmiZL487GaM"DCgOB))bA36TQ)@D6);+MDQd5;mjX'pT[V?/2`1W"=oh>d[9:3jM=TU`mDjRo;4@!(.7?KW\e>!3ebRG@q^#?%%TT>["3b(.X@6h3%3c0C<Z8l2@!Jp`NPUgObX0htUQ_F`-;A.^1k!<0Wm4_FOmK)(G%K9R.q\<X2.5(40H5!U1Bt=S\\1^:%'H<q%eIF0&PX<C4?'m4\E397LdQh&<28J:c1mJEcj\oN1:`';_"ls$u(1sP^^/*$"0p`tfT+,]%_3HC\bI=uu"^mK<aD1Js0h,V1_n_d7%N*3/PBOM2&(F8j^7Umu(7REc1^mJ[q-^[2.N9%.G%hjXO3/TkcSuOK!=t%eJW=!/)3J1hLd7@])gqTZ0:k:>X.-\]A@*J6mB%J<J%=JKX9JMC)7LaN76kUm$nR`$&,or>he=uMmQ2`d6A1TgGI8rO'FYA07-eKX_<2QeV[8EjVeCK23-]IjNa<+4!)?C%Gi@tpZt*s[?O%]#RJ](^l;]34dO4?jn*kW4Z)\0gk)L(T.=EE6u,@CBA"#e/-D)"i^tGr,L("UON7SXm(ap@+C'*fLTA.I'&.-]BY:l(AZ""ckeK/%5KV2Hou59-)P^;>$n]taD>I^T@JG)A0*VY)%Z:X[rhMTk<F<t3?74o-7R(g*JC[\J0uM(sYu?'*\6kC4<qXGY@RO-eou0I5b0AjH%?d(cA.oeK"]FBbY"?V_^",Od$G`rr=,t($rP8Ak$^f$SW^6g'BEM!G`0nWYSUQh,k6q*$c0PS^$24\Jj20gp`#jY*J(GfS/AJN<X%?Au@hGY45;U[(6QU+.g.86K])l=,!1aT/=*@R=Z6Ci$1*L/r;cX1B.)ZnU!u\enX4h$c,_1"/OXX1B-+jFjt1\emBn@Y7/8@W5c[%X0(Yr=Ig:ZXl<fEMV9LQ`Pp3h9c17VN28kh+>%3Hb%[cr@YW[WTc]N<d!(\c1an:@)+DbsX=V@l>2Q>2`YJnP=(O+p5cSas/-^S`%1Z,&ZM]#ceWJ=tp0sh9@<0\4TNo54%Ur<bL?0a,G.Z51a">mlPPr72>p6+U8dUG>YY:5AI,jZg,;eZ"SY4!btY0(5;!XmF(b$o>R%74G#^M]&_Z"AN%COM7u_r)@5^lpaA][;(V.!fI-==Bc39,#;:j`A$rgT;_$a0H-Zt3*$h_X([/fFYU8EcEXC-Od)15Nj656H7[/S%.PHO3$5TCb/2,$!N2KaRnmY't0QE0j_kf35AL&p`LR3t+.PF7aaH9<\`=,'kgc1>T`R*8X6!R)+4>UZ/dJS1qDDuDeN,>jIW4!Nl%e<s#meeZ/\`AF$\/Og_<\rKcpbV5GBg8VLtLsukIOfPo-?EAt<NO?`!W`it6>RY7;%U'S`"/&,#eqpmRHE8<$W\0%3H3)$c^6fJN%gG%.o1Kg[jS%]`_lESZMqI8q<Hl(R+?OY3a<B-J^(m$[RN2l_`<"U7rg/q^@70ZGNWqp27JP>",^).GB3pp!TN$8?iX2%iB`I$$m%)!d*rK+d;>W\4R@Kh=O'?]6;kP\M9*MkReR)s!kL#)FZ3W")jV1!;%B%4sGc0d&dcLTA')$DOLcd.G:*&!.oR2qAd4X2)\S@*F^u%962,95>Ft<PepC-N%V6q-;k#e$mWoB)p3>;aQs+4Cb.7eYS>dZ<+([?r%uN*JMC&t8t9,i`X's(SZ)[#,b.Vu-<W>I!;Hj[;[(1f%64T;.0IHJJ"QMrQA!V6;G]jf=,KTpA=N1DP/DE*ej!]ok?5i]E"ig>^RBJgj(o(J+m*d(2`\M@jQEe4B$D9LPn!h*0.;FI#&dnLl%Je/VR)[hUei5Ts=+>?:=.&nLmJM@f!aONc^A)u7>E+;lbA,Q^6XK08VH4`S6DBpsVEin1.$=aq06KpF0(o,:X^IqQDPEt86Ke]/J%/L,s(P/R\gV(.Fdd7WJa7LEX=bnM@#JMH4jMm-Y*(h;*SCqN4=A,$C?'!&g8a@,*<&/`;>Qt$eX0r/bYlKhN!1#A(KWOs''`aopE%ji(=s7@0moMihS=r]o!MUG<D<s&`Zf,bK25Wk]JAg*Z>ob7l[S"k4-81%#XS$lQf5pQAQU_j\H0ll9.KU'bCp,EW<G<>Zqa4]@6Y%$=i.VW3X'&0gn?+mg"h,OYZ4X<+?=>*%W7I)IoM!PX[-4lT=oH;2b1K!$`j*[uOs`1%I6m=f]]4]Lg=M<>gGRF"0N2jqDlI@`X2C%(fb54JlIjeMT:N73Dp`i7Y0WgWQH%m;fXJ]kYu7bVSlSJN18^20f8#@A#$3e>uenI536(aa[`-^pAL1>4o*"YIs"!Rl0O+1"2=qe%s7"S7ff/"90$A;uI4EM=7mE9>O8eY0X4R,>QG;cn]RBCO?K[NUNdb-qO&b*9nO^4d]_p[EIsLVYM-59+q?`@Gpn,>$<dsu(nrNf'%9u!e-lH@_-r`?RTJ]#6Nnh_L/O8j@VIUMh8;<W).i!7ii)k5#"cc=X_ro=LD5p*ghJdR=>+6nE`jW;\k[7cUTO)g3i<4]jl3]I>^%g'*H,fS[]!h`nli$dr)k4ra7_]=$[G!P-gCf4I0ppd7s4VpjmAC@d_V,8I"5=0>o"Y?X;-in`>]CGV"N?G:\&,a0lFCESuR"2WbR%&4l4kQ5"M022A*YAhpq$*<=`FgsB(tIt%>rmpU`kE+tBF_k(p2?`poi9/<'(7:g.uY'ZD4n`-koBR$,M!MsGXB+1R*5bnqoF+W\\%hd2dtHPF%7LbU`]:DdL@I0(QL_E!fLE/5\9MEMfFLGufq%hc.F/,cEkdLY\qqXMtC[Zd5*r])3%D:1E27r,iL+&V=lf))/cdZ5Mg%_U'heM)1Crl;>)GBq4g*BO:!p)JmoJ5S)-41=+R@NPPBd3>gta8j<aAdHETdmFg2\9C$puk3pXA%Si'kXOrDE]lK;SIA9e$h<eep%N]QGK#&?B/e:.osr+_.Yos[`rkIP``GjWkDP:O+*\c1*B-a0->#;*eu(kZ;J3&L/JEj#ua<ZGVG7>HU;&0s>Wr?uNcUUg=HW?BQ%%]0^A&>ZI!'euu*u=0Dr<L,?H@[c#O4mn*1#g,Sl"pE'X(cTCtGC%R8I$2="!nCVcnn^inhqF^#l8o;#g6X.afTnk8lS>GlhVpjee%_\9aAj/WYAlW;?:.^*3e2="7t:\=VL?T1^WGP;&1-\)!\huE91j-+MO-_Ihs(8(<L^OQ(WX7I,tpufTK^$uW*XZlRRo]3+Ol"TD5%`UT"-09=u*M(S_t`PL7?LTc_6?<eJt\[JP7s*AiKr!i[Kq:k3[r9]\'$N;aMc,[m&HuSXW%f5;^`T=->Ne6N56076TfY;n!B:/2l%^MWE;D\(4do,n#0kjWWmr9`0qd^B&F?T10i9+IW`c]0[9Cjr2%_&rU656'pZT:`cFFmt%:pf,9e2EqV1fuB_.dl/4grRV;<q5fGO%lKJ#@=-oBuTH<j21HN-"QL481`K(sF^r=]j[jNt<5X"OfIn%'?&^K7)IXQHdnFP$9K.oL_K0RN3q0/1GQ\RLO,f:;/iF.3t5+2"5%PCl*4IG!l&`om0fi6BZA096%pmEsVGN.ks4n.5LlQoK"[b0>u*5+.qIl%/,bhn-M_QL8Wq0TZ4Al$8#dhX[g6n439Ar9_J^d9eL9%?GANbgq8*-bud3V*agPTfWh.=kHBq!%PH'\2F##sjFb[5).2>LCH_J%p&X?nZh)YtkAQA6k=gU,kPuXONVEGEMkcW>c^#$hZ=3Sh%2b\\R0J+6@A]+.H:U,35//tGkh(W\8K6D(Go^_"7%$?aWcB$j64/QT0[-X0G*Rh<()EUuKpNK;,mI'D1b-kdZki\_)mp7$I3<*QV%UG9*h_R=>8k0/Ft]Y4+1jR#ZblqqUQhH[eiiooQ8c#);'NK9/"i/]*X'2aNHFI=1`WW()WgGa&2&'jle*bjBm\=UH_q<$o3Q;0ZE%l1&6&.f&'IQH<;'Bkt0e1LC!<L%3-c%lf!Pjuh:iM>QH.dG`\qDsHj&c.^Dclo/i9?61(-I<TpT1'>7X*kfeYGO#,5>WX2J*hK!o%?i8Y3YAW3DNh)3fApkLVliF?`bth._e(^(=Ma.1:qY]^DCrUS-HH(_iY1\m/m/64pjh\Pkeo8V]H215FaEi#PX'@QMF*dl$RsY1M%&(18.Vt5!(`t.57HujaaG56O:2Y__$\"iD6!^9[Q]Qb\DIONNjOKDg-*t+&-D?.MJ6M%Zt;P+q9IWKIUU[,-OZ[/sioZnC"kb!#[%]C'9Qh*"$T2nK4m]]n\#>rN:+I<IfOHZ3tPq<IV9ElKp%`1eqq7,<MdNCT5jC<,>o=Nbl#BDE#kq:8%c^-'"%km6bG0tJNhlL!J9%#F9b#pN=I!,KM7#P7=am+PC8N_1-WWI^4HCFS*>;@JB06PR3h7f9.PgSW;!-TOn!ZqKn^tQ7i_S*5A%Q&*e.=%Xi3Yf(6lNah`r2%iD+2NB7,Hep@t=dch!(HYKfqhJ(hQDDia)]#c`ItKgAndcrQO-).a88)7kn'^);R\H9:b@QP1WgfDNi03a4g]G:l&L`u.P<[a3RM%R?9R09g!%uD!h/V4I!8iMKt^lgm^OL;T6=KEPKOf^F>(MLDGl?[^;O]s41B-c!>fTZ[Ul,$5[;*F753Wn=`2sRfcj??6,Q,*M%S%%FE2I_CR]hHN">niheiq"]^oW=4la@ZM(anH]KS>84?>Vd]DV6Xoe%g2S+k@c^JrE2[p-IDlnV;gWr?XRje$/Uc]-8lJ'IK8lZ"$E%=\fRNV)ASCGJ^8+L75V*DgS.ZZrEN'KWV^_1J6JHM>1J=n_.0a]6QBl-(;@rZfpM`S=Gqd-RZ7+N(tGPe"%JN*?Ark?nM8:__9>K%,Ue\5r:&A&9oIjVQ8+#J6Ort^*l-pprs8Rh)9A'_p;*BZieWWl`lC&`n`'?7pu`NIBfP\$kN-Vg4@W+Gn,!js^@AJ*LHbb?HoC"8%5nikW/Q)*/"-&?>n6$#E^E!0[H1DY>jmq>=Sjt"1DIIMInpH0^I(km&fZT3Edi$=OO*Vpmro!/<FO#-GV_%`dV2IB^$u$8u8V;8<%Y0RqG9,ba>^[t$X"u1bFB4pcXk"LB/S\Rl>`7gtKF<8B\PQ+f!+gtn6GQ`j74)J_V3"]W+GJ3*p&9HF5,nXTXKNJj13*RFi,/bIB%]<t;N@nMD.9-V;,pp@Z$#][@"6<pjLIF(B<3Q>iM%I]'HK\5Q<`9u]+bkZ"[8)+2p[9Y'IRZfY:]_B$fmuK_:B44KgGjfK]9`+ak%5C>`uL*,greCpH.B*OU3mG&eEKF.BZGsEFn35,cg`aYTY2c0%>1f0[6H8/6SJQ`K36Q2mf?'L)_JQhEhKA*4JN5EOr/`u;Do<c#'%Mg8LMdpeoWc9.*(*'`4i]R4q)e9t!1mm[:mR3?W`8GX`IaQBC,B#r"R6UJ6hRra\P6,/tSL,:s`K=a^9>sdYBj'RjB^,\4Km=u3V%EOIHOp#>3-r5O?c*MKKXo,;-S)kUOdW%-""[YKR;@c=>S=Wt1]OkEm3MW;#Z7k]qLDO-M,VeNk/3k5)scC>amq>`s>$h_NA3OB;b%]jXt(1Y]$*.0&,*b5Zljra#O'BB9Z)HcS$n&C5hi^W!YV/O.NX=5E]]mJGa04pX!Xj#U_W7b1(nXSnhKY,bIm*9HLgTAK0od^Do(%)a!b?_]rA,Ykg??e/rX=56>#ec&_A?)8k[1%oMp]U['ibd>Y^**WfX"h"@/.DVTC+!*t)PKl(UlKS,3Cb?(T3QS\!l:+Qi1#1QAP%d.)YW>OQ?W*,F9r_!^["*%k5mZT><Y/=21S`tYek98^F=0qF@K@elD4op:K2p4%p$/eQ8Q@_)K'QAFXTG]S[Dg?u:mT%t$U>b[HU%P]E[`\0XcCJCFA6n]R8;B5gUarQO-BZh3DI`QR7GIQ*IEGB3>A:5WnZdW7q/ehV?mNU+h/9Tt)npr!#QFE2F$bJknj3WA9nAbl5P%6dT(UI]2r"\*tX,3.,mu<]o$@)<U8-#n*91^e*uX4r:KDeH.,Sh9;6pSek(7_3>^/BneS=fhWDS7q\G/2uDgF1A6`X3reR0j7AJ0%bKhf$?@6pFEH$)2&9\)DmXO?BRutF;s#iPoH[1g\eTfs#"$cQWMjp?ukbS-DLGb&$I5$oGMduV&c`n6K<.`%)ihJ`iol,\@opaQ'%LW+dN4Go):ZQLl)KXd7HlOe%(B+-Mc;LeQ9Fn)s'D"4^#nGmh=Z_)"sFE-u4"hRm@MZp^pY_r[s=Km^-H_L\UfM:d"OUAoW'Z_DM%Z!\APj2jCrm,I)l/cH4_E#7a"55Oc>mP,LDj^GE\GBoRXKe+9H;>sJ-pjeS*jS8;8KB!nJOr^"E1WjsO[2ONaf=/.+Ig2%N[T;EQ%&e=f8*<4_)oap6[Z]d>7[Hp*/Z@uKE+W%J=>36tDZe9f_ZAreJ@+s1Sm+jSA+3.Qn3s"=9bMY]91TLTgFS"=dP^2UH/Dn-%G]E`+%7k,GI36I[Ke)r8nbn"CaGI0(!r8l*\8!iH3`R0ThT47,aa_!9;(Rt(%H-DGBHIjhLVH%d:idZBlC&BjO_oL__^W5-eH8GIO:AD8F%L\ns^GMj,cqk1(G#8uFt@H/L.jnQfb]I#f.K.fVg:"]@P1OO_.Dui.cIHXs7JSsN3Rc3K.q>bq&DT;$lFYkWGX<"bm!?XGmEBsZ7%f)Jm7J?>4dGsMKQ"pp[eiYNkJHPXR($.t:,YTNu@d")?,=E^E?*tCB[bC_e]4HD3<HFS7t^%K\,%!mW6\#3RT?69#,VZLmdlj&$+%_n4-BftO_u[8>0%q0/1GQ\RLcRH*Zk%f>#Nadf%]3V^MTo'L;V;u,tAc-`.:NrJ5/dFmK;*RNO!+8h7-?6#3/H1KM]nVi-D3G[(g%eSFW6c!InYY'H$4jA+BFlBFe-4>OsI/\E;9n&W1)c/[b'l1R"CVd,h>=Bj+\eEqO,EIKrYD<+Puc\-<lLrnQ2?MsTlUmTP8K$EHE%5dkh0[*U&Qpbd5k$thj:YD6b65EBKt'.d9S+9(4_s6C353q^Bb"hHbq5Kt$PgR:VhB6HN%4JL"S!-]MPh]/QO)$p1\6FkpI_f@Ch%m4dr=a^''`mps+t4k$]L>4tWok>a*\VIe*GHhU4']o$CI[-X2%`9Z(P4k&OCk@N!3TR3Q\+)&^'9FmTkZ>>tq:"-C^=uK+0]4hVa%^M/"/Q>P*ZDO^Xcr;=N0(C)b_kLT'hAdtq\h)3HFhN)s6oJe>O2`p+_=L#U3I/NT9N:3tNl<\k:V;crZVYO,0s%k@tG/aE4b_+_1%6bf6Ji'Z\PcB;ntHCONsUj2*t3W!_ZSfAaLo<X]=S\I?J4MLa\hr[1UD_?O/V-Yg1IILm>pSkTMMYn@LAVXm=@pGa@%]+#JkT1+l%q1_"VcgH$aDu]`[A=2_l=K8oP?<_?>2Q%n7H$f)Pi:,sB_h2)Bp>kFK=)fmgC24:.>^<`FK5#Aq#Ci+J?Hjo#5#KkmVme8MUM!ap%ILEoQ%`;rBB,&CXZ&`0T@@$t$j#5Z-?'1H1@;_IBBZo:++#l%mC&,`k>.gq,^92B4TQO$.l.=PMB1I#Dp8_hBTtaJe3T"8UHH+sL%4H.=d3%U!*1@E&(3\qS5j^C<<GLQBDdZsg:JCbl_'(32%mb&fL><fH,Ll]k!63"=Hg%Ciu8]G%[>Ns-+o;4mp>rN:+I<IgMmbm+"%o%!!P*"MP1=;5@@L7@`f`ZrVj5hBYh3L7'h=j)8l<Sc66Ce!$cFY0(kH+%iIRm$D1ASc\te$^l=n$Yac30pl+5uAF5Y3kuopL'/.%i9fE/#Bo=[Dr`4s-!0^Nkp,#F5jZ@ro"1OY&JA%qCb&^uMZ6RLI</'PaUVJ5G?@kRep*T_VuO<q?`do""7feTbZ[0tK0SSa6+PKW%%Z?mFpoH+Do!SeW`gQk:b,l^2n\HI'SaInG^t4XO.e2b85B:P-"7?K$q9WL,/h$oEBL;/m#sKJ,%%k9t$>S)d55WpVK#a%Joc@ne%`tAu/^a]7"ACkJX/FJ`mqbAJ_EG=n1,Q.N%dD_`=0-1/PF!'`+m_gjIC3/Ipo&.QPUOSnm"\fL+i#e/,IiN^[TAQ4\I_.sJ@5"ao%eM<H!FtET'Qc>1kbgI7;V>Z0A;;d`AQ)&oA3&l9VEX!EXp5E_X>l`QuiA\H6(Uu^9>?5@@TEk5\&XYlWq8p`A9^^`i;7rZpg\OY@%cK+*Ca3EL5ET@Y&s4)3Ur9<Q:;]\5'5g'[FSY(=//jYMUVp`5-o[E?`p^^07HEGfWT>(3ioZ-Qe-_HX,HiD4Rq9dC/5<e=4T9oTT%q_(b%nitsqlR,&7_r#qo5Q5Tsa+'GQ?WO%.IC]4#s6<W<E6>XcSu0l(<=5GW$`hbI1Nn&i`ST1SdUI(hs!]5&(L<@t/`k3o-gbP.%F*nSqS)-S_i08Dii;h_OHkC4pGH!f^D@@>\>oc)OZR>W75,h[*qle-Ys5a&5I%;(ST.UU[*#F*=AW&-ig?j$Rl"o&En%"Ns\TN1C%HbSfnY:icPHiKukcL1Mp*Ig8T5Bten/p^lB*V5l3.B`A?T=c_!hqp*Ej'TqV.>K7>Gn1^C$2B;?ZAgBi5"=BmpsA[Os6*sZn;h7H%%qbM/K."PUjB'3npK^J@;LZY]hHe_p=+B7hB2@fRHH,_jr2%-8o$:tFrHT"R,Ha6p=ao\%q."O$iFM=VmIRY3IkG*dMr?Bq)f.7>%/1jZnhqDc?qKo`?PFa`QlQDCTb827KI!K<FQVI?eq=!jqo"2UYr#"753*EiCqYY1-!7/h9rg3)GI*Y[`pD6WblB=H8rr+!@)_`SQ%i3^G3kkAP!@_%.@2sIZ8mhu(1\KTjBg<6WTr.nohF_pC;D"#A<To;pqMUmkO4qXEhrY'cmp[t/KXElJs>J$GJ+n71eCI<;WBV`=p%.2^7@l]()(qn:d)$;QB)i@mf>qr9@?rFD!2[R"(MpJc(jr2SWIg3:S?IbiM6rf:XiR'&B8^#e$4=)M:j[`c5:EG]0S\//&2[SP(@%K>SNSYLRr'mV9UFT0&TRV+2+eb*;/F)n5\@kn@">5k&>spsMfjQZCo]je5E,k7)^_=IW@gL[TZCrOI.FIa=C?JaVQ)%_]ngeLl8W%?<an*a/d/4TY4q`nZ+<'"3O=-kYfKq%&V\#(s\s2aj=Sq]i[I+[F'E^[)P$T(/G-O0pNS_IHaj8*ou!r&sPlq.<G!U\EA:58Wf_'%VP*iLe<(XHjI#MAQ+!1Y1\BL0?S&90>%l!^2!FI@??CaXj^Z9NH'%>*V)%[PQ>'b)?=t8%B.E%-FYo"^gaf/JBqpjmHhBfJhDenS%.14@t`"D<HD)6O9(fY]j`0M^lj`2#Qb'e^68$q@kV_X'%.e>XAHVSoBpR"=N]MRo<7r7uF-Br0:AY!oq?@Q]B;l0)QCDkr#Q6Z)d%n%(aXXs*5dZ3]HDj^KRZG906?++>V%mH)8hs2,A<3ca_O<eo<K]fg_IHLpF[p!N&hroq1`UP^#a_f^^f:>M]r<dS]Y_g-PP_ZI_H%3nY<2H9,r'>prM$MffIKJ)u_r=*T,Dhm@^k24#-?g(EGQQaaojENaFL9L.IX[UWeb%]S(E;N>n>dP@%G=DT!r@J;>>bPb,$EcI<-%!ofOD;!:?7A\+OY.>].2:%UJRn0Cc\-keYVR_2##!P?p[n+F]ROuQZ>hd]Di[Zm@1&&55?8&%5jb#@#!AhT*REa9Qk`C4m_R*qmD%epB8R@5%/A\5_fo=V8hVYo'2I_n:rO%%$+F'?_XSlW3fiWE?Zt/?S:9h/\#-/V>_=T*oGF6k"L4)"u]Rp%M8YgC-1R)*U;m5(K*p%^6::2L?Gt<4LP)XIf2cVF,.X[5HseG74,KhId8IirmSb2mlK1?l)3oL`=FV.F'KHDdYV$bgo5\<Ee'e]c,i]')nZ(0rG,/_RI>G]%pnRS3X^V(eBj'K=@-loeVmsMAq;L;edr3Pc>HWJpVqW$J]=CH/iapX4al8U@oqki+r1iV&b/.)9DR&N,p>k/sn4;QFSMjQZZoi:(%a>ufS-Vf,$2`bdGU\sr`psO,_n)fJqjY[rm[Hh-f2_q[kYkh>S>6Gu1gpN)jaC/`5pVj3th*4+giIViZ3WA^8jI;p&QUcgtZLRrZ%#A5\bVMj1*>ingpLqW`XkVp%MEN+B+s-h"^rTUd]#:G[W?iJ3+\8Mj0097a2qX71>KdF.>V8$7T^\E<O,%4T1lbVI"rH.u"nq&Oa%Di1]:a_lO-7nSR9o(Mj4TN?X<_-Xep(c*ftLC<VU<-'tU/:rsgK:.,_p<E-d!gbHWaT@ek$Fka1nN'oaY/2Js*A0)$".++O2:`n6%d"^"r5UQ1l67,:?$Okp^_$b`CA.n#j-@(,8hYjTY+d3l5.Zd5>OGUM@a<^[ia<Y%%RE3ru%5RGq#VtqV+VQpV1'o$&12."^^'\3-%fYED-5UM@of`(_'M3tf-R)F@]@P[hXq_N._^nedmG(E:E^a8,(\ATq;aT@fFJ4hT-f?D!uFoaa`GqPsk]hP\dM5e!U=hq@GoF[,3%%dT<]DeXukkoID<&(q3D2O>.51FCK!NHAM(!L$b`YOG1</X]'D:/.(OhnV:)9YN8%F$2.BE@GD4(tI:)Tu$J+]c]@jI.".b88Tna%<"O+WVIIm[`4^h4-SO?p\U`F-3N0!KFAA*-\P<osZ<Xo@?4POJ:1qim0me?5G.GDGCL%EVQ4AuKgre&Drh(kcS*AX978aZHbKg;I%n;es)V;04;8`*[n7(2gIj:)Q0<V"_jcdPN[JdHuc.IT,34fn!nZE=Q^ELF_,XpbCeAQ\GS*p`ZoraG=%oG&(pdAn!5n'q_Z_E"]Y%<S$,n*1nI@Gq?"/q*qS8o!41_dqc.'$=4Wl=[LWg`/!lr]L-I%XF$LO]mRch@?"Gnpg8E5nq,C-UD6WVBoZ?iR,c<XO5!sbc59pD%@`!IGSYgehX72^sfCpf>q<5+NEIAjW(_UCL=/<%DQ87lG37aGJB3\9oDr,X22d[@G]Z`i(1+L$D@8jP7D"Ghh<-o8=/j8?0[0qE.%DM5a3@i?+%-@^^il"/-)E]#(il*q_r#<O[9JRMa-[YiFSdZQTu@55?`odHt.BXHlqS=2FA(_S\.!H4W;0aKH7oYLeQmUbOf9l\Zc%m",U^%8K&V<uJ-FCc>F)S5PBYSP-r>e6Y01a*_XI*&.PpR1\e%P$3g9Zari(*.h:TnuB>o1>U(plKMtW;4=8Fh-?&6ad?g3kfT7f%fN$k!-DJ0:1=aB&,K`D`9CAT%+`?mND5qU(R(Z;\W0h,ggp2pC<Wie6csqXDW8CRULf<nO9SPHkQP%c%W4n8X5[7YZo.4LL]M1,)%j^e[hWuW]sVc0(S@l5L1R??LhfGNq?3m(IGUNbSYqH][q8%48?HW\=cF'b?Zc=aOK$3!fa'iETJ;(g5]c9\Y#7gnn!>*.>>Go]*J%c6BI]Lt@a?2:Qb+7U0#!Ksp9m!H%ME#Al=/K!sM9?J^:Bk)+N*H"^uC%GEl?Y5<;/.VL?p2pp3Hmh0L1^DCaHf:oB&pt*no-7XHE%[+3Dj>Kpuke__J&)Ct<FDZN%#"$XD4BIh+5O\^0/gret2JQr'Q\%_`FpZLBJGcR1U3"]6$+KeLY7pN[l&D(ec>Sk>$"6)q.e>P`T%%J8AVIX4m*aV62OX>3#5UuHQW>--WcAVY'6-6<=W(k<<[2a[u(")`A8/lqE5I!ju;I'B4W;@=L(krk=NY<EWXaIY'jet"Sa`m?tR%FI\JIUh'oM5J;HGYgs*T.]?E+1]ndmir,/>A7H@#EU'#*N2r%L`9;]JI<%%jb[Ps$qZIV,,.g$S+3N4-o[Cr4&Zf,NS9A^^[UmP'%14q/BCb&qYZB3UZF7!O%.rV_BNq1dC%`rF#!I@q#X7EAt7:.fDbk!>4hO7DGk,-Bd5YXs*FO=D"5)-`Z:V6OS6<6I6@.ElZ9+!c#%Z5ic-NcGW&N<5-0Y-icF[:#tNQi#/uqNi-4Lj)sA3n`dD5l7h<0EXRf)7NXo!Wm6+2.Ks;Nb5dr6.&#.EMaZ0^8le.eOsiW0Z?Ta%HDVe(PhfTSiQDq!?f%,Wa;ScS*q50/M@(_^SZY2am#Ff,_WVqU]^#L9X3/KJ-V!RIl92FjGE@rTe,XN`O76F4J4#5HUJPP9B&kA6%[sU%HL'E$%Rp)Ou]2YEBfp[c[:LLub&b/60"Q9QQ\HE5%c@"OU"6A.Q86IfTe]:m5BW$i$(ml5e)4H+i-Fj-$J5nhBg/GkD@em7r%A[QpI=LEO4Vtak`;mUiO9M@<KT%bGKika?V`bEJJArTQBOXp-'QAoALeBhQJ=).OV90*diB$HEb9uK!Sb(S*:VU(K>*e1G<VJc1t%auFWsJ2P4,63DD2E<np%0P])s@#JTrE<sfKPhf\d[TXMXmF%0p>?ua_o\F**pR;75'&FAglf#]e"b,-P48)m%&7)dM!01+]i3&PY%_"GW'(g%<<+Mi&L":t7^":+5p9V:qU5[ck]L&H.eYe<h/=Ph49A6>:un8KElE:WaGN4:'5M@g(/G"c4S0/%Bu((Z1[+_*TcN/,$)%ET7tBCq+KNo]4].,07YX:LN70q?T`[?)D)Qj'E.EE`rR0o@c"`iL.a5no34e?VVhnH1ZgrOBKGj@uu!'RGI)68^#ptcMdFh^(m@]%BD[F')r-6X!j:Y_VDT(!)rBNJpDP+/N`l[a'lB=idahY*8dkVQJC<KJ>4[8[gKHB%kg0o2I<C:G!S,1ITR'-:m]M8Dq`BM3ZXUrB%L<AS"bW%JU3[eN4!:E=Lg/js$2k9a#Dn/+(Q@`$3L/PY\aU(`AHBc!1_T""3WsS7TSD[eYcO#U@V&hp;ILUMmf)fl>%=&=scs+!]%<Mp%$NtR)_F]`dr2DnTX32U)+?=!H>m^nk_\g6+Y:h+i01\_0e=YbUK<1V6M[FC[`H6kBBL7:daomg#>>sPFM[7GFF6`Slb1kr&$%#&oN([q"$@lZa/S`dGNR<EPuPl`%bq0S=m^94#IL]b[\u%DC<mneLf.^BVAXCX[KUQfrR4$7-o1E\irM#4sr,P`3EUNTbMfkk+p^%^[iK?BASd/FiY$)2X^fUhj?*Vr&WJ?h;Cp=X7"t;\Tg5Qnj<o!4f,H*^,)g`@QIcI#';A"(/@O1j!njkY\D\oX,pK;L;:Ki*8r)h%(e)Sb]uL%Gf)Rj>J:nFdoI7VUiI.L]H64SrdLgP&qf,F#,;:6'GomkBUM#]66Fci>9Wt^Ndl":R+4iQp^DA'Sb=XhRUAT7BJ&I*-%L:&+DQsfK)F:$ZoHARl@ZZt-`8%lj+a*Qgn%[N[F,"MQ\qkufP=6Gq595<A2eKqVA8aY9ge@pWhDW.6m39V+f\qPd>!@J6[h,U7]%iLjCQr9b]HDbbnVUnmZT>`c6\kr'+kE:bVfeB;L.AWJti.)d*Vo<g3[XDLjbXbOghS.dc)Kj$p?jjt5U.,Wq8iLIu@>YT<4:A41?%j1mjShKuq<nK=oPUD_l^QOS]DrO<$;dV2A!"CmU'T8)5(TOb&tZ&J[bn$67EbGrp#/^(<K$q[U!mi#B\?Rd.W3TP&SNmHo`4U4H"%HqjEBmjcqnURjUj>#8R?l[%<0+j1[cP/OCCnJMST(\K;RY.FDI/,#FjMpp8D>I0Z4TAiFb8K3Yo=W<?u`Kpq]p0E"oC+Z>28IP+>%P)3`gI<pTs8&I]p38#Jp%9lm\'C*j'PHiIr3]X=TYF+%o]$>"33mF6a_G\PTg',jU\&MNWGSs88*cs8$2+k^ZW9)1V)eGjTCY3:%%r9Sg0]T2)*As5a0@RtO(/>t=PeDVK,B$%A?HnoF(*IoakWGP`(iEGqe2<dDDX<m5d<#;VWS)'YQlHr%)gZ8?$ld42@P2h>/ncB<U%gC^*Z%e.ru1*5B-'),Z'ZGeB$*L3d$J=B6>\h<!uoTHjfY@1tt,0DG!`#LVsXTPdjC!>397U>dYblRa+E`;?"[J+eQk]h_b\'_<^%V5:&,C<*Z2ZC4/8KCrXNAS=tF>(8ild`u<bS%,E0lH%+]:RH[a'>rCmE3cu;[GE,ug4VG2`,Xi$Fc;cE=3(;Nj6QU(kic7iI?U@/%I5P93j.iX7iB-AoOV+2!N/cc%JMh?C"rTS9ME[q$5V4MD#u5@pPHXSK;tRWXld<Pj&KZ)m>u^Il[VP6eF:G;f8;rpH'\=Z,G;0r!%(Ms:30LF5ge)4`#k-D6G(#m3lgl(QOdi+[+<?iO7V=`[piU:DonmnW<R_-k)PW-K?8W)DhU`\lb%C\VG*^<i6Mjl.,6oFe-._uK@%;d3^8`+?5fBg5*Xq[G<:#$*.C8lqEg[&&uV1VP3R\"gRppG;J`l2oe/*>"huopigdr8F+@>OSRWe>R$+LDK[WD@5"BXSA6]](R$-%R]U@e,MNsU,]YaOC_!RMh6/6p3?*rtePaj,Qc>Pr,?E.@/7<j;CLlnJRXTG!_F?nfN[V8jlfN<Y3"t&KF:#Ft[$T6LE,<-)@970O%FYMBhfo9)1S@d?S(Mg,2DEM_h%*>P(C:Wp'1s,l@edFu8q3S:X"tWZ\H.;ak@&fT/;218^*AsQ,`7:-a2>:E>PK?g_lW3ka0O='3%D6,9#R1Ala=;I=7ks\h2jShO4d+.*<j+k5:!Y5$<['3'@oMFg/*n/i+,eNrQ9Q2L/Hu3coqQ]NrqKbPPe?.]8Ufdq6iQAHd]4$tB%NTDTZX7XaYLK,6CPYhKm\Kqi2$m7D?X]r@(%9gfYlj_Hel+:b5lS#$9dd&PW>M<5Uk=E$eF_"U]-_r"s7<@i&-ODQhC[[D2Do@-=%O#V"s]oGt]nESYuCjg`H*#V)odU08'NQJ&?>dl!-n#X8oG'Ed<)Ff1(Gjcm!`BH<Wm6OXTj/D&?@s+'llG<%o2b36&2=LD97I9Fm%d<`D+GeYVkqI>EGh+,?S[GegR&uN_0DCs4ZIBrK'7f2V*cm.E`m;k/=kO+Y^j+a&[/"aipls#'i9<`=@p>$_T].#!$@=io`2Fr;&%R1jkP6a/5oaBQA)fU$?WcOCc>ms<%QR<Olth^\SbK]np$PC(Q]md%$-CKKCDMSU;.0urff9079;.POs\LK*2V`Q$FbhMD2-Y<Y?n%3YC$5qO.p7Uk&@-@0(h%kJg*0[p<kNeuMAgYTNHBr%;6_=-h-/%Ap=I]'noge,s^^BhLP\q;^Yu`.NB\h_gH4)#3O_i8X7VP/'/$%F\1Ls&pT`GhBd_s8`3keGaCSlZDV('oLf8SP/-t?A^7O&qSe=d2mG*+62En\^WI8Z,Vmt!aU=5#-d3o.2$fB<RUgq5dkmTYZV&`3%]l<#,K;Ob<=]"ob)@]6h\9BN_G#TtbW=@)X1Ub9]II^7JM`asF]=fhRHr)i=8pPht2.qbP?>^'p^#nE9d3X(88KG>kA++QS7^Ymq%2^5M)roH"mY?X"VV5uJIE^EO6/2%X):<eL*npWMP/%W$`%a9glgtl@k5g'"]&E1F1ja:Vtm-B#:js8WYFlFE$"7o7-3da3?_4,l/%r>F5+o6NKq@;1SZ5H-g4N7?:2ig:W)Gt8&&,1CG(0Y9N6bX<sQ]4GCD/L?chYX>2<g#?-15#..jDMjL`YJ,jrfq@lbN,C992.9OK%g@.[Nn?V!YH^toIPCQ_reAgZ(CDMOi>'3QW#psA49MRIUWk'1Y]O>I,"5%U'9q:QKN72:qf#FR_V)o\qHY*G9aP/*Z-pC_!1qP]a%H'Ta%;m].P@(I[o1]7N56h2(iV`Nq1U*>nhPuBDs:N*qGWE3-W,SIkRfKXdFD3VLCW,FRWZujbGIq/#,UheTiBNr$XBcjhYnf>mB%Ea?p0:=YPaI@I!H50BotYcdP:SW$R:n556hg*OfF_24:4@qs.K#XRNn,jK=XmlG_T)$XY8<57&)0!,RXD62F;^$H6Ka')UJ29@H%%>fmQMO_--f=hG6)b^;+d;n&$@=?;@XH-+&YhoTu'\Qf>\W]=P,1i)5t:"9J.4-3q*S6"6irgOq^G;*:)>RXb(::WV)7]fT!RW:r$%W[Y?s$+]"kO3CFaRS_Y,bO0;]/13bTDOPK*=\F5\\=;2mOJNHG<1E2oRq:V1L8Z`6V9s#>IVs8,AcCYpeGX]!DIG\59t&5^\a;g/%9H*5;Mu7cjrkZn72M.jRW6ousDN"HAgRa`.<gR#D8pa@aZ;RP"Nag9kZ`^K*UC"2dB0$KCW-X/'kiupKjC2pP6+&Q#e^f@r3,>9]%'2n\NBjU#Rf1Y>iD+16SWRTd]aZ7mC=YjEKYj':5Y"MOc35):K/Tk*0UR6b</NL_R`L-GaZXEE#XY="YfP=*b:St9TI9Uc_BY^V5%@&XFQ;A-6-=P\)D.9ArEYh55ref5O5<&Fu;I;Y",0AIVB2:an*]''RCVUuZT.$B:iOOQ^sC^m_OMiOngPGg36V*millCt&DlIUH;%nX>ZAdBTF<<ia;fotl#PO4<QX/im+r"E#&>SMmnp(@G5CLShZHPX,t1?.!fB.;jJ&mH`=\V[P'&`ao*1m8<6)8?HZf&SFqc0-d).%57[Rh`AV%L">akBe2Cf_UCKk$0Yu+rjA9i%NOfUJ>B>0p7o\,](nKA_o6U;lbhB>)mS>R(Hd2/(D9]op19QUrS@ur8kQ]-q,b7B5%I)pFNdP[p2k[`tIPM2I(7V&[tTP_q&rNgoX[&0JqYTg9!gXY'^%P6,D=/&0NkH>\6hhBa-'N/,%I2?MQL"UZYp0F&6e&(H5KX_e0%hhBa-@J3uoI3/p)mk)2dr)0s!1<YaAouBluDV'?Y@CIJS?0Y^S'`g/u5g:n6WsUusC%.M22MlW43Pq-35gHU"Z[0kRp2@Ns'%u,A%VJ6fY[BI4DntV'(eO&`W\[<N"fLM'pqGFK?rd23P_CiGGVbZc7,rp)W"5'%&eBq<H85:26qJ/1kCH)&"St&tCoTKF.d"^"r,cKE-%R@r9V5OCPaS@2DE)_+A0'3+Q\7AmK\H8S"]L:bST51`O,RT"ECS+u_O:efOhW/`e+6\=S[S*p7g<(Hi[laH96mbTlKW(p[K4`0*:%D*-u/k?dN:Q0ipJg\/>BVb3u;qqgtfpAK`8Er4]OmrfL*mgkkW3pbEfaf/lD:;*r1?]n@FO'U?1eH%57BQ]Hs66Nt^k!?0$!RHs/%*oBq5@qg+TF\i975AE)dd2L]M:4C]/)Y4G'DUJb.%P)J2o4H^>^"!?Cagp@][[=*V6[HAP+8%>Sm_c.Y\o");(e!N0gV)#jrX-uL%m''<Bn'),E5pclj*=#J"X!oLX(.6uZi@s<8$j<P'>O3XFUK=Y44:T8hdF+U^dY\5DoLbE,DQ/s??QQ*lou9e^O[2/1iERPf$gi]6%GE,j]l\tUEbGoD@0kW?D)`?*PSguD0L1qQ'ZILG/ED+!jo_PH2G'H/j2+c?b7isFGV8dd]FR(OO3ofO9U3'"h2dB^(^.*O?Ed.6C%hj`6dr9Z)rHVM9&0V2$DMjYub43>O2[%tu@n@WWo/gj"[1-nh[`^&sW(iK,_DS<jpj*,g7._OW!;9+-E3o]Cp?Z-7G>KD"]rHaBo%?=sI3M-YQ7qjg!:f;*%_XS[;)i%Xe''J,71P"!f[jH[Ui"Fnn*^&u;Xo/#Q8GCT4,@D3cUa7hlUWoacUmCl2`Kk:OO"5_W?&/r$"%ff"(^7rE(B9H()iWN@q@\@fHEUCLB&%R4hD"WIq=(9cd7%kZHrL"?caMh+#//Z'h>2K>u+JPUaEgD/&O-Z`K"+)pU;'..LuGMFtQ%%*s_$^uFB"q-,0$bd(ks!&Jdl[TdOG'<JBj'Z3qB.s!"-'g4-qV_d3e45LF--$(]jeTRTp*4OG`e8+),iKUKGbI<bUNm<iab-mHl%b8*VBYLfb2DdB]ZFhFT[Wl4Ttl`*k7godb/j-G"^iS'97@WZJO;`FPTZD,9\V7NC[>O$@24\X,;]@"#t29DUW9fOKQU5AH9CF_X:%9eDQU%Gt\52lEdsVVuF`9r-Z693k-EkUR,&YDoA0dYIebHOI*e++6clqal\d7d9P#m?<LKIf1u`p10Do7@"NMqH0_(Dt3eeXPnp6%o)3&/d6-t&d!n8EH$akEqEN"b/_hLBGin6'Sp;%/R>!_5i=9##6Pf*OG7VqLg`[bTG\5nE=i)t=boK]YFOWfbgWXt*D@u'+(hp"r%[2,dJ'Y?Mu-"WYWnn:6GPb&hTj\6CAMa8dZq[0dr/P>`mb0!m0/#,Q&Aaq">$+Zos`9@jLjc.OmNd9qJp2@MHL:iRZ*(AEf\eAqL%`,(^YJ'hoRf(?,EpLP)UU<H`DF^u>-<ELJGiJlCoZ@o<)dGngm%n*BhaL-bg1.%7c5bi)5.Q,&7:+J[t/qLaf:g<KkVeiYZ4sl[6%g]9C-.MiPRP>8OJ1-KG.LMGUBXJ?OuQ`b[<\,(2fLI?-gar47Y&4CW!5%+*/XTbb[;`4[^O/X[L2]QVH3+*^Q1U"F*q79+jGKKZg%U#U:3J.>O,*c%$`K#M"MKN9(nMRNXW2%jOOs)PNs=2SEV]'sUk3;H1Ajs[(QEn+@1mj2Eg4V63aUF8AFkaD.[$P`q(.uhq2%D>6)%idi'-[87&RQqA[aEhB4GPJL1%iCCb@a<bU:3`p)_mHX=\h9"<cGB7=5.s'G\e#_FYf2%Lp?C.]N>^8\BR<pk4>"hEU`AP&MhIZF?%?^A<?/)kWpkhci/Kh0hg8NiM[2%$P@7c@08M4L"MMO:dek+X(BC$hu?[&\DL^o(nq^Y292lm-+!Rq,^[lm0Yl"Qh,u::69so:`69%UIL%P\iQipF%3QbWe8`WA-1P0@/tfqQ"Q#ZPBEgj+dQZ`*?mqoM_nZMIXn>*7D27-=o%ZbES@1]\Sm-h\<]<+6@iVB-Z;R&VfGT]%%X]us.t"i5;c?O/YNSJs]$rj[K#6H(9V36*^eQW:[Dm2nLM#cHH/I-0e5QPW"\90(WIV?VWp_T?;h678fP2mP1DOJLoL`33<O37q%(erb^h.j&XZJaf,_8n.jKqRD9[tV:N9Uc1qIfs`coCH<)1jhU,(Gu%ET])lb;QR*WKMPG6m6SNL"Yh>P\Gn\q$>.mXZ/Rk[]Y@ZN%X;gSRYGt_(pS-U9=qk3Gs#LM4BZLED_;/oAgrr7(rV`GJZ/X.i'^QKo:9@R4RtcN9m''U-h,9qS)o4f3!t,%qGMSm<=.nKc*uG4;%Jq?5#*<ko76c$A<"^b*qhh-OX0a^*:ne+bWN)=PF&>FuA[hb^r64H(<X.eI#2@A<Q7R']X8pQ]RUYl6)9pKGpfKLekDF#V]G(bk?%UE=B``;WJt+9mikh?:nNp0Z_j@WSM'Ed"_i#a1UUco"j^(j-or9]W26Yh?,;hj'dQe6)[Meq/%GnJ*N`.BjlR#Gg%RN]U+fB6lc+%D$@had5M?DcWSZ`VKM8E%;@6&U:.RI@m@JN[A>E^Z)_-BPZ/G%1K4tU[C7sp_;%-e"D[REpn=gn?D'b^p+@[CL@TFF*/dC#jl=Y#%mf)A7.Y\i/"2eYqF2]iF0LdUWOIZk5=[OIfeVrpt`3)]f>L,p*;M6a?0JRI.:i7blo4_L\qYJ#q)V'-.R$Ai%=6=eHCM^1\@qD5R%2+eJSiKHh`O>u>00@mCH24u9)TODE<-PZ>LcgSQgq\>aCNmQ!6pBk0:f_/0b]GEZWV7"<7[t`ICN=d0E\$bg!=`KYNTdt%sJ`:hh%M@94T_cQ#6hcq.n?'bIRI4EJEkf/*so$qOR--KZ03I+j.qs,@(]=b<pT7$Xtr5YS_rl*VNY?#!OS/qNLFKt]=il0<a+)h269)eVP%i8it/=N]7!NXtg(^Qk_sFQHQ,0DAN)_B&XJlES=$55A`865b!VSM<8eXBtK2jb,jj**dADrbpt<%prW<1GA:\<BXR$_q/P_+0R#h%J,/g!o!f*bUGnhEEO@1_ZFp+WRs^h]ErRNBo$))t=lnCu56ZMqg[K^Ss+Vi']BsIJf<*l_SR)';pqGQIh)Fi;(e_MY=9[Q[kPsDj%9s5Y(DdLOI\,>--HhMY)+2.TKR+Uj[IlfZ:oAnC#GBWu/)1N?!qoSiZ_;RVHm9]YalLL"::VSC);6`ohIU4SrcU[ZD:S6n.pWpl-%AJ3tOB<Mf*cW5(:[/NqHY9*8<f:DQi-16!C8c&a2NXnXh3Bql\pA"35UHa+2qXg80Mp(GT2PZ1GGJ!g;E`rl!Ikj3JLZ,2FKB$FR%5*\oFN]kfLqT1Ss@J/mBN\=2t=3Kp$I!tP@ji.$[q$"cr@ehY>Qeri)Seq"r!e6HPo^e;RI1+BH"XePDZ69278-N)'*?DdH$WjM^%?J)[cq"s7+#BShEGgmW1;Z8]`knr+LIJUq1bLL7+-`^$4?,?q-SoZFS[uAJ[-XRk.H$s`&S,C35'k-pt\@e^0?GAIGI<>2Bc.?Ug%5LNpRoDE5!Y?:(FF8u3sig@p^jKIt3ae(fr9:8i<QG3CRC=:R*6f?G`S1G3MM13R?Z_*lgFE2JO7pB'Ag:([cJYo[N7$Fs&f_RB6%\,>ru4@#=@Ilk]C5$N",Xi</-D6WK$PV1fV4`29m4F\3"h-S0(#LIV@^gYFqQaia8[rbtib&.*lP?DHQ#\cB!4D"=YfsZNu*7\u[%$^Wl:D4,b&r8ZpR<V@:*h'^`q?hNjRhUaDf^,`cXU\*i/XcpNY:H'3%am%'Uh>5->*S[J>a/=/IMW38fS'PHU\br4M8.P:l5.c2*%F*-lV.:6(.%0*k`$l,NI27CI\IfRr6GLnYrkjSCq29g>RK.q"ga!9X:@1p7@D@-k)ZXs0Wnr9iIK>fp=IQY<8raC;+oZgV^F9DkI%nGSiO5Q,tOp@X=[&,#VEo'tW/j-r9aNT.*iq_7V9gl57@S_l0Xqe,hGDYAL+c6o7`l.;]J\**qo^iQ\e"`JlOq!n:[LVJ5GKeU=J%fF5tFM=9lL^Gk:p^U(+mnio$NFMOmTF#8mUC\@OpBBfp^cFgXF]PG]sf0OSaa'PpX2IPRspSb!OVr#V%r!sRoog%2cGkd?8h#-j+%jR)4%f`BIDe`Zu(p0\91c2pbdL/E!S4$o&aRagY@AC!m1ES8L3#lZ=[bkA<b[qpA-=>mf"(AX)%ObqV^aOh"hKb6E9!+O*89n)8O%VYKms13N,I-dftb4[p.80%f3!1\S>Gi<=F1E6!<YSr@#qa,f3>=+e-blM>L.'n79A_"Y^+NIqCe`/!t,)GAr4(ZDt*T=m0jM^(aC%LVFed*m3jZ)hV']D2GMl'oP#`K(nt:'ZFMg$<,;-IK'"Iq\O0ARAnEQ!poV3I@`7d9Fi/?e.RXEU!WfCA,gRkA:oi&rDmQMg2B.?%6hC?0`CBi$/lAX5cbU/fd=6e!1unoc*I,l,Q<Y`S'qCCeNu><VG"mWq;h*UFqTn(b=e0LuMUX(mL>fEs\UrDu$7RfL1!LTMjpb;Z%rU3=F8H6u&cmEnF`.@L87?C+&`*e8&L+sfL/[L9^:k**lQqTN\+Z7/UMg6;<$.mA:m=/A3`<-N:(Npu0oUPnB,JduH]aniI?Em"O%YZqKh:lkt<rhEN=@?MT8p=E^1=.#ue-F>e&)O?[m,cIK(j;\j`7KdEdO_F_?,kK2HKB[m!=7Z+<DYGfI&\i_2V>e4Ms!9a%#lAsb%pqLpcs!pn2Il9CIs'2Ws0%NOEG#&>jT-EH5IIH*-:cMP5.B^V4OUL[D7rI!T#d?6>;2""](F36\U3Z>nT9[<rns7V4=+st&#Q9jM%50s5Ijq#[[qI=n)o$\%Sq7HZpWl(`@oYs`arH<DRV!ig1OaG1KRSr#*>aD57)9/*nR_3snBt`eML!C>V*38nGb\6PT>C!:nDu.14%(ndfF[l2ZJ=*>ChHZ7d/+,4B2\0U[CUsrp[(Q6HU0E'SKgH(\,2bH!*e$;Z;.3$0K%umD#M=HAY-:r&/M6c[#mS<fOU`8"qj"eH,%,!-T@2s2r1*R"*YGCS8Zf>\\u[gVbKP[OBTO4_"d]-9mP&+6;tX)hA,*,18RI%#u#`cj*+^(@o?GZP.1:g_Y;54\]+:iNF$YEC74%i%EkV^71R#^MK5+aa]$Sp:Uc^9UVrP[$Y@"2Zc.PRjCpMpf?sC2,23`,b7MOK/!@rI/K@E'*qodd2usJkb$@5;G8`D::#<2X<b+A%4ZQlp'TWe37Z'l.8m<?_d[1nag:=8jHtmmc5l/f*.9mX7K!WQQr.g,aEL?JGJ[(G:QKJ)1SCK*]Lt&#Z>sO^^R+te6Jl.U"+D"&r%,i!Y-g2k849U7$J:U9HmF(>l3&tS+eU(T"3_o,5Pn>n?Y=B@tV*C:2A;k3JT27:S@6[Ihh%Q,K'53^k1.d%G>&t=4$$rr,GP*?O?%a3_B;-7uC"KoUCa$E,mDl8'uT#q8j\c\g)Pq6H#;$#51"Ocrm"X+u'"6n*,"-ma4AkDXppEZ*VjOA[Kd_b?\@@'Mmk^:p(9(!@8b%kfD.nQn:,/:(h>?#-8sfQ,IY[1H$ferZjEcQW';`hG\eFa\N6ir.=FfN.O1=`P!ZqVjNa63=e-N*4*&=#*i'n,>`s2,:g!g#g.bH%l<K?fP1Wh26j([m%?hJ`?El-ER@Rl"b%)ZCTV:#_0JPrN.UJ_;o4%MhgI6!@mua>]b?33NL*F4SkroQM$W$Ljp5fm-eBc69CZUsS%CHnlDZ!\]U9/,Lu.Kq#j7P$J"i@!PSg(6q0haj"]efp38Rf>oHl3.dB3Z;'33k7)rIWKOaZFRmg.VG[o0hYPYGbNM5^L0AKDe[;Y%^lKX:iHq:V4h-CrB8+8H//t`n6;s0'GS25mJI\4e>qlQ^%!0N6Eti5_<6T1<i&@?E=ft@)iU<Tm!fs$mA0LhKh?bWObpL=c;ea]3%o:)*2+Fn9'+st37pnQ22):P]tnh6)i3R+j3d2qj>1m'5Bqe-3Iepj9m^!om;C26'Q'V7QmE$Aq!#Y:do/o's3GbQOYQ1MRcP;(5q%8h-1gBrn-"7O9K4Co](47B%fpRGoE\-FF/d#HlMG'%0+PKe8En*;`JOk/pqEFFd$D(JhY/f]Q!iQC/#p'!Dl,7?g`mBR:lDC&Qa>%VrWFC%rutnQ3i""P^#^Z,0R5GB#=,(QReFa#F%Tb#)k*8m5UO.C8=X(dT34"]q]FWCP7usGcPoQPNJ;lW/k'XYjs6=?^_;]D`+R`%ZW8;.Rn6E%g=g5`Tm?c3M<\](7TjRE('X)eAR`)EP+M5AA0o)aOdoNa=sXbm1LS#Y2+O^Q`'(1/;_Hu5"BaV9O#iueplYAO7F"qj%QbU79`bW_+f/&UT9k+S-<m)H#OaTBAMH4Rtp9<9,lF/[+XX,_NaW'gUmb'`\IT#n7iq/V.U0Fb_a5+Y(r],DW)P`W@8M`$RrjWX#%<>jjrTdQYpbs<[8Wu.TX)[M`hh&e-.U#Pnj60;U>,dtE`Y'A-S);:n9#7EC<]HGT37<r)WSd>?(V@g2B#.s2+E$>mRF3_0d,a4)Y%;bRW:ImQOfbc(Mrn'a%g_pl)J=N[^V_U\eB)1Nn7@C@G>S?\rKs2E\'s+K%G)4^&)iL?anT0*j<,UgsaKB1L]rt.;X/<AFbTRZ*_%6fNYs2t;l*hDIiXQU`<UfT%Z)s!j1;Vc@;ji'@e(&]3GZ-L2FI+Be4K#6;.r6AO--+'-oMk@l+n_t$UM3`t$r(duV$[`sa1"i<eE%lVr[/qIf4>30ga6+T[c0]k+!(TU<pn\^^Z#eSE$^!pE_Jh@#`W,[U8+JlK`oqV_s4+%0r<s)VP'Q+k,LdQd>O-,n$X(Km?\8oKaq%rM"B)f9E*V9(Q,[X9T/PB>+U]cZgI^CD5fL>V;HQh&!4ljFgr_jX1Et!e-*[IUq3;8js:VlC,%[gqJgiO5*mu^$nsId4%C-GpMH@%b,DE/NDAL.d.hU.e+JFbC+GQ2<F]GW*p%$l^/U$#URV:%C:\h@4T%]bXhTj(?gJ7u8;'aQg"YfPs.>mCp3M75:Ic[oVq4_!8,1\%%pJ:c'6(:Iuq!'r?e*Hu#EGtS@]o83uHL_[M>*k"-lKdqM\U2an6*U:E\JA9n<eu6TpN5fUE3%mkj.4cn57[sRo^cnnjQ(Q(P@bjc%Enr&FFT4L0r.=pC<k[>&_:EW+YZb-[rtYPn.;F`7?TT6Uq4i:!\eF2W`_HKs,3n7D!^<("%OjK59N`laGjB:/S^"jc/R#0a!-/@%%li!#[N/$pY'XtgLT3^L9n8Qg?j7Nk9^&@r]7Fmd6r'fB?(KW98>lBBMFUuIf/jf?rmc<8^dHCP>0WUu5J!c+u]\_o:A9dU9Q"9nU%3h.:7EKgTs8##%<jS1Ck$_#7gd8^*(E9V'5+90=6pclt,,Lg6%S+!X0LF^-#1MNE[f\>DDC$4o%B_\27^U"QV#b85s5;0=45QB2*%8^:P[5;0rrs64*j,!C-;G5ItdkIJdX>Q/9e<)brH[%P\&#oN_^=e?f)Oe6l\V2]ur?_Hagb,l1MO*gg8'#jk1g7EE7IsMG,rKHXb%)*`Un*nanja5sE7D7Bjo7?)q=afBfI<Y;_^]B/[`[FRLr3UQ8,>;(_$VaiUQe/@oU>8tJT2s!Gblh1hn_p.W-<WD9)0FE"blX.@-%qaTIDIg,@45Lt*`Kh;#nKB(s4c\UDnhP^Vs*=]nqD9gC17sf;C.[b\BU[H]6mE:.MBYQf;qbaDBH89<MlAeX9a*[j8:eY0%Eoa\&%&'<uSSt<<4Ne]X_N7M]GUciL9O&%Zhh;bUQX^cV2'%F@^dtF#Z]#ef#laU;o/Xd]&O8?o!dGD_(TX[aDJ^1!@c^j-/Yq9EoZSPIb%2]C-*qUAB7@i894Mp>(X]8*/V/hooc:R^%p(9K"*pUP&gkBH>l$64rG9OAe68,_I4qQ5bV5>PH5>C.aRc+UsM8PuQ2Voa4n3R97!%&-(jRer+fKIsfu-g,hH2^$='m:ID-b_4OI"L9'#UrBo:(T#""!N5c-/hNt+)4RJ2Q$UWp6NeRjnSQ*=JIX6$&e9L[G%D&kOCsjuG%IJnXT2XM+$DcAh^&E>EXD&;LtatYpSUORZE_!1(L%silA,CZG'd/PJ1cONYrHsrf5%H9%$Gt#&hoQqsmV^-GsLV5G='_9F.8V&2S%qpT!Qk*:g;,N'VioCB8Hc#0ZVs6(!5.6/H>(`YF->:2feB.kfS3TA9B\qm*#->M=!4P=Mt,eB\?G/[e%kT>kGqKtL;O$A##3P+e-%P<tq7d2#V;DE<big?+QS.eh\Y<_isQI+-tL#IFU*CGUB<%?L2]i*lA5^0M]O\c^=ILjs=u;MqoDE#eag3Go`7]E)KZW8lO<XnC-f%&D3r#a2G+C3K5n1PR\X4Ytg^P6<WDJUN1@[F?D[#+8<B?VoQg]P4#!4,."b5K6lPGO6]`,'BpF_EB=H)8'>Dcc!#n?P)ELjL]/a3%&X$"lD:]<17t_F?gMus0Km5af*6At1\2-NLPus^h6)AEpBe`5m5MY-/pj"=Xo;bI\/6XPWeq7eMrPio!-g'LTfP'&&Gerebqftou%`$9;T1Bsp1":Y&f0^sD4^_[URq"TGSp!XBQD)BD"8s@D&6lhomod:F)e3&t61O05OiIlSB[nCr,p:'#C*)EOq-m`Y=X()dVa.rWq%hf:``,q3o&'5'6BmI)'4df/[dD<cGbgdVQp+D3Vs_L"(M_t-p!pK`NfK"1oBIQZD5FLXJMQ,;r/r"b'sXge8RgO'EUqrs1NQ$uDY%nQ^UD5'Ik^((G=+SIFYhI,@'ZHj?*e7I/=%F>V9VHF/B--O5DCT#/n+H%#NCHdT'S#Y7mIAs3HgRkSM0+@QkWX1+"=>W/)(.ZRCP%P8`g/&/i_%E3+JML,ddKDg&kVEB3e3F7a<tclkq;+tO?7>HQ.7>Kb&t4WI6?."$I\9="("H8T5-DKIM6Hri\<P'(YT[:Woqc)oXE%3*U?<oga?jLQO59cXQIi&/mQ1)@X+L#3Udn0/Z4gHRB'SU[oa.AJ`?&4#if^T6d'XU,P31XZh<JHj3KqZEQ\SI1G/Q[`;Tn_dcZi%L_)PFiAN-Rh;Ro('X<>2<c%>c`tZN`h3g?gi^0,R9IQ'\X[ZjEp@H#DD>2*(CE3#-#/*5Kdt_kj3uje[\^ZA+qV!rJIC)Y"ma:iT%#jop)qpE^*r`l(fLc\8LU=C[,[5NkH\WmuM,nlfrPfW_)V;];$\-^n8aj?9*2scs4\7qPs-Cf[/g@UD\8*;^["gCL3qj_9=dD`E_%#)/,Lff^CIZ"rG.8BdX*3@^"aL@mggjL13M0G@Y4FH?/deS/9]EN-n%D];EGM.a7-:Zf(iB8\_+k3.&:G^,Nj6aP2)B$Pg=diOK^%TlF>1WQ"!@N4(O3*;4TdXPK;(i8VSh4e$35N\no;fmO;4HL']dCDLI1DRA.EPIl;KQI)R[JnRSZo8bi-Z+"HugEb>LGr/TZg@3U\%>*2`i%9IOGXJt;V^#aoj6/tt>2eTMhZ(&((%ee0Z):SY[SSlD`S^;>#e2p$tE.cOU43e;D:++dIe6j!M-iZI,,\P2>>hW?tBA4Hf%7ZG\p)r,3*oWWND.JYm<MpBGDGui_-H[(n_rQf/"SjUjdLs2a\&T4j;>$8_5-8R18`$@;-J8D^9^h^eN[=Q@t"KNl.T#XWR#Ci=V%AsEg\-bJR;bMJn.i/mQ[60oe#5]"Kc)ni@GkGP*So!$0.\jlG(SUVJ:aH`F.O,Q3B/$sF0[mH>WXLPe?BFQ\Xp9FXRA,c.^W[%>T%aH$hm^Uh3_AI)n]qa[8#G!-c9o@W!"4W(9piQ'PqMH1pcO4Rd8P@8Ih1"NU'b1L8&3,u'/4b/L<icm"G?`:.P//b$3T(MX'i?.^X%QVi5;4k>Z%lHMknm>ct2)Y&!ETLomHllGL)7OOu7:<T$/hp=lKq^j(L[ji!Ti_6$]r]TNfk&s*?a89=k2$=%jjUR>HHuQ2+Q$kdM%Cd%MW7:AQ!X5V:4<I"jm]<dj-[(X3Gk`O?;[+[+]J[h`J5JQo3B&W.5lZ]r/DEUau4eM*m*^;X:S_lH?oQ^&WXm,.EHel6[(%_:\%MRbjaq"hh?Vs=9Zg@*Xc/fpYYm-9IUlE1Jj/gnbSq:kJcXlRXaS^2@9(Dgs0N>>#[jR&qIMg*`)*TrD'T6,5t^0FlI;#U'`]t=#b%bB%aVGK,A@gNlZUg#^bboCg(SPN?_T3pOWLXnKSMD+'k?Z9*-R>WuG!<`e.$^(%6[S[uDFSNPbFm-KVS[dBQN++J3I/Btkr4D<Mf%rmTlDrp$E#q9e!6bjqm:VlS8W[^N*:19srqIX-CR]`%)sm0ja8n)h)@]-g7`p4K<:j6O,7Slkm(\8_KE>MfrcH*m3hkOXf7](URJ%dFP'cSQY^S8pc![ntD\n]C+87eCEp?oLs2"VdE1PmA_g`(>;j=CGVMo\%^-=/mWt?]$rsXH10#<bI_tE^$\)`g7)6u?JG,tMr]'5%*q*D13ktFbnQ':Ap&=X;j-ee#gM?-,^17.$(@OBB9rG._4)[;7[L[`:%qb5n]lVpLr-ik9g=rCi[!g_V,\Hc57F>U`q=3YXU!6p4%gUCn&28?VB]1`#OT&-$0^")Q[m#(t\K(j%^(RH0p>^j;*/(5`sQU`.Bja2/bpj$K1c.9p\\U!uaGC/fJ.P9kU\To&so$P*-0+WW3%H_(*SAi>b5S#s(dI(K5tq0$u@g?PN&&'#O+i.oY6$TFKbRV_us8FbRnpJr*I?OLdRT(qG@[oU6>cK'?JLe.8G13;p@at:/OJ*1_5%kO%)Z4'UU6IHI(O-;=A$n)uG42<m:V-Le")J=+(J$B=n>@JWl7q$WsD\Nd[/bQmaAfA9X/2RC&EqoSStDYO!mNnJgY14+$6h<Xe+%V9Y"\mIe0]Mr-bDmn@$SW:q6<4>K-gXUcph`6=^2HImV[]):s_Q_hB6k4YA5K<%)79A;B/+n4>iCL:ofbOOBapOaj\kA*#KX=iD_%HK&q.,MLU1mJb5Tgrl,_Dn=j)K'jN.?+dL`nlpJ$n]C%jdV>//n;qS,]AlP0=6mdbc^.D(Y-*0)]"0-$0&0f/<e"IMR04;>0!$Z=%FkjVedhubil[)XNCqR%K7X3(d^H4Jf/C@X14?["td/NT<0Z>Te*8UG%3kbK&Y+7+[I#p:iHsZ:UWM7;#^<6;Qe(9Ut/FAm-q^XI<%F/pU`&d,cg6Gfh-Ck4nhM5^ufdF'Z)=PDG6);.*bf<<p%K7$n\K,5%'D^p28p0_J*en3L?-/!bIajS\hp;YR`)3Q]JZK9Bcqu*DF%Em(E;KD0PYQtAc6npu*J:,s[T<c>Vfgf[q6+6:YZ#@D,AY*SCJ<V<e%=-g8]R+^Y@=Q%D[LMq)#TZagZ*o61144u[Y$kD/'gDdcn%Y##p1Ar7(Y<c/A=ajk15p1+!Mp?m)"m*iA&R9A;;ddkEKp@X2qAinf@;K1aB]8*p&VZEB:g.59]GOE1tJH*3nWHR1-?XN2[WpQss%?Yt01\8R#Q"dWhu,+qfUhhR8VL!K\idGF0*"#1h<p(+?EG%7&(/r>7h82a7FVXJt`>ABV\Y=-L]-[(9Bf3]Wsh0kj)o4YL*'"`?j%GJrb(@se1?j/)6\f)E7jn8N*%RXBNN;IJlq7sm;pdU#/o;!"n9R,f(b%Mk+Po@NnX`Vb#YrPJNr98D(^l!@++T6sm;SkL6-cp+s"%aV1r0p4#5SIlF.;hVBDYG;4i/SIU-8UVnariPR%l4%oC)hrq6_faIgSpc9M4pZ"=s>,?E:?dW6<Q@4tDprJLo9Fm-BIX%*0ja%`j%jGPZ4mr'e5g%[")Enh&I!MfF$EfZU;NR#+jL!FpC4:8g*USsQ#IF,BUJ/dd7fCJH\o_%7.k6of'omQ\Wa**D6*e*tW@ZJE]QOsQe%5!N;%QM9s\?"0*hWGY],f)Fl&e@)%f7:(;%,E!leRX_u:j/IV?hlclY:G5C%(jUK='@q2d/`@H>^[`G`YEaS@=^YS`&B5Sun_qo"%]W.,o`f\5)@$E!Kq6_t)Eca]b7cQt612TEp%L=U><aR_4'?2Q6W6Q`!;SV"JpF:fi5<nADHd"/)DH1o2isn6Kk(JR<<XB1kcbKN8%On)?+r4_+`+%>k5oYN#+kEf5t=L%DX2kCJ&Q@=]"GtZ"p).Un4)#K&5T)Zb;_D;$]YQ%odrGK&&hE3f'?+f%O+A72g`X3r++-Ne^%=^1k$o_n^QV42P%`KL5_]Z[_]lkQg2QM23Q?@KSo[.jC>i_".hq_bS",'-)C]U8'2`+I'6>BXZ#(TTSR4ON8]fc0\!l1a2bNSdAL%=7N_^bDU;A:M3>4Vlr985C)h5'/-<UV;H`E\GU_orU]P+=g3Ot"&U(ML4+jQB?B)T_X,n)@K"g4^YSZU:?\1BQ/8X&gDt?.c:38X%k\TZ<pM[2s/8Zn>8rlcS&i%30qqXDr>dr@A+P.=AD)PK:DL:tkXFk_S5+<SLIer@(2WdGo&m=Ps_d@CY0&W26;Yl<saTYq5@.b6K%3fBh[Qau,QIbl_@'K;C@IMhe:p!s"K+2*$V@5G@1;q]_$0$f+il.hnWq"sWGNk%megt:u+>l8iQoCD1E'/kW0`t*i?^f0TX0\P>>%:ZdrbIC%`BD<+h"E<6%*_h[s1?u;\;r:L^IGN)@nSE3-c3>EU-pPcXc0Yi=d_!HGZl[S27C&a5i[/YOL_>_tKZ.I/&">tMtf<(5A%8&&nQfutK0XP3'q"=Id>\sG)]g?XC1)>\[B]BHr>s'.1j^6AdsFlR)+OL;:;EVedPrQ@jG^L*G-$%Mc6n,B4F>4*C#IV8]F$ooLb%[T1-do5G+%GP:.S9B?ZfYp]-I#D306oXNm*S'L<9b3sC?06[$[Vjj#S<t8#_/*5=J^j4)6Fli<eB7"ET4"jql^5t;1+$9oE4ahgf%rUSY<)u/._%r]4Z!QW)nM;:DPI$(KNbmb_QT(e:],6tBQNW#nJT"8*ejQbapna:0Ms7G],*oKe6s3=\jG>$&$[e)!5qtX+P@7Ql3%&om71kYbt&5(7B^GFm"o5A[:eF*hct`E$k.*rks/iTeZ,[hO\"\)cH%g,^MHoP/OAbDf0,=D>@VYke*6na4MfC\,.ol[,H*Z>WG"%O`VWP?p'rbIXHP7X/E4BMRg*7caPJ#\'isK\6#-m2:d;6_jnc^Bc2"TRsUoeJ:#BQ*,[FsNV3dT$F:hrITZE[<9s&U?@LDkb=eYA%F7)cAK;BptDDEm#V.[aD2r;;/Bg6kr[er&?II_2iH0ZTbPnW'IDrdhR:R7=g?M;NTG'N9.S.>btkh4_&HG9FP>!Ls0iJZH]_;$P,%SZX'?feIX"O8/(Lqm>qUo@8mYq410:h`II.$]VPuclG\`F6+l[,'sH`Za6r_qnlajL1,r;OaZtsYLds=;R155*j&Ld[r5ssdZsgS%kNA=Aa>UR2J[9c7V)OV9hH&+Y9+l_mS[Sd>nEK&RL&8'W/O);Kqq0;7hT`H8hL)TWI^Lo:9)N`&_'e!j(L+qbWT"Z8h:p,65-E^p%Z13^@OE=f2Djn>n\9;G3oulH4n!CKi?_)b[EbkL@oSmQCD@56594I)L51)dlgR[^^lamUY.T3"E7Op8Rc$$2FYZF>%3hI5G>WFen%7UDiAhRR/lelKoQlfa>=fud+B0-uZC5$/(r'`+(>ZqnGRDpRlXJ,,=&\m+RPjnB:(2D)&Z:<uU>^%5t5nb9@.]t%jLp$OrG27_39%Ht/f/B_0Pnmd.(2)L`5C)7=.]ld\cA%SgnJ8%W]MKGgPZb9PF]:NsJqF5OWWYk2brc2APtK[Yk>9-;8lrr.d5H1?5l*JU_[3C<2h%UT(;A!7J(VF2X\HN4HRsrSbWa?qltWE7i+TQS0q/YC@QFmJV2s'4Is)mDF:3L.sLXI0%_Y+81`#Vq\[Lqt^04PJoVSUY,,I1L$5Q%4J'em+d3_sp=%U!jmDF#m?J4\PA<%'B&AWPDiiiUr4Y>LI=@A6<[F'K>iL83]pq2ZlMdQ79((LmBbQ&.qsBZ.[`r-`g%]-(qrNVj%Z546a[LY$p0"!q2X=c*m]R"haY'AIADXY'(S$[*_>C<dIW4TXFHkO\Y,k:!R(?aTKG8B#^nJ@3YNfUIiDqsEe+t@oDHdS+)1U#NU%_Lo\RK:.)[_*cX(h`onA?Yi\6JoYFU0`=Y=Nc3Mbhe[5$7Xa/MO&),*?>[q>c9M37*uX86Nt(^8lJYW#H7@M>HX!Z#mN7PaX.]Lh%i:_'go@Fu4I2/O;iUbO[LS%)3j]e4T.gn;=>^]>Rq#5X'i;#N!:+n8M,PAJE!LD.S0hl[`>pWEdj7`';`\BK#anA$=JWE9m^-9'<%HKiQ2n`A(EbM0qp\H[Z188IYK^tI#FeYV[1BurQTIt;TI&W$*,f'8NEht@\^pNMrGgq28f'-f:s#2=Lr@8q>qB6F'uelt,#^I(K'%>OF.lL9#8S;`]I).8P82qM*J>GM\K_o\`sN\`fjMB&DKQ>e#!"3Te<9%&1MFDF[f&7^kRKH`tsl>L,KY#sf`S8)Zp"dEek6UJWE;%[^pXldaNt.o'G.k#%V"Xg\%JFZj6&,["n&9l/khKo2"/;/uHa:8p9?hcD77-2m-Gt&>rRMhXAW5_CpN0aU']l`aLrkpK(]7;12/>%HLHpfo&@Q^ms3qt6Pspb'@MO-MZZ.&%+`DAh8^TY8(\ueo;OOMMc\Pr#R?b%LC<h<.HJIKq:Y.hj'nj)#ib*d)bFZr3;Qg"i(FuH%eFr%IB!QA=[bsN6`rFC,FSe%_\;\=oV#>&<G-ZM]q=h#H;VF>eAf^1R*p)*Jml0ip4IJj_X"3Vg_n*,CrSae7G*MH3+'cEIDYl@k%g-Q5a^f-EK.s&AV1s-[o`LXIg1XE8N&->)BT%38c;e!Wl=(p[F\YbLeXqkN^?!J5JhM?%<H=uQ-q$ntRIHfEWp6?B8be;DZX;$[?%/[;+`dk>XPLPPHep>4p,Kj`9iNE3e&DB"b$B!>t+mB!\NK@(!c^1UNF+4%Z('!Dg8GP^p_%VX+jDT!dWqgQ=],\6KE?G@sA:YTdY%BI?[a/9!hdlol\!Dj]>554'HD7ITa.o'PY!iaA.1B'QDl0!]W*\(=\_(O(\Vf2"?6cDP$e:+tW.I_\l+T=:!MObK_#oim?]00;*'%j&)1'=*gdZI;-=H\_gd+RMpI63]cVOeGe$bH1Um])e\Um4^?_>\Fge'XPXd0?Da?]T0-9OXZ.l7In'.aCA6H)igilKam?AfB+fLU%H]P!#LOIU]gILX4"9#YPKY-[g7lT<'[f#3+8n<F^F4;I3o2GN&+7."6e&//ce8jgAnr>WC/_iDcIF$^GIWL4UTUXh?(KPm6)@Q@?%Lo+E("Z\IJ:;r-,1NsZ&Dp+Y45SNt#ACn;F$Y55=?26Te"uk_S[X&naZ?u13B.tho*k_C>mZ@/(Uf0bSI$8382c!MiIQH:R[`*C_%NFi]>D(+7sGdA%tD=kHFI=(Z>D>`_ap>P/ZW/tk]*^@gMeq$\Y7A\`tAA!@T,m:rs8n.2LC&+g-Z+'+[f63q-?+.NCD2hSFn?rt8%"I?g:,o(QeN7uCjZ_Joqb/ijQ?eAJp\TbZpE9mId:>=TNK`8.Ad9;o=$\N+*k4?h((>]B9;k77lq3-Rn0&:d`4NP[0?N*F:U&XXX%p[.GhH*=\Y^0P#MabG-mTAT%M-@muM^7k@(oD8:'DaD7AXo:Mhn'r@)GD7V2F$k/ChRKh'%j/KTJL=cb7_^4^s)dopOn4hK/$n^#%:.MulB;=;?qg<1W]s0]2BtcgrhS2^tnME7-$_f[gdEBeH`%RVOqfeAkmCg7S&R*Qm]Cht@%OQ=\^0KAtgmVMt1g#'.;u)8tq>9:(%kpIKAqsraaX^SU98fZV#P$nn#VdA'3=OEsUXGm&XL;Un\%Tqm+Oq/GN<8]"!a]::]1;D99qX%>\nG]7#X'_bh8MJ'NbE";n-ft!k%^;#'0oB?"f=(_HflV1PUIl3UL6u#"k4AL'5pW:Xk5m.$+a6LqIj\H[b/^i==R?a[+)0+KV/`NI`d7Wla6gEt0[A,8*l]mN4ZCSJc%,LajX+tc+S\\59&42Dp:hn:3;YF>3obdCP*FEJ4mD>?N<n@04HO`]PdPDu!na9d7!]_^a+EVIf@iBIg#H+\HPV`Ed1/l8cOB)OsI%45B\k[-YH3ZD<&t0l3p<;>ouNPpMl^Gq07Nf3Za0SVaVL_o#pYeK`j?Ci9g`39SR_rq4;$hSI\/nc%;,#2qu"8:9Bs@Go\B]lVfE%*tY]Lm.kFI08>+mr!q?3UI61e46L3lr^h?clHcbaA#=C_o&kDDEV4R$cosYha7+>'Xgj%*enP8SiDRRl[\C*Ol%Qn6$WM&_e]F7D%33/Rg=W@FuBk2b#W9s\@l(7N+G#&W,&%d1@1N'DG\76a5207nMN4@K74sOJ\\pl+#H0a-KeoQt;.iRlcjR(Pp2mK-q_in.ES-uF3%,&Bl!2-jN<\J-uRp*rLJcK*:i>Q9LI!,M=PM*h*!ZY[@2FQ&*7k@#\]V,5b)B=OrT?"H!B],=JrrLSPkF3DX0oV58^&VqdnIGliU%4?Dhkme\.nk-kDg=q4=p0;X1c$2Y*/:0k7,fKO-4Q^#eLp:P]M]6?Bmm%1;$s6Sp8.Fj.9Zr-ak]uhf<ee`V7_Yc8jqW]H9hkMdW%f"LIar8Q',BQ%pZVWQW[B*j1uZLh:Q(fPJ8*Q&u&)0H^+7E-R0K+X]A\jsJ&f\TaI-gUKK"e*.J8pV3/0:kiJGsT0&2N<FE=]6H,%,b")Q[-Yo%kjbC2LhLsXA!bQs,$!DZg$Q78+c[>c3&!I0rF<<dfG\mPm>!6M(,k+U?crgh4G]]]*T=KuG"l:bDQZF.)u\2L8,QMd%gHUIkXWsQl(9*\8hbp&!mrJ^e+n$HBB<>k=Dma92iql)H%PD$a5J;M]O)$Rp>D"PXp*WH5G)qZ>:;%hjSb@4]gII%B>[aAnbE(sZ%,M\j<N/-0LD"^?#e&-UHniA__rm/j8hXTIMfsb>sF,3rXD1D0%?N2,1DmZ^q\<g:G3NMCh;6I5o@4/eb5#DfOeTQ&a5MIqmN.Z)I%n=oQ"1&H7pUjKUOgoDZ$P^qW2=t6&]r3nEDZ[D,JqImrM]K(S%@aW@IXLtDuG^_Q#7ET3o4?A/i%?m(^FDZ)6RbP9hNRlhB'UN#c%BdbY5qU%&Y`4kUTC?s^>j9rAESQ?i,$%A:7>'STlh*5TBp<f[;JhQuaY9]qubPs\lb5YZ*%bLW>`?4nogColLqtK@ChY]KEQhFp%%&AK(`ptFRHrUo"7;1F&o+mmmSIiQ.>;<t0j?s)Z4IXVT!8,Qk8<%i5iD`0^)^%/0r*r9Q!55gV`_DcW^'9h/AP@a37P^ITJ#?_=:%[C)$;%gQs#?N//=klk_lrp44)rKdBVprPrhHA-)qoL!3D9L-iYH<\r(q9dKOW`)o5qrhu0\,+3i6f"uXniLpi0>'[&q1s).qlm&i%d[=%E0](j7&jJ=)=bt?AVnV@9G7R0f^II5IPl@/VA=A^,0N[h?>`&,L:o?)/B?h-$_fN<_".7e,r.p-?_Wut\.Qg>h>-fPUG_oRd%OG\SBc"5<_P"@-eF4N7%nkWbWQkPmm/X<:q]VIN&UmX#:8qNEjl$Jb[5W$I:'S$B@JJ(f'AU#P"AX8W)4<tZa6PPL[:j>VL?Y2-X%9aN6'*'\SG'7j6J0S7Ym(/O&W,b;i"BEV1WUX$95V?#Y3>!4ReNgi&*6bCjIb_)E#!FumoWR7;G.3@Hue;RuiC]Gag&4^f+!J&c-%nY)GI:!"U;)?I1T`+E]d"A#@Ms&a%IZ8N"3O]YqAi.m,2!(pm.!6I';!FuhZ+<gjH5uL5o50\`drQ1#,:CD_DCr>V(&;ibKjreN2%,*Zm>1X0IGP(5IAoS4YbH^#n&)H@1!BA+AVkV&T\5,GrW:5:F.GaL+X2X0_tHJ3,,asBrCGjX!qs#+<N7$=tUMrV/QI]q-tFi'O+%V^004cV3Mf[Zbo&;ic/Yp)jE?bRhD"<Wd(=iZXC;.Y(b*&gM/:'#JJl=s?l*#?,IB>[nneKeX.3"L#M*6W??6(#PVg(6`'?>035R%9ksVgP:D&IdqPTP2,#/55G9*k.";V*k"c!JMJ2UUGoeY9i;%0jAoelo#%@d_:1oI*a^R389Eq.\23pg=NE>M"1gk(%^ke^)kW&DW%^f2ga)2HTg;HZ:u__h>_-%4i]\'80Dn<8r'pnrEOQ1/k+<o@-I<qIqg>.g'$M=tWZda(qP/^8nT:f2^7n-hp^p3_BREL-+8+:$]k%2C0gWq$e&cb9A&\dp^3VNIV$!UUT=r0do_,Bds=A8Zu-EKPEW+)\3O"*`")4QDWY57lsp-/c]AqKHV9'#F>&Vo8gQTb&=#@QF0dB%$)EA(0a4<E$Ha]PML]IW+>ZKdUAX26^uFs&Y>M?)/mMe:^CM?<8Zt"R"KQ?Hl%<T6^,W#KMM^_X-mb^O$2q=G]#CJsRTADsL7\K!%BpH[NRBFVm(mqWSfeFp+eVG75>i$e],7GOS`F"T'N0L?Ca[q9>G$POZe7"g1#sbrYdR;T8KgGg%X<(LH_A%%T"CPd`"d?gQJ/U=S%II^pB)-L;mopIg!#*_##'s%ulj&P1X[j@u76SYh'h\__:=#<=jK$dOArloYfjPFQGMbhNe0*Wgj-21H]VGNId[)=LQB#btj,s+$(%9A/%:ZkC*@Z#%8jLc3D.ZqWo#))dZe\HK,/.W<?RWJ.0Eem$-p2t<lqWWFAoJ00MPRYlWg,+;aZ(m9;V&hs?u!ee+_C!NBFe//B%%2+\"33>kKi&LV(84E:SS=ZgD(0f:._Y#5pp\Ic%*,uB?;6q(ng>uXh+S\WZdko\%3K^:Ek4B7:HI4!67!(N+q#+"s2!F]Z%M[sYD%A-rDh6G\e&T^0IQd-[Z",Ugb68OZgH$.PfNb6^fO:rQbW`nT"?'ff-C+urL%,<8U&$T9Vm.%%]88KfG?h'rOr]W8T&&FFm`8OT4<%:fI`K#`8h$aot5!h%0LRgI`Me!"q([r\-u=k51K+9,XO*U2+e$>WId\.g-$Scl)O>F$UCh8jO$iA!oSU0A2\/"NH%f!1(M67gfhW%-:=@Wm6Y[<KH?J7Pup_PjeBkbRsoIo32YW9$!g^J=qHhHN/7h+$OPf2S&s<)!/N2(W\je^S[c20BA%&ZVIn%<SDc@"MEF.rAAq=E%`^1jNQ9kZHQ)pAeReB!=,:3C@"2P\O=ZDiqETW8;Gk*P7AQ;?AT0h-M<cX:%>'4UOUam+:M&93JM&7)?"!t0j#Ke1sGG(Hu.4:i!%/*01+Z2)H%mcPgZOA\]hFH[)h0j:#ja=s11#pkD"UL7]3e*cm(%pf_*9'.+MjRmaPOE98E$nQ\R0@Ip5^li[^@)9@G?L'IrcF?1P%j4Z!?&kpYBJZkmAYqI:A0=e/Bm_:+f[`$[1KCL*_6<Jn$p3"FtBtuEU`TsM)21;7mmO^cAIl.R<3Qk<h["Q;HYcFRA)8)=<W)Jjp%MRBgE.AS?,MN=f'3N#g('h![q>/NX)Ni4c\3N5n:QR)'MBu]4n&n8rO8ti3AngQp5LW3.>BHJjg1=V_4psMK`'6u);pIK9lR=JJ@%!#,oq!b;Y"bX#D2Bk"uX1gfG#OZ5YB![,a&6>6hF<tgBRa:Pc`L^#R2.AF1GT1U&]:I_QT8.JZ#5U'Wu^^#DR\W#;OHqCPAWW9rC%9Rr3iad_Mp1._YV`*X.b\Hk_c<t[]Hojbj?Oubgi6j+'Xdf:$M/:7;/-:#6Q1d#3P"_8N:1<DY7"3qs@<qmBk!K7Us^>MeD.8m',%-kihM#Xl[Z5c./e:K7MFShtuS;`b+#F(!!L5p1WANq\J()=<d-Eh)e!WaME+G%Qa:_@3g@k5j![HlHW.8gXiOO=``)#,Xa>^eu$"%A4239()HFs5QG0#)H`ob"/op[@a#t'PbZ3C+^+plmS\jt_"VPp'd$M.JnR?i(eMXs]E0;Gb[sS]^\!#f5IUHV*LW&pp4oqa.jPm7%?1&S5q&(kK^5`-AiWl6NEC=MG-6E)l9O)%pW,+'ddp)m9MDYE7$*]RJ\oSGLIP4I<:^o[f6T`CU6_I$Q<=BLC!,4tes/AgT0I,fc%#Vc`T"N$oTP2m/VWJ:unj=i6F$j#=_?YKl5&j%77#s#)kRg^LJPA92T$)ftB<3P=_L?XdBK_5=:rHCZHf%BI4XdFYT-AUQ'9`*Cd%.f]S+AXak0OG;)C,KVY"K]GTHj%U^/+(6m[W<9%56A4f\LH$-aq"I0(JT"KO8'h4k,ruDpdAnfp*qUpLS/,G#&pX\Cbs=*V>lLQo%EhLS0RA(]>;?<#k+r%@c!)VeEa@?O'd_),"5*\.LRIX:=J*J"fr>I('"(d=tq59&SVE!fKm?/_"A_Mcme,r6L!5DQTi;t]SM=Kt"%DqKE=/"hK,940#Wdf_AR%#[Pm"=1l]nGGgj?o4`(U4otrfP/hL%7\@R:E(0ECtU4-$njZ/s5?d')`36rM%UN],R;?TDo0s?6E@m=%nI=7%[#GOLh*_s:`,c]VQ)*&'Z43Vc^]9@Qd_JZgCtHb"%;];0o`fuo,W4k-V+L<<$`J%oefa7t`*n;>C_X#3&pR)@2i.#/Ol)fK%)APf,Sf--KN@Ltp[5BAJ7Rc"+:`Io%PC!6&].AF\YG1;BP4@K^EW@rD+gD.(Ym$5Mc9SXM2.4QPC(R:=S-Na@=:@e.q%8FE"CKi$%*&n2?_aLq#oj^DYPKF.cKI=&^<PXJ0Y;IolQXj4fEdZq,T-VcN:0qZqYi^`\,_rT5!_5G3Kjtl^TE[*815)CCi8p?;j;]7I!tm)K%5K50;-X`\Hd:#$H+Z%5nXWhh6T"cPiJp^^aGqt'31<>'"$BX>$8GOqk!b1al:BEq1ZuRuno<^+^Punq_e0`UE&*G4a:rXS%Agig!%*[1Z>WDJ'V0MHep#*aon`Bscua&<;;V5\^fdFOVAb<N-Pb7?=f^Rt'M.NDZ9$+2)?heYs&Ut;&9!hsO>YCd/JF`F9m@bG*2+3p%G%`+PIIQW>:3@ZK0sPd?gC@=k7L!lALq1Sb?tmrRk432e+1AMamo8W$=%&1!RA["0*NV)%_fgHLm*Nd&$WOWY#,k_YO,FXD(L[A^6q%Znki[N11YTS#U!.@H2e8U:C"9)@boS<[SEaNoP6s1cF=$$"XQo:7hA7kE42B/iNUA,]ZN-TDIUC^Q"@Pb]p7(),1u7dZN^Z-d(O#%Y6#-d_Zc3^Zj3CsM\QRM7'^Z<K2mR=H(7u1<O$0R/up.G\kGd<.lgFi_e-#.3L-R1d"'7C2%Hd/FeqUFV0-pRJ_=FGZR#E1c"'Q2%;O<OWql2na<KJKgaW.c)/B4?U+CefYbp$PuC<@-/I2#C$;J,%!7*;Ud^>e0nPD^#F:oVY_?t@'4O\MSV"Q.s5fd_8IJ0$H+7DeqY%YfC(G2DsbThW_%<(ZNI6N4@Y&pjD&Y\D6(1?8VdonnOD*lsM>l!HD0@CNSoZNT^q3ao#Rf1j;6'Ni=OTl;HoY8V#j3[*"XDET0%J%QCrip8mk&0,qu'MI#*Apb,LV9([Y9qG3-0phaVsbNt?k7Wf)BReW!MVg3?d&/'@eB4=@ZVk)huff,7Xu=OtGKCD[CZko-`=claB,%feo%W&SYcuIlZLpQZ<6`VRQn6dZI#%JJ0m`1-QhE)M+0)as>"5L_N/k"juBgWNENsETg<R)TCY88S=cL2CNLA/'*]93Q4G&P2[Zn%:(P_`3RpMr.4MFTY*._;>qNcB[_<TOJ<]\,_Fehf,G\[X>Q(R@#+t&:?muV)*_`f=)_H"moL>Qs'HA.ZnZU^)Lod&f'H<%JAkO(g%!hpieCMGXF=$0#KM&1B_Ci<(Q9PFo4NuQ\tCm7)i=\dIijJ%Aj%Rm5'FJ9eTpUKoiDCtY.a.uTQ\gOArU%#Z9JB]>OJ)(5X5*")W%.L@7\<Kh0NAk4P:I.EW%&Xgj&;'b]"k8;IA%_au@K1HE+'FcE"+s.I;<^PC^W'_21-G<0s4(nc:hf$PSJS_L-V[o&f(!sA2*1ULS%YP$ZVNI(*TPf\jfJendF^rfA69dB*9ERh?FADG9epudqA,@J'Pq"nZ:fthiWJMT_/,]&I$Y*h\n2G+P0[gnm=nlUJ:P):09bToBP%LeIor>]NB<8[MR?39QAX&>TL=d]B"I,a^0IPp8LZCK1OuG<&e_s(`Xq=O\3_2L?4ch`Hj%5T]g%HCcH>MZ]gGio)5)Y!]kKnLf=A%6I1Qj396CCTSOD:<%'rKM^Rq3Z,"qA$IQ2e[[1KPremKc7,AeVii5(k!uO!od7uOc:(tnlHMg2N;9P0P;KE=Q8g;Z&1*"u3*2cOE%lNn4rJd+>L4HH0F[?]dX;@/.i9KEj*j?Aa#;LaK^lPpP:M;JN-H=B/#^*QYe#>Lg$+;7=>=gmVU?:dk*^@`?;8k_tu6.L9%qj`#`%S>%QM]ok_3Yl!Ed%0Ek&<dPkeHk<$Q6->F_+qUg@I3PWpNb.#/fZ1^!MgWbf;D%9jE]'XrKV)fbWT0UlY?'U3WNPndS>C1&(\^Nq%,hQRdHQE-VH\I*6A@;)sX;UbIk+#C.UlKrmHUVOpD5p_?"H$rl)=i;m?.QdP*]#Riq)2KS9,q8q.Sc*K0A5WO4!"?K^c)[`2JoH-%7Cp6qf$o"7lBeI/[,LTW)`5cE>>llQD-;GO068f?Q?4.OL_O?0WZA>-d0=6X"`Q$tip)0A<04<Bo1!-`q(GVh^;,A?P)n0l*7SC_%A."3Iocu/=aHUOri7!?h[plV:R&pt>@UWga5[&c)A/.[\K[rugr`5]2buj\`M>/CbeU!lc*;8?dpe9j9a#C:Ur!?nI=Cc*@!G%:h%%2K9UPm#P-/)3GkXWKP')3jBu*Q!Vi-c"-6*99>LQ@2d6N?9>:N\)AWqp(GcLi;rZjWd4AQWd![)j:Om75O9"Qc@+n*P&WX;p-ql%Z;N&0N+-erARu]8dsQWH5_P`2SkD%g"HX%uA.U-('^/h;g;aRALKG=FZF]uM2q>pVIr)*"Ir2/p,=arJYLUFbI0!oZ\9\Hl/ZFFT%!dZ@h$WjZUNR*oi_T'.qLYk>>LB]!0mYc`.kNUnS>V't8-f-\PL-CM'lk^q+Zpkl9&037b$%o/[hVnZG9L<6;Z?lgVQp_--hhQB&%)Os5]FF^;Ngi-Srp*'e<=Mj>AE3)i"e6(IX$,&7#WhA#NfJGd=DEm."1^H:h9]4WqX^][g\-eYT:b+Z3buu<"8ObtG6!h>%pW2[f%0ZS43[:?>%+i]\/A%:o_--B1^!p6,Y2>-d'r"aJP<#TiQ_'B8=$oB7;2Tu$:aM?db4;HdVT>,3NA&B<\Ql)"tq\'QZ)g@ui$,:#Z%YNoM'c#,V6<&Up,NQ-);_-bXXW0W,+AW;D`R;I=ZQ6R\fA*I)a\',:,'$"l&YWdM:*WHpQ9T>9RYjjJc>#kBU!'$_rP(]F6<"1h<%jY*+ifPh'/-J".07[e6t_Cm,%XQ"cg@$JkIjRgfH3Q3RCPY<7t+jlhBT7Xb>L?(:]nBJbj;:Z/B%)#mq".TNKNd>;*4%d)!GdA8i%IdRX]PUf%58E$Kf,!S`QJ4X#.K[8@>*#/!fj:Yond[uM<=L9',oT&K>d:c\apiGu`kk"2VlLFZ>fq.5tN'@d7Tj._*irj\)]q;Ch%1+RTIMJnB,aGI1Miudq;CfUW^oi\iJk7+2QAoEkIPYLcm&qaCaWMi>C"*ABH/A=-]hUM!)T/\]^fFK<^j'sLMH3?%)dqFKe,3+0<%Antg91M8!Z>,KE7KC1_gPqXuSYnt3`(oWt>"Lf.rh?YYshi>Mg)="ro;;#^pX:,8"$Y=c:]f#tNcb6&.@$B7P16<bk0]PTR.rGN0%/I(4#^=+Df/,eXj_")Ogjt[.TCHRif?3jVe.Y1I#jl_W=b#%/]_(2UGKYVWAB`sAU/\Z+S`T'o.bF1C)<Bno0CjB0H_^[d'',3=D%Ns.?U4(E^0R`f$*%C57qd/d9)<&:oF@'-D05?J*tUisHg6fTe\ib%joBXHWNIb4.0?>T*g>DYRf/6"X)-VV+Y[SI(21.@1;/;R^n%6fX.En!0"Ooc%aJ$&s/**3C(sUU6_%5G"H>X-@`<"/?n[RV][l&f@frXNtpZI_qPW6t9'$dms5W]dSE]=ZG2h0pA:#?B"XD,t6L*%Zkk$qK(WT[An[.1L443cA3"[6fo-1TmjI(]9?9hZ7Vco*pECRI'5UUh;##sgda+:G'.f^s3VaJi23cX.Rn:ujj?FFT`R2:m"mRZ`%]I9QWp8jBW_VRh;(.b#fae3:Y,:-hE0b`%/2):pH8mFo>.p`MuAh/GBGK2S('`$c;ZSX0g==ggZ1lFB.1d`DOX3U@IR&/s!M^_d9%8ZDnp&4mP&$u(=jEY??L%'H0@J1U'hf->k-caXr_.Yo/@^)RdE$qN#dOph_'d6kt[JX?Me$V.]dALa/e/u6Q2Pb,ZB6-_'tWjmQ?%pstp$SJ)P@)=:f^Iu@9<da(X@`($<WnnFQ._=qLo"G/j#Ob?Fgq@Y)Ypfpalef/K;.9a"'fN(QPV3."sRn?98OEY7:PR&2*XjjPF%VCQZVONcMdP&CcC/:iuJR!agj1ZD=<\qgPZQ4RN`Qu=]>SFd/aN#,-K\6b)^:ZYJ#Y"Oosc$/en/;m'59[cg,+OrH4!JSm]>d8i/%30X7hXpl$Xq8s&u^bV+Dk*hrdJV-7LM'.QfeRlspTnVEJ09\c.K9ERCC$OeD98WP`\tk'#5i3;5;`#s0$R7!/b!uR_dfd-4\]-Gm%[mBO%#!-#(J@J.\p]MAOpO:8bf?lWVVar>!2e:J)(+PLpI&'>.OM%>uL4ROf20_a%;V2$b1+\h(Jfa$I)OM5j+!Y_gPCk3:?CP[P%V@#$WI''BoWYkS*R4o4q'bbKCY-jnbY,/*'=K\<*jQ?BUECr?\C(MA#5:\^ZR]"TL4DR1-4AA8t9%o2:AR'hjrO`8?RVLc\[@cW^%V5?gS-ZYZ/R,gUmSJph%?tME!<`t.@''3X6<JU..;'ZT,:(q;AK:-I^,mIffM+7](ciqgd;Frj!i"?>"W5k>&ar@BAOI=?:b:)g0%Js::$!ogL%Wd'f"d2H[_A/Yn\J9k/5g^7.?s1G[mFnWrXQ<$P_K3=>6*&=nDU4bbjJdMHa*lLZZ?#]/Ik@O40;)p)BF5eFk)KS24%ZiK[)Ghh4(=[WTI"]\3Hibk_3H&;(CmYOKU!6r.lZ\aBFK8;fi9;4lYT6HWp8F)L*/s1q33b<42L+<apb#&h:4:G3ko%=<`>uf=\%au'HhKf:?:G<H3(I.:QUliMuj9>sD%7;o+.X\d;)*`\E'C+N+AMV2]tHLY=LKf)8k8Fr(]*%+U%3Td&59+7/n.sI^i6b-Raqs&+g%&sN,V('uY99P2DRi(Kgt0rtmbVT>3cds"_4rMn9R0#rZ%E6ZG?&I_^QiH,0n\MC\<@W=:/$<$L@Fi*j36b#^6qo5;S'rp.o??:uR%frtf.&COMu>E:(,@eH\`;0E/Hir"gW:t4GKM^_V"$^64EZk*N=$3]paXJjL'L\/(n\P5r`.Yi#?;A",+qK]'\:H>'p73GFp\==C6%X])B^:eX(TQ-5,;!?G$U!GBfQ-#1W6'g#79^YGaWmIXq`N?oId3P^J^Wj!gi)2i27&c@mUl+s/g?,CWYbS)TjVVt)fj`Froe`T2N%_6%6FUK&^C60gn$#$,5]%,W#lcDHO*gbm#]D<ag!$&o9lLu?:GLenGO[k)AHl:g3kM5gtVKS@PNC^1c?9=X2+er#cDMTeOj==jc'%>*8=98t]enK"3`,%2Ba$QT1!peSGe!)pJjBPu*c9CPY51[?SIWPGks@\7j5%^X;,"I41FYm+1s7#'-tD>PP7fRRlIe>9!trW,A`#%X?n5P?1d-h.dgE5e7BC^>q)Zp(-i^<)..u)b8]suY"tps$DJ6F*^)F5a=h0VR;=.M&XP0b^8/r^JRa:e$FnA3CbRWJfn&*4VJNr=%GUZTOht>1&1P)PSdY'oS/Q(A3)AV&)0KI&_;R5P],pZ$s'"1+Z!S$_E1%9UL!m"AgD-HW[I9fa%6YJ]apA2SLEVP&s-c*Z'Eg:(t%f3j,OfS:YZ3ueAHPmhOpH!%mOZmcf>Fh"Wop'p\1+QRcHQF)TYs!c9sE.N6YGRa0Y2XG038/D@X7<)-:-%*G$ac,l?,uL22'e4Jo%q1Kq6P)ij_jJ)E]QjVp6@p9*J7K"toUlMGG,m0MAJo=2q#I]K<_0uqD>00&+ebOAn0nM\D%A*^d*b5p)W[JJ>A=a;fSU-/-*$PWj%*@Qo^1kC,[b'Sn0r<W=oL%^f)K\n'8:LsBF?%ATBEc3F2'c^?R's1c7TVAHBV&\R\N/RcV!P.X+AaQ&_"r"mpE]oI%N"4$nA3Vju%*J!qHVdfK2;T8RImR'Q]l+aV)lmdO+N1gS<IotXdnhS)_=gS9[)Re:qI&a9sGWW#\W*LsRf_0@E"`]J7OV_Va.$Z7-BT7rR*"8Q,%0K[Zu%uL5a_nir5PC?@Q/b)q%OMs9E]`?"46UJB1d5J33)!r4+g3B8k]OZQq<:(@fa1CoBlNVX__-A=L@7'rg%63hp:X6SE!ZNCF%WJf5]!E")e_l$mSRFaJlqP_UtE56a:.V631lNFFf3SuP"S)CF^@Fr>=[D>%*dYG0KJHHD\ACf3hA8gK)UTjp3V(U0p"X2,0./>RB%CY:H#J0U4DHhMMKck+eH;-]Ot3]<d*aNPr8Z.>sJ+2.51(BOL4KOD\;2[L'P5QK/VU&uotF&A)p8E&qmL%nG^WW<t-n9q6ie-bgu%2Brr^KS`)W@V1#'-,'<+H,+M1(p4tah[lX2;9K3d^Bnt<p@fsHp*UeEG`W4m`rdR=^n2Na&H_A0hEDF3Hjt'*)JVB*J.d@_#;8mm%:b]#1!segG'Yd/VOcP1!'-e?WjElX%5Q&cfPX!^tk!<pc!B=K5P`0P@2&cQpNZ"<S#5tH.h_oF>Nt8anT:P]*QR0)M]B4YU+QS94%]+-GL_75):;[(<?)LKi\-^aMf.;R"XlVaAdJZEnurfmIpAH_)k%RII6W0Y\_=.6C37:h4lUVlUp+<cX-34@tR7BFXZm0Hhq8UoLG%F'T9o`==;lZ8Ym<P+PK#7MVjNkC%A=R(2o&"HnuHlj04<\K#.-]la:S:@Y<5!h]bi"nRH;#-Z37L089?BQc,/=@EW,X,VGKE>"77%iXU[lK=(4eL:*Kt=hH[&gZ;cV>E3o*+K"Ps6gTKp8/4BpA5"u_'d.!gn.:ZNF%)8L%nKAj_J/!e-g.2$/F]`QUd?1K8.^EJXXo%G%^K_?EVP1<DGZ;Nf@L>8q4K`,s*0?rS2_rd[bs>)\p4REHrX]Yka6]FBc`\C#2OZu9M>"!#Kb[$>Kk3d7jll5f;Zj2u>5Ogp?/V$4%V>-I?@L!fp$Cc;324q`;a)Q,j(]W2m'RD-aOmnd]pq?nD+TtjN2>O$lq"8pZ<?`s14'-^SQ!>a$YUhuG^u;-\1f0c]A5H1&TNWD+%,mfmrU1:ML;E6WcR[&X\7$[[H5SRS&rXI!-b-;g.a"h.G3"LLKEhn%nI%$:nI]3!Rb>TdDR%+h0BV4r@"F1m([iFTCeUo[$O)XC,%0c:+?p#IZ?bn>G]a,tVq!t=?7E):f2EL;J>%TJ%\I2J2FP9TW>cN>%m+V7JoQZb6k-B6@"**ag(8,jloRage,KI&gY[B1:4&qrFu%0n'(\=&qHqj/8[aLF`tSpaIY]7OMY*UiI_]1lJ::Dn<_0Ni7jM[EM%sfg(6$N^9[L0s,3'53FCPNHA4ccaFB1@^?%nF\p.\j7n5R%CCii+-X1Bq7XI#<>")c6"Yr1=O"pZXN1"@S>8>/b#`7J4_QSNYS=jm&7qQ^hM&OP,4E(\2G/hc1KL9UrHr2k*f9Nc(>UZXmAam3>%7)G)j2Bmf!RdYMPg)(grE.,ik.q)K>(KES!#"Y"0o4ATV(q`p].\qbjO]GJmP#t^/U_4=j/2G(d9[G2J_Ildmn48N6#f#=\<T423%;<H[jYcmV=U;Wq2Mt,p)M/m5U?r[`."[<b6_=/X>P#Za-UQ.dU5b6lAY,odN#*M\\3#6NT4Bu?\#g,_?@p"YQ&K*C+`"!\!0l-lI%)7F?^dKT&c,K2@2+7u29)T1R7PKbQcbN/n$KjbGM+\@Z%8V&25<#?D0AW-%V,o\*5s&BmOY>pZ+)fmCYA1#Dqbn(FklTJ_0!/h^1%[AJ(E@9>Y%!Uc$2JN0:roV1U0d7.8I=?LFDe&pBQce0ec!qko[Q&(*;b6]d5_K#RJCCEiA-WdCdYSQ?fe!OQb8;1K1AeE/#iQ`n]%$\oYf.h$4_j98kfN9HLbCl,Xc,'l`?CKG"J'N8tV_Q\948&aguCt(FCrCC7q8K>T]$.B+ARLrDl!Y%A2/N?'m9D1;QAXZ393g4g4%\"PcWksYtZYF!f7;Lhca9DhJK2Gn]*Y>oT-;&Mq<XLkcQGUWku_Fk1i\`$VGMsulp7Op<2)+bGZ(!Uei[g&peQgi!t.V'N*&hkOq%qILoYN[\it=2ITjYSpgL]0Oc/i?]ZYIVLMC09P"bHn7)]0BKuAGY.I;W&0Mf_67Dj;hgJ)cn_mR/+KGU=G\[S^E+;tN%_#P+e@_"%&P=629g,81_(*hY5"FUSXs1N3;\R,aHUW0NU<pP39T&=;%]b8L32[-'=b`8RW2Ub,Op"ObZ<DK%!3>')*$ud0;MLOBB5A*DOX*?)%6Y'[H=:$Y>fgWU_(kn=O$!,k#B7c]cq>A4Y0eu"A!W]/Ic#<%8,QdLY4+:rN&=#bt1?1\teYJed9SegUQTRie!H"1Ei/nu6FGW;R%FQu;3!@4Y9@/$GQ&?NlE9[TeX[5/n8^_L4sRnaBj1=#g)Gd'cZ+GZj]Qu&Nn*GuRh-6C#Q&sH)/'.H5pKHjm=Yd1`Iq;nOeRRl(%%Y>G[L_SB'@Es'_.2C=InKjUpJ/P^:,0&LG9AJtTc=s3s&V\)4dMLF##+MfG'i\DbqZN9=];cj6X+FX"jQcgOU92N94,nTDGR8e?a%Wo@t>aq54I<F,au2;JgCPPe*7?f:I05615._(JMgj\(b"`02P5hsnmC-D!U.MRKPc(5jY(b?&![l-\Na;cH#l6KCsj?,_&rGRM`N%J9(";mo"rKKj8V6,i21YcHf'bs->\QA14'u"H-%M6T*k*=TS%K`A7;>1P4_WAs1&tGS.Xm8^=20nYa0)fTBVGae$"[7Iqon`I+F6%q0`fU)5$tpdhl;'mu5D<S7+m'T(&:01+JOY8Yg0ui.<3\E0b/4"Z`<JN8#Tqrdn[e0G@A)%;2L'1inMmfcRt,PJKV,$<`.='XP-=%A!%luPEY?++Kh/:`E2'g199AH]e`'+1hV#9aUaEi6@cng%lYII)[;SVG^%r"W6^)%(ldrkR6V[$)*c&t0"JV-e8s:hRON\@1`G*l%=b@g[_^)AG.q/rTs6q>VnV&#@0!l54(Im5(dfL#.4[u.QR)15D)%Q9d\@\`nH6jakr]Z!2)2WE&$gZ?:<2G:@f+:NLBmEX^7]uBO%"4n_>5CB*o/][GR7UYlaFpo^Ybo'8ALka''nPJ]gN"a`:Rpb?u+ib8X1i0\FP=bcs4DhS1#2u*aPgF0%7;[c\[#K"G/k_+e+'oWQ%f7T/"P<i<\K\mU:(V<S^4DbdUbTWm>@$Vm[\+DOu?^N!2GUO7Jo-93!O](4eQ5Wj8[.,QS^-L/Q(3IFB6Q')]FtKW&VZ'N7:Eiq(%mDMd<dhmo$n@(@rFoF:%#5]DfV8_Ip2VaU]5-#$cUtW]t<P]8I'>Bd03h&NMe#s8m]*J;:f$88ZCTi54dZXGr'^"obO+2=rVG^)!%/e\,,(,8T!fSqs?QP_6$7se$&pY\[(=c9jsA]mj;_OYisG3T4f7i'X(5qAMOU^%\g>)beSDKgiQ6#6<cHfO(O8*aNRZsUIZIp%*r%lHMq#YM_6MftXU,<"b'bApgp8K9o0\-doo]#Y6]TLB0q_UfHINKS0_@>GQ/@]!"H@H9L:CMB=BE$&1k3,k3t3:H<C`b;pDE9ZZ]/%/\_Vpo(H<<OHosG%mX;l_Q&>])<L-#81#9?H7&u036?+?WXR*C^1/KdC>*]*Yq3Y6AoPOOU&a@n0#1_\$0J]27Ajr1"cS+W!Rhp=%"IJC'5kpWeS]Iun3Y_Go9T-!^nqbn_!>A_tXR\+$5:*<Oj&oUF.Ke]Zh22!0@6gj*Tgc&;b6RRnl?LQ5S^1rNd1:X6JYD\cn[m9N%q,\p\ZOUV4J>FT80t-U,#HMBP%mac)<VCdAOU=?c9lt@DIrt1pJIWSYI,Zk^/Cj7t^#cV%M`\EdcPENY_6UNU'#NQ0N%mU3;k2R=%K*':;+!Og_JL<?(98T,oYjs=M9Nc:,jH80'Zt7Fu4c;jLi\,st>ald%Vh@,VJf3MYggn(0?l`eQ=U0Upj=^:e``t*aIdp2oHTT*t%'Ne+mKAl!GJgQuuJ7Znt(%k!,64<\60N9BCR;Ff)m;1mD4:IHt--_DW'3p,2D^il2Y0^gDdu%??^bNkCpup;:E*F]`RH&:"kq@-+%R]oFq7`l_U+Z]NiP%9m<3=h?CX+!XqL_qX,e)_/'`dos\je!EqF.j1_@_'K5d$4C)(XK>f/u[O<,@Toh-:/,=Ru4V1V`"9>=CH&M%&:qo;eu$Ec\M1:n8X;Mkh]as:/W)]1/o>EA_QoDr!ukC4-q^DMeX)bp6pNMM=j>gA45`lgf\T":`[oc.\\3idjS2><`SNH1=nUG(%eA9:`mEGio9dEkMQt3=PLI4O:L:;A)U0-ESA;ju/3lc#.WEFt#Q;XEPWXO19(*s;J.@.&$IcXU]AsMG7TCBt(E4B7,R_G@f&`h4m%g.apa$0JVu*W=d'SI:Jds$PbJLaNK3MuMNjlpRNVjm$CiD"W`o;m85dk=>Gp[2Q;=S)M=d?en&b$R'A;Fii-+dhLTRZ#J.b6m.Y4%KfbS<&W">eRIm'^-b^2KUXkehSl%I3g[`C0cGeE$85OqC?tc?F?sb[Zm!4n9&?>YFJkJH[.o>Q8OopN_5/oA0qU5rbF#YbB2^ELb%m0%JYWsaiA\)<Bg2Lu\n(P1ZF&72"3"Z2q>*0H5lFSnhN/BElZ:GLp%UiK.>6fV@"I`!hd'$J)ZjT5df$j3:uSA5FKcpk$gIBm#0%0N&-\D+,`V>b[RiY;<+--s,uRYrAJ\+LloAgs1VoFV96G^TY/0L0&d&h)l6!>FMP`0pC$P!Hf9SeAsnsOMZlJ8[3[FeKr\5I0,B6%#p7nLP+SeVg*]G@FKTMRi8+t#<K?G[KaTu>C7f`^>IRCI+dBF/@\;RD'c@=_I3Q5qA)0<\!kPjUT3rm`q4e7-k6;`7n^t2/-TOaD%5TeP<4<Md6*c!<2YfPl^LfqB4KS%=sn.fJu]0^ph>\Jn_(LVDeU_ZJKWqk].1rYY;\,g,f[Z=mSqfCe@/j-;ui2uYKN/Mp)rDdH%%L<MQZL_Jari?>*BIk=/<NB^[&Css7,>VfW2LQ..4N6GlkdPX!SnoIMbTP9eipbdCpKu'_m?l!n'9oX=Ypjh^Ucd"S8RJ2L[e@a@o%aE7O-#,@#_$DKHRB9r!+6\Hpg$F6a)]e.4l!0Y]Z#D*cB4Y%iX@Od.?NQ@Lt.0VV^BB]#Rh^AU4a"_atR6mEr+peh0(-KgEbU+SR%ba=pO#WtGEiQZGe_uTa+]P`gs#`F9+AVsTKkHGA=Y?4I+4R^7eFUht#$pT\Qs&rs_9&bfa8tJ`Ajn-lYgUZg`^gtRm-F@,>L(kF0%\)F>>3On3YAZA/E'EB)"U9%7uHTCR"ZKI]uMBjb1\5]t+#=r1e]W;*@'/2)3*V*]\)-ctAckr:2nf\0oSiT'XD$1WHY;Puu7f86:%Odqj+>\(hB'`=5KG+LIiD$.W9%%e3/n5T4730NPd;tQt&$&;F:X]SrWg'9!`fHS\1#99FL@\@+5:f]chLn/TQn8]M0/dR\N6>K<%%%-L%>bWB,cfqVqM>i&&_Jqd!ib5C80DH-O(nM#:B0bGh9:Z<9d$03+JW]I=Q@.ALW#g!T0"c2%s'BCSZ*3B==3JgD=eD!/Mr_s8c%kMT_b3ZAY!:*C2R\)/'f6i<d,#'!@1i<8`!I/ep7>l[b^$tGCY30iNu-#=t0a:AXc`u/KHgKAGB&1G@L3J2^p%@,`qlhN#,+T[0\%Crl[o$6k39bF.jnj4RVg:Vs<W=cTmmkNh^APc9VV,eYY'j=fVbY;+&:4Hoh37*=U%@>tX-kl=:=g_ZnK0DWI%J>m&e%B9QaGQ90F%L`ic+fZ)HHNXVX]41NjkBt1MsJ5TplSV>3/&9?M<&+[n3>#CT>ancB?!92O.5_>EIa5'kunMNgeaG0>N9uE09!(pA2!!uDD&IA6l%%O=<&hn&n;oiG)m<0AJ@0EKk@,`puo,(sqqMQdM0r&C?'aCXB'I'S1_3&q^-ah+9DF:HDM.!H4!'dZ((aGQJp^R<.Qnm,u03]r$S%o`_#<n/QD&PJ\7D,Tn`$5:(0am1b/<Ql,-C"sJI.!DQZBD"APjd.uT?Wq^NjH\#6::hC^j`sIWT$i>Jl;72[Gb&@N"O4mk$#QstY%E\k]-;KPAQiWP.p_^'bscV$ce8b++:!h!([E<F;XB#^ae=fr.Nk.Tm[2R[6pZ-V0&"OtLKAIoXc&fg4iI@VKabFoq/=(k>'eG6,0%LoXWi7GNFV<?X`QniiaB+>Y2]"<D#>L1Dn#JJ,MT!*N,$JKu;/@gF72H&1G72am*[F,pOU$:6#\GPE@9#i-r#1<A?)"%Xh8kI%ge%`-71E#BMI\71iYa0g$Zg<u[gV=3":MLs/r@8_fJucD)Sm((#Hj=k9H<]1>:8;BUHo+=3C@dT<OO;#=)$J*]gJ]8YWW!sjt`&Vp^Z%NCAP&=IE1YcFDhX(h,7^O<Wm8Jfl_(qR9^oLt<+Y%t_:2g+76frsD>b^a+KPm$/V;5i@so#I"J7aOp1*/V'5o8[&X(g,#fsFXJIt%aDmIl's]I^+eiHt!6Cs2*A8)<a8D,F<<uQWa(lu*BIU)^$]]Vmk,3Dc;Ok!7jG:`?c'C;G]-5c+&&]fB3uoI*F3t$LrpcR5@bd+[%Q;S5;cCdnjEXF7Jn2<.*&\smCM2sp!*0I(0ZkGb["E=DMLnnTgAr?Lp:ONlL/<`#5M)c\-i<8X6_0a2P@AIQBIls?t(]mVX*a\$f%KTI=)lmLL+5"\(8#I5Qd68naL\3RO%\3L<$ON.K_319l&K2fo=oaqdlB;SLUN3hJ1X%a'l67mgL9F-`5<X+A=OYA+22\A65J4Qk6%P);Za-dTa-\eR,'H.\#C+_'>-7)t_AJ5kVb%^/n(QcO=p(<%o'C$$QfAr2mAOtoI8ImfTW5_JXTCt-8A(eJt:`G#k2XPZo.TbCV+%7eml)#aKT<7"E-)!+gO.;]pi1f30`h<I87s4H0XToZrqV!(o5D(6$-AkQrLaU@\WK.Z%6#>_0i*G[Np7IKP[&MAE)I1:#[]_KHKS%`6nrb;c%e_l@qRP-\UCrV?5@!]WUEV$h5_Q$HRfmKWZTc?hF+lbAX[?;#:/Il,!E%iH^r##a%n,nZ1^b+E#.o9r6Vp90=D,.)QMV%g,#h'4o;Oa6bnq-MZM>/[0]7NR0=/D+,98&T&b2R/7D(+C70bd3St$13=`$9F]K3Y`_PJBRp]Ae+H--/('9nr,m6bC^WC`$>OhCn%I``LYJ$>e7WH!`Z&5?mWC=Vm[UZ.aM!+ph(fE>9X9f\#k3p%9q[?j%tEV_C3k$!7&L*s^KE(4CB*-)*kXIl'&Ob`'4#VO*7+;Y7$%"ZB[OY/__;J<LKko4H.#/\'XD"/PVIJ\on*SUbkfa9n5B/FbSEOnn?k!o]T$PTenGZ7n^N]n<5AioaQ6#U%B843gi:rhWM_D2@s+%BasH\BaR-.LXM%+NWcZMaBcqI/HFe^e<fqu7\qF91+8>p,(e>QN&'MC#_YtsH#4BB@?]8-mJ;53ra<t.oZ)kYJGA[MT.]_F7t<UE%Oo3!liccjR)<9s+J9lTbSn8][+0kFb90ND":A[Hl`0^-_e1/^J(=*Gn](*[X$pqbS-O&_<dNmH[30r%mGWfC_quk9BD#gDm+doNk%#RFD65;(;4h\cG.J7JK5L]@\rY0UY"6N9r/*QG7B%GN!]%_Nr2/C!pWeK5il'hM(0973bb%mtW86SjsD#]p2+"!F-A9sip&Y5nEg%*<7![d)ZbS3rbFD@EKs\WD(3k[+kRY<#T0k$+bmlN?F\\H#b*643!siP)-mo(=,W+q3)pC'*e?=;ahh.=>L2B"=2"ll;-qs<WH_q%4q73tDo7\PlQRL&PL>,VQiSTLN<R[D)1Zt/RG)Z%22E<3gA<im'jQpDB4Q5g6r?=Sqnt`F>QU^S:CnZO!HBrHZsne-+RP/<>cJL>%r#l0qb9W/U_NS6hN.YWgT+DUUi(>5r'0r%:a?V#o+<p7U0QZ1]bOKs?3?4!9*%ud:Pk>0:.4t?P)l8/WE!aGiN[8e/p.f&V&JB1D%=$"&&(]p9QA'^.:5p2[Nou^O=Tg/WD=g0)h[-fZ/O<GR7:o26_!6G"-0NZYqD*r'79LSY2A"r%+bL?_bc1,7u8;Qq.$*n/6P9Ph$%49_QWeANFq8be^iSTRKZ6tm2O9TfNIaW3LX1^tS.Xig5i*=E(=34L^NO;0Mf65"i$*)-bb!XN]a&p!f\dVfMDW!(3bG1-G2g_l]d%A_.!,Q;=^#lV^3YJDqJ13oso"//?!a,MK!%_``$$(lP31)+VDGVM?UF<&io3]cA_r:I=/Z<:<YY4GCPUM1\d"3.ufA0!Y#qWgEC_%KbGH-.UQ&ZY`ie,W7c(%$(lGE#9Yd\1(R!&6ksI/!MX*A&OnpQX=/`0HOCr@ZIiFF8#!:?R.X^K';+7eK)(s2>a]Qr-LHAf0oHB>%_D&pt",1\4'"4GQX9?Xg"WRj8#ttiF4-9#E#0l>OJW3UHf>;?D0@io.`\,XUNYs.XYRHU;iPH_4]u,Nd$/%:\Htafb7k(a\!O7qd%\oN;B8XXWS/82b_l8VjqV&5]A36-caSG?`.Ldoc!pdBqQ6lBj^#L!0/Xb'?J:c0+Ff@7iqfFAB6Qgf_Zl!<g*Nm0W(\f3n25D+>e%ZF?,'K1HiTXjWEPVb$DgG(BsjE''O2$1a#.KEikJP#_"9Q/oRB!*\@[GR]K=/E,;&]3qj`4dKJ[lJRO=kI1Xq";;YXG$GJfM":P[%6(CkuOFQ[d+U=R59b-g;KbtC&+O>R-i$27YB4Lue$,tkJPFk_Ta>uKt"]-O>jSYMZ#n@/"O'j6sBZm'50<9,8_Y`1I+Hmd1fjkAG%Z1nj#&,kG+/#'FBDC8AIK/Fdbe1es.b_]_b8pm35.d*Yp<[/(Vdi'@RR1:4O6.?R@beO-D<\tmaj&>&<GrS3F,m0=-5#fM^kSU*N%[YYT"dMs\9OPDAS:@h[dgb/3,*(!hb]fWb'Q9><!MC$#i5D:6)nn=Drgs#:eX5m2%g<`/ER./uF=*muc)7a?X<'+G&![&RGd&7Mp%F+EYq%&m+nebT.H/*'Pg#N<Z-(P_Se%[dnu!/N0-#%@Q-nhkqek-;c33Y7t.-^qnI[lb0+H-N$L`%Y*(/[0/<.OHFH0Slo/$biet%rMNsX)(oLFEYf?3@hT=ICbX6:,,ZUf8e!&096%,SgQ%XOEB"Jd!pq<FbsJlA`&DTHdhPD*"2t&o(bS:pZ!<`TJY6u^U!8sj!Ppo9%JGeX7mcLK:L(?qEc>&>8WpItEE@e5P6Z3`QXk7+%7r/3j6.H(5]O-_1f8Pp@W^%&Jf0BUb1FO4E#bU5@5NV&?3N`jm#nZEn(Z`oY%,R,[gL,@eh"r?`*U!HbiWrOCIj=e('oDie71'luE>Q0RInJ-3Oo%Wegmr0UVWsU%L<dIRJpd69>`Np;i-H5'V:oP'NV4Z(%XS26>%5.^1q?e<d<C:oo#&q<<o+N*mj5NW>r$]r^7E3T$k*BplYKNjuG0Sn'?!6X6]1W].PSb*.diDVAr#,$T$jT@4IJKd5ddD$#V/*k&=%SI]r(&us,;Nq23fA0_N6C,g3;qIR.-b-P,2UI)RGoA_rn,8\/jW&Eap8SM3cWbhs+T5R5-NVg,n0,>'u!99b0kC4FLl*VC2IZ@o5%dLD4TNSq2aIKb6=$XnBW3e3]YA)/U='X%BRY0U.oTE*!\;E4E%d21-%)-D>oPh[X7Pjj7)8bn?d^@`]JTe'%F=5i=P=Sr--pMRU3%-.eF='BD79N<$M?UfO!1/ud[4/U6#%W7;#q7F8#sC`p3#:hn[0qi5U=LfgqU^QP\@gf5oBad_!(q6*^:B$B;&1\dK)>,3@Mf5]r>%q`+3ANZR(HY1M\0rhG:gOB(up?jUf;[ENV+#mm-[o+#51+o@o+bAY5gE\!FTqLQ!t+ZctC'-\._+tGJ.P!)*6e>`\P\/`'(#)P.b%cQ)$IC-%COI_-Qm3HUqK;^[7seIW"'ruG^(=-r/s[gbBj\q0J?[_'e&\G=]YK"h2ICs\D'$q-/;Y^r20eZ1bl7[LFL:M:i)"el<e%b.6>f&=5KVjb3nL22*+BMsY]uA^_PaO1T8U4q%ghDn"P>I`'F>N^@Vu\Go[c;`%5qk[ti%a[u.k@Qsm:M`$GkbR%`6>9,D$Xh<dX%La@Tfq'!W_!mT3#be>Kl$Vm-%[1eeYNX^>,&6Y$s%E'BjC=9IR8G)E1R\#(agkL+V-`<f#S7!UT%-&7u6'ZMY>mMtYNJlr`Ru?Eu%MrpLek*q:kce:hZo^3G"AXOYK6i\CM?9qV&-Eg$=<1(t1?5DH]$^<*(K%ltJG+W(],W]5&DbchM^2._I8X+m?K'+$@U0&.`?*A8W%,L+EL<?\1$KUi$P4tC5?7%IV8QXIukAEgsupE<J7T@7>!JC&[>0dQ?5&SLKL:&\N@QtLEp@o5<79i0>1JB,_8^&7F%<&+muf``X,%)M1%W0a<gBa\MjXP*Jk7L"l(&&sB)hr;S/G_-*%\SSHOM.']F>k_L_T\BP5.#V]Knl4+Q0c<Y)\\#B:q7J3;F^+PnL;Q,Obi!NoO%Cgu.]0XX2f-eXmA!:Qo!P`Xn@fQM8QTdL:m'*7YQ'AMF*#75oQOkZ_YKC&HN<&UqEF<k4O+^W,2%dj$`:F<Qn.6tV^OD4pf7]@_d%b*H]%]G8sBD4cHhOd03Xao&>SEg+AW*:/;t8?([:b2tJd]<Vr3"6/8]RF0)/faS])L_%7J!*;XbJLZ;8qn&N[ObO^SW.\)AX5ZXj%9Y<qa9NF8rAfSO)H=;X7,%#F@SlsNGaL*>ui`iFTC!hFY<57mGW'9;BRD)P":mBECeVUKU_%$&j+TXOC"LdH;@f(oOd(e+4>>s)T%QM/%L")P]qf=p'to!hb1%W1]km4(@F`U0Tl];U"><'-Aq@3e&o1C?J`Fq'UlQ*-c]q0CL\:NSQVPCThpDG:(G-<@EU9]=i!El:eJ%']>N-k6)<+)'*0]$mMiABuU^a.rD%^2=sO2#,3]aTTAOG(cLlI$D^ZX\QujSn9i1McJqV_hL3H1DX#V'fI_],j"HU?`ZM/q*#E^p%oNAlFe.!s8rie/U5("'DMOid[qM"WWlQ^S)M6L2`UY@+>;H3%1&D;XO[Y$QA2&L'N=iL?e+Q4N[HTpZhmcdmnQE#S=?+56mT][89%dF4F`DXMT0G%^>Z1ppZ%TVRJpAAn@'FQhoBGPImg4.OLcAdi#6a5DCN<:7TjH3GA$B@9)oO-sUb[018Khp%8D$R.f.SPi2<C>p@)%*MP,tj2$=,0U&G(]C<BSrHt[;_MOOqc0i=j5(D3HN17Fm%?s*2];kQO*NGjqM9Zb15JXb,h@2EekNRHkr"F.<N/9tFi=Y*'L)/uN%cgQ9?2#<hZrU;WY0RnURZdKsm=I*<["tZdhg#)HB.Jk_t,cNp8@DKKnrH01ak]DmG(nDlJ_<d+"5]pt>WpN)Mp('im1b\P>$;Xt:%N`M$Y&?qre>bhg0`'\fem,u95j"H5.b+M?/`A9OSIpqFS._?u0U"\CM(g/.<Nc1TjKs>48(Ho,fX8Q@6.Z+>rH4(h_W)5&);&-4+%lX*cO`o:CmW(kkc0T9+B4GTN;hs,SF"qJ$Lc3?<klkt<b;qA`OmG@2<KK+gP%ZUk=Q9:C&b,F5_MN_YP*Ff(7NNY\R&1lu_e\6)P%M+:o"q>K[hI/JB^-]ohr]R@QS:RTNYE]qLUcuBthZ=+-9Y5"q9WI92.mZJl;5RUD-UV@5I):sVs6KsEt!c!pV)PHDeN,qhqpc0_P%+#YLF7+$7LJ1:7oOo#`-U>57EN(#JQ`.@R2p!0SPa%o8`eR'pI07n#n`(`[)gZD,Mj9oWu.JM[7(%mg*N("Ib)kZ6@>\TB`%hE.a%]o?F#]S&d/&<PF7XklS_P2++.5/90i.3L.PKl*koYWN\VMV1*N?sK8-87IoqK\t(k>:g3PDS+=B.$F=8+\>BVZcT:kPn.P4S85sP%aeQJlrj-&Gnm4LS7NgX4IMm*`F5LFj(hUKWG(mt'0bttB(64.cjiO[7^'bTD7Z\BsPQH)Pa<gi94%$-UdGU,QVo<g==H\K7a)a;m%ohA_pC^Q^b8+h#TEf)VnNA!PGjD6Tsa0A%N`tPfu+Gbh3o0-C0P@j+t]EE9<VIHmrX/c?h<f&ElE(o`V6#\""g..,\=p/p3NXat-%OlnB-X&I*h(B&ik*H5g59,\W5oF>iJbo7YP]6>Z,:SdN`Xk9&jNT:#oo=GW?7pR/OenZ.r)o=OCgU&\=q64-kBrr+[K"@UTIc-<f%P=(#OB.5cg]G##,VB!t0ViF\"==Q;['[b-D0]i!*qOPuBHnZ96i/7Y0A,4MA)P'Cb>A^[FLqrKDSY=(LL0thM02k'>rhnR+YH,@J%SdHKs-k>D"4tu!B(j)5mSS*:k?[3ugkea2n&SP%./kMjr6ih(Ue('S@=25)$fe^9@5M>OJPJDjE,?g9&_`2<E;>ei?e>:4:]_Q("%f]KgPS%T7ARJO`R<8CB(2(Mr:o2ZFNeA'%[*U*Jgp^_2F4OKocC'o&!A'KhJ#335'KJHDc]2Y.dR)"_;YaTEJW'=&"rFq.%g*]eF%9KHd$UmN%Q'':TK'X4g?B"H]YFYRU*p=bnF;EKnKp].i^]p)5)39Y0(.[8mB1&\mh!u"\)K$5,94,S\2]#>(CAC@'@`_M%K7<Hs4%g.(!/n[dB#>U%ib3n+b;d@?;=q2_Dj,[,A6Pk*-YIT_rKf][-BXEQA(k`1pCUH"j9TY@F\Q6P!+V<(7&AHS)XI/qZqW5YW3)2Fji%.A=VIZM7h/mO!uK"9Gh1VE?fN2ITc7H`PZEl'/[VOnpA`#&G!sk_djI-m3K-B8\?5YDj=VoZLhdGTRjk#J(*;hGu[4P)a\>dj6qA%Q^@n;b#4;sV'u5!@DV4#;>Pt%Yp_s7A>d%@#ECDB]2"``M9&"m7`SL*N37#tN\dbuUP[>DLaa2F>*]+5d&B27:h@/Rq>^er[r*:e%?bICl/;?33X,lS!,e6bJkR$Q221DO.0W`RWKjlPT&=*UY5Rp%F7=:[l@rsdZ@S^F_NMD2K/4LS:")!U57*-SX(8K/J>2dV@%T^g`%D^nDbiPd<L`\3frI_aH75prV[q#NsPqT4atYJ([#Q#Nt3K]Ak<Wn20DjfnkBU"St`S5Z\P'i;=7'EAbs41UU3@X9]MTq^mo9M04T%3/'9`*=(tXUJqRq/oea04JL8CWRY&9*@qtEqB]!H[oRe%Lso1i+L$%,JLN%L.lPANQH%WYCtSH6K(7):0$DpU-\gUc<j_]/@/;V;%&^&cB%1UQ^qdC-S3ERUW;%-(WdUk)3"U.?:&MqQr&sa%A'\IU3lEeo47`?R*<;KK,I0.j@RC4Hr+l8V,StT2AGJP.%IL2a3^fuci%*$.,fM?m.!/]lQT>ViJ)4E#mPcC3DmD'g\M@A9i!VQ7[tlE+e+;Z[LUbaS<Da&G?b4imZ-S#'[&>URLAme1GnD)U92E%9<-,11O3%?IT_*Q:`$3?Ng(4+O>hNC2/8)9<pag/n0#[B;hU^YiZ830M[4U!a<Y/VZnili]Id1PCX`7b)XGS=N]-7;`6d?1`Wr[kka?%E@d;@%5s]#,Z;W*obNjOONqbF`Dp;!V+BA4`Lkf(Rp*$le3gN;U]OqlF_6!&q6(BChE)e`IdbqDE.G&s]6=s0.d<RN5e$?q\0qY*/U=/X&%XC:CD[Wg8!&Da],r1pj&_9?sM:2HHZO=Y\5TU?$l#%0[/LJ9Pr'J.<mejkn_]sKb7D.^6%@7CD`I@MB[OUJ%uj"2Lfa2#Nc9L';)%`3>-3%q37;8GO%bVo%]M%:5N8DeD"tlq&ObaEp]poH@RoT4`/#j-2UChp[MngU:!%(%jhtdko]#8W)%X6_k>'Fi+_u=KM8eYO$q&%C;PL'njS9>aYi@Qgr+PDL?*^SR\/b[oDX5cs$;*,(A'n]V)a3ldUJI6gQZ%$k:+(D0`F.1r)Cg@o&s-LkPk=Mhhe(.Bs;8l**]Em%^l+#2QGsdR9f5n2YJ.($MLa]cUk+s`/@`H\kUst3-'QPKhjV=Zpl8#SSB%YV%_#5-:gmq!XI^I.fAH=Z/?@dST1:7t13W[GVje.F%nOI<9rbB4=rEoLF^\bLTs6eq9IfGIWQMBVb3;e:!pYYrCe,TF%rkSQ;?i9mVT76UFs3$eqJ,#r!rVje8Be8TEJ,.9;r8%DKh/@c<%\*Z-Q'E7=4rPti)IWN6KKgs>'-eB/ss.VsSMZ$?22Tb3&7:n%)$/_OG1i7[63p!&&=!,tAckf>Ghnh=+\h/VS8BWg/:^g&"'/,)8%^4"Nt%i[I:l#-sc=r]HgZ(*^)$m-t"C\U5pGELf/k\_,?(u<H)':5:__s)_IlV-lu(2qR5iq^_0o;#e7bA(,@Pf^UIKG(O"_i$%T%9LkhEbm^])-Uf?8/l'5C`L]^iDW6=dK1qJ(kL)%D6M'abl=daJ^Sa:I2S[S\f#j-&4UqXY'D`<6\\Vkgo*!7tn=+95LGH;$p8"2Y%IQ1&5:"F$DQJlF"J!:PSA()=119R0s/DJsu_.ZNJ_(dcPYBcYo5rcl>1I%<+9Kta+?#"MddHX^'BqC2.R#cb2e<IGNI&T/Ah7,Y&%Y`<;T4YrGUE.0gp<])[OZX:q?&Sp`Nr8)1+9XSt3InDb0/f+C.#)/[M8uVR3U26*W]-DV0;eom3C@,,EctaWOmT@^"6?/uELu)RS%^h-(\Mm\90bLr!$p?<+X9tChkL?@[,2(h\DGX(2(_eQB1-2eNVeMUdXD7;d)>h`R6$Bpje7T61@c%nD\RWHlZ%`Q#8Ru_*YQk/6M%G5F\_IpjhFk]AIE7s6V#D=Vl_dBV=4atJ4HiCmK_-O^n&8si=<jQk`"Zi8cWdpYV8j-#?,:>W)iju2a^@K.`"!mrXJJN]6)B,47M%oY$q]a5Elhgl:1PiX/W[(2pk!^E4f!<.@,4s#B%0..Zu3]!Xab-Ru(&lRRb+h<;Q2/d^YI+1>Mo0g]nK_U-;CBu@SGm"`r4'`T%^%ls=P@;stbB_%GO&'\_>M=UOgF8t7ZlAMFW![?FoB`u:i$n1j$6rk!e72&nb>RI^r0GtkYielYjQ`TK"bMRS%V9n_TFlS#8M@:BGO%)mm)CO>?oj6MFU4_AK>H85J`RB8>\F8,oM?>e=F^+1.&nb+Qt44V7NCT^srLkkO*Ne_PW"\Vg4ujrfKWe?D&!/5Xl8&KTdjDMt\u%%LE#@KR#7@iX!RHo48F_/"2%4&uK*laFAX[Ya%9NGFPM_/_k<I\7"C$#+?CJKT<st/?R8S$Mm>jhB;Eu`f;G&aPs:YSbb>+'_N<\%W;Sf2[VtKG7m(B"LQH%E1'h`Q@^7KS*&(kHP,([`b^!<^OCf)1O<J\?*An$B_[Sp=6!\5<)(>_gi43k+%-S`d&BF<5WoLOo\.*W_%KQS`&'DaEM"&[S7`.rP1.oWi,do0<'N0/n5mMH\J0SN]updSL`6\."pLlm?2c4N(_Q+er*AIMJXP\t=>'I1AQk^$8p%F!'O(H#>6%_HSaABpS](6[6'g0+F19;=84.6VO/*Wnis]*.Ee+,L<F8H1!"pKq@;D3c[(*dT>aodL6\_GoVW6cWj1aaRairgLh2Q*0l9DBV6$)%6@YOo1l.+N+;3ig"5EbC/HHoiS<:/l`p[m(98,IO>pX;&1QJfp%P]\ZK%:]l!c0NGr38dm*'*E(A?^8)Q/59?V@:66VB/lW"o;X]%f/N$!putUS;YUMkV'2pk8_5"kR*i5YU_X9D\1_73D;HCo5*rp?;e/5ea`04F.;lkc5MY$R,W^nMSWQ6@Qn+153+gg*aKca^\Rpd$%$mW4\:m?%.A/+1+%BVUCZ0UB:cpV?\Nn7>I?C7U,*DK]#>W]q4-cbEiK?N^#2b9_@!"??1\s4=YN6&0.3YuE`mPldEKm(\(ltr[m%+$-4"1MuHdBHG]UQTbqt<]&>ufJ21*Wh9`FKL9NH@@48KOUu-3f9T^;E%$=Db`&U>MRTYXk_(5ka-fPjCRM.V#MRs=I/`A7I/[>t%r`adL>C?GK\+om1q#%Vrr3uJ!\+om5Dt3XAnbJeCI/`aFmf#N0V33^"LZ1)TNsIP6*/'`K3rMp\P+Zk-)>[j6#lS>j-kc(RN*d!p%#mk5:2)3>?(p=G#OSffK6O)g$mH@X2F"u!A(?5Mf8M7V7_6+^YMD'"7m:9l.l#]PE_+Ea!&X04WJE_<$4^_soA?7.u%!4"[i&?)g%>W+Vrn;j-Dq=!bT*_cgc*:D+$B,5`SbXp?X'Xl?eW-Y;A0'4$ua7Xq"C+l\MUX:e"9hJ\[cXGm,\X_+sb<fV<lAFE!bG)W0'rn,,%ETmdQh)S_hQ`UG:p&J?D=`lC1S-q=-A&DDc=eB7TD4jpui=aXB`L]HpOCAOK`96-V]/1Ih!G,,%[L:%<ips`=U-<fNAGL6p`YCR8%OSUn\-dS,.6I])XEPKl*g8`o2[O0_.ZdD-t%Nh])cu6@Z0i4C6l`GAII[mVj-"@kt>N_qcJM[h>UVQ*d8^;hl7^gOOF3_T\<;]"]%p8V\/I,0%^2S-Z_NMm>8.-nWW=m*$5<CiZlZ<es^mhIc/VG"o/4hu/Ook1V@a+fV,3.7K10XH/j=Z*iHNC(pfY!]D.=*OTFII+[d%Dq5MRg;F?$ENp:n&h=,`^uopn9tZ*o'/sZ\p.\6*D%6@h*Y3P-I5ISHeES(AY<jP]H)cZ,7NQKTd-#u&cqqY9"MGCeN#V9::#B[k%cW`@#oc.;Omm8\rMosN6X7s;ZYAX36;nf]<K@o8Hp%GJ\4D`=f?gi,])I_#D_$0W38oSe?<Gq%5=1P/OH+J>gX%%N%8MBOM`#$`8%a0CG"0e;@57U'h$e92ZnM0rO8(u%WjhBIgk"EXRiRM,pb_EoH9/;@.PgQ#[B4DaRRc56ci6#r[i6]4Hre"O6jemhrZJ;`rniKGN)%kMre9NGlW`71%59=Y>^_@1T\V*lm6]`b1KLi_4et-7WGdkBGOQE<jP3aJ%>FDEm"q;*7i[Lq:grd3sI0q!&.8,jn/Ie[on.:ROAm%kLVInD1Z]?cO+d5Fb'-%75T\EEKKdSk()B3FT\6p0WTOhZNBuKq(9*^h??kO7RFUL8iBH7-8O262fuh']"otCH'nE<E[e2`k+"0:%?(\RPmDdm$ma5+^,A)Vdm.riJVE47to+lY_o=Dh&qW`?FQrIF"4YJc>8%Cg%TpIjE45?U7Sd4'Ume,o;.*![;H[Xa;06^`H\49mh%O(Qn]Wk1JKi?0SQ*]LpYIFn/dkc:VX8ENNlosF'T:R92a(4*O_]#-[WH/?i7EUFT'H["R%?$>--pDrJJm6&nAB"J;obP*$e4_i_e%gQ-Q#]C1#t>B#)E[SneS>C5c.ZkGT@]\hZh]fpB%Pfr[L?Fr>g7/&d8GIU/HcW`Kmo";B^0$cW,rQaRHma:@lekWb<DsasUo1jDB%o6H+<o_Q5.="_ggS*fdV"n)+JYJ3T2:KopBo!GgV/rr*ArQaRHma:uY]2R^)l"[X=%,mk)f:XNo-sBH8A-@b/VT,r:f7@eQ(T-,D%R!gVP>RPP`iJGfLIscH+M:>(?=uXCiS1H[44aCL7Vq*r$^YHPBh=0s85@2rUTJ71)iH6tFF_Q&%:SRG^Od:1)e&3l6EW5J*`q+p4%2BR>f%J0OqD)<H.e)i;Z?J&gG[U3oZ\8M*:eZVFe_B]BniFOj?f^\;<lU`g7-I2Tc'AH#eqr.Ckm=luH++5#dfTkOQ'O"Wu`.573%iq(8*]8jo,bO#\h%3N@=$8cWk^;KBk,O&*s"B1LOEh#tq2<3(hkjsgHeg,\9T(b>%UY?gGat>gF*L0>5?G5qu0CMTLKG&oaolg)n%H&">.B8C1h)glqoKjNUR2W9IUq!rV&k]V`jIqSPDj5:,&hg(r_GG^.jRM/r`mN+O[n2B`_bT7p78uS_jQ"9m?l9ZM61f7Fa<1:S`%P"^O2I&X<BW[>)S%"ac=kO"a][BqJ&p%'<+;q*]uM(,/4:B?5WZQp0PX+/3dB7uC7dZhe9$"oF#n55SjnqZDB)LPG;%"YK:N.=17%8l.=]P*g5;j3"7g]"$@UV(O/L)>?0`M5==im81Fu1^%;UHoA>^iM5DYVr:._4$J8EVh:Sb3465A%>L6'f+X1gQCN._8d,mN^0PX\%#\/nP?_@+*-JeLqb^Y*in<bQi(_2_i,f%\k'D$!e27>oInmr/?iR9\\;BFhuq4tLtFkUj#1U>c`fV,j-G&/_:':PtAh0lA-H_PF<%OWmP:nh66M-r)E0*(S_=TVOIP&b`)8.84u\Qq/;6H@<OO@5M6F+gkZ0o1Ce!5'Tt$9!$e9B]YFl+Y$%>=dgA]0G<A9'ibq\H94$g%&r<X*BLZ<mO\HZD9e"I:UkP(nGbS&LY@(Ml8hamlS^`:Ks-*GsWRR>kl+GDVWlnAJF;guZW"7ZldDJ=^f>>UjR]1tV3X)&JSC-Tq%C<m(XRF:C24bA?F;J4EW1:gMrhd!VF/0eTc!gbL@c[KsRk7_+lZ(NsgU)eSD\(%1[H<C><X$jXFY*<!Cn5b_i_/fHYS$4_KBp<[e%?D+Q\?X^Cs?\-oGQ`#eeA!g_VgEmkZHC!IBNL&E.gX*KFmAPoNhq.!KZl.j"O93:^T5H+b$cA2;[L#`BeL0qaDphRD]u+XM8LdF?%YGGkMn`m1IAEfD+&X4Lfe[HK>8D:-BF\7[=/ZTDYAmQ`2WMD7R,\XS\H<1E!Sf[c[U?'J_Z""$d-:$h%=0<0XY.dV^AhbID4qNnb%Mf'$Mlf#FJm0m=RGuP=<4O<3X2\DKKGEcrS:^EE:Ac%u:n$:2S^[JdS+T%Iqct.!*UN#*Z^aVC3S5B%1-;M"K7dPphFBbh;-VK%7%Y>7#Q&58u_aqh0oZ@km9#U^@p3(6i#%nkn-5&NOogTF^W04AOtMQ5!U/1>>B#2G:C#8tMAI4JO_X9>A+_V3;O4C26[!=q%B;1M!X%%7XJt*\iSA#1SenE=NtJFdCI`C;&@,C,VEmq@4DuPu6(W=Bb/>dW17K%ekF[HF0a;L]WDX2mZ[78Kno)N=*+h.;S`7Xjdg6EB0oR%0I*lpX(;+`[[\u6=Echb<i=M?,<iH;@RHDO]9^(jbUU;Gm>AN.@%8(K8='sq2"Ia1p3_,p%[!Aq6hX78KDASX6"hF^DAW*TdQ.!M%3(8:Rl43S]jK$U@C_r3EQIX:@'_u/#"]phYa;toqoI9>E&S37OmNN`P3p/p;-T,"P/[,o%%k[a%'CN4T:qbK`9%D&V%WoQfO8I,L%P`BstMo^)i^[:_(;:PgdR;WsSUuq-`!d6^[l&[FkGSt*K]\<#a-4``*MLF=e-.[hh<a3aj>mh?Lb+Z,CR2qdn`!%-<a+d=eA:)="%^\3[;>i/S.'T^+B6]gLZ[ZAV_!JQ>YgLDUQDT*(>2D(2Q<nhh9n+Fju%.LkkS!>UW&X/>8m\5D/hBi8OMBDu9FbPO9Un_:b2)RIl%g1N*LA%c+Vqh"A[<s2Z*qdBVm@l?7oPV72<YU%*VFGZ"J49arrCsA1aa&i6B&S^ge9l..6<Bs%9X;ucNj9CmpX&$$Ddk1'_=:-3b%<>A)+4gD>#HK/S]C,D+rYVM*(P'YYM66AZ%]a4r?caIL9KbS;En^V`\#>2O%/=<Wm"gEH"=XkB%(=e8D[F_+l]"Tdp:j&AdQ88u?%`R2#oqFr%"qr<prCEr5`I."Jq;ZGbfk>/jg,#TaqAVq0I7ls1R\SDA3._I1lr1fTtScsp3g.#Ad\ARpoD2m`WX/Yd(,ckbM<\n="%T"H@Iq29E;`J[++<6J69.;,4N8oub&oJNm!pfoC2I8oKfl!T(g)otB5biU9MT?mUr@i2[?P<f568\2Z^^X(K1]D$gJf>%4=VtY]:%GJF'2s7J=#qd4jE^]!`lrpH,fH2;H/s/WoF-LP8aE=D,Tb$\]q?VI\BcA--MWp!p38#sb)4.?$"VTW&%bh7%8lj_db>=?\AIE@-h%Aan*_>`AuBAX0bf]]SB-oY7RGnp:ko*fh(X]@u/8^k\_U^&ELqP^-AC+'u$99^p3bb8og;W37gL.?qF?0RunI?!_AM<Bt@h0Bp/O%+Bs,s6+roMHXA5sd,LdWJOYhFht]lZUl'e$q>4q!'`T$%LtZ*VZ/[A&%HZ2.'Aq<4bN$c#Z38;S+KQp18qn=Ag4XT3S`6Y]:o3H8%.oBnijO1fCT,%<KrH6YV#Y=p)aM\E87O.`Q'kL'^V7Q]+C'8+qGHp6c/InL6aAXkUPFC^gc$Y=<+HJMso6@gc#Pp97*!IX3$,*!V%+8_o\WTbijYjuEp.0d,>lKa6kTiX3:D#.Ik8Qu9lXA&:;5*-rKB<!!JlTeeDIXkD2ie'q0C?`pH8D4+dQ?u-T&=$RnVM8-_!a@Y/%M7a1B1g,5aUo*9B*#D$Wj4-tj/)>/pTF456iB74\XSO[EF&^,;JRX.,C6Zb7%k+$47WgX[WK9J=gs?Piq#W&:&N$CP-MmuShmr:p%q@,+;-)&D1F<!#ArGmK8,<RJVo*hRo,]QDn+[PCR.VTMQQD5\;T]!i!+'K+R?A6D"6'!412Dm3=L/=0`kb&[T(q"%<,k717%O*XC%`Q[1!U96$JZ`,G9[#GHq+JP%`c.NQeeOZd6*0fE.]k^KY?N14Gq>$FEj^5E7>d8Gi8F\q;M&X?lo#(P<&sBp[/WQWd!?P&pGd5rf%6WL&7[4&3g$u@GeA.:'$pb[a'%Uq=XSrerE64gt6%qg*V5Dm`EY%QE"_utaLV#S`h_kBaPo2&<im,N5f^6HS.i5b:Ap&88*j`'p6%KdNr#'VJd-g3@/7#WriXnuc_h;L^l,C,Hp*At`O(CdQAqW9l&,f@jf_7Cn&F]#\rhH*BpRN:sB5dR8L6AoGIt6kc2m8hYRkZJV[N%3KT&S+p:D3L[](nJ@jZ$'7q_q1Y#Z'g+#WN`R?]5kW*QXZd+8bK\Jl;X,1;dX&sIH;Yrc2WlN\2Q"iOk`0LW]8MT:*0,hFQ/AW;S%=HOD"nLAI\l6l:34bmd\E4&RreIa5R/c1B0g*EIRUg&$PQ(b+*B]%]DN`[>i.C5i#%1e)$d9:r'6#[YE$8pG8O-<X5NIoQ*c+n#b%9r@`]A$Hjq(%iK8?&nbOV'.]R\^\1MPd?:`A##^VQS>G@Re5Yl,T?'G$t?!2V[ud<cj3VD>60nZ9!UG*@hm'b&Ifn^#Jip-<L:@r%C8r%\G#PbW\f+;<jZl2POrDb^MQ(X*N+/sl=Ai4Q[QS"_=0$atP*_22J(1`@>qN(Li,o$Wp.hK-VG2sY.(jSrU#PsM7U70D9qiMn%*\",A4:#_L%=)P)EMY'YqO5W)%B,GYi\\60!<r:APb@HG_P,^D6&j#h1dULYkh]eifNEdT*b+eQ3F!-.24OW+g'Qqslug_Vg&?q#%V#jm!=u=:![Fq:Hj<R0LUGpOu#3Src.d;SWgB<aOM>-(*+1=9KKOc8gd:e2M&B0iaHkn`/e%RrAY_Yn=T`e;RYecLShQ)8E%`mT_%!3-q\jDJrqT6s6hM2+u%%1$;"/;9>"er4ETMl8../sbCIP_&BN2?Ou=_+5f;,dRe(OnArY]P6_/'o9O/6.Vq[)joQ'!G[LI!3(CW%8\d$Q"'5]DQqjdW#YM0mN#trFU_qQ$:<,c0Ro.$R+.-,&4%Vkpk^:erdo8V4A^KoQ[#9e4rl%"FS971>Via)6+,?id`dfJ\=.tYF%6^5qCPQ0p$VccjEI95jaK_dtp#DBu,IE=pKYOi$bLB0:"TLQQ>MmH:b:Xq#h7Q.*53@K%#>.r>-c(7MB0Bas`8f.a?KB,%nn@^R5%5Z'uf'uJNVd6Kk%d[JV;6]2jn<8,Ki"Tqo6m:rePHXF1MBa,=gY<gQt9&Cp<3=H1il:DdqDcHF?_BC'nglMekhiC9AXk)2GW*5rc%YDQp0$AXMWq44!4G"rHTVXSolP/W@Jb.,k`'YuE!45J-71:oY5J1;P(M`>Rb2D/i8;AMS3.U0T4;4H.*c.@s7SW$uJjH[d8`g_XI%=u-DtPVtn.fob47ireSeE],>`5f&^>kL]f#`0jc4p5&mOB\m$36gp$^f"8$&j'uIk'3$Cck!QGOX&SFYGtX61*(/ToFM.9LCcU%=%$@*7r$jdAS(]b)O4=hF3UkCSS&gW&`joGW?L&bsq%$52"*6[D&:V`%Ll+:6`_,dnA`ipCa*B7b;Y_6DUeaX\[DKLa'Oe5*V_=gR"%i`9^aCh'!&fBO_^"\(kpfW0[=`mK0Y*V:2>7@mO`#!.cl:G/>Gd*-Ss/HVriA.e-j#5uBdrHuo;+Ut+?n(Au0d;<$8*#4:gL9.Vq%*d\K)6*JOJRC"sG*Yjj)02tKR<e3pOdK6X_jQkm20G86129!,(:6[N.BW"ksFNih%M&$-:?-V):;.nFbYk13>Fea:GIBi51,i,6!%Y&V''RPLD-<OrFJHrULrP^)n2.2[D36#Eh`J0,&sP+i*)C1!fPg7,AG]Q<3?c1d4cqXVV:l]ZElT2!Ch^fdCrRc?(@3>a7[?WaXf%Xi!Q4p3m1KX*?Vf;+u@m.F1H5GR').3,]nh\#1lZhk$XX<>ip'#Xt6IC/nk0baA#)jpMS0A!&d!1!>.O*6^n:YT^=?]R5uWP&<b`%Xlf#uc?]4p4/WSlV:d2Q%^cI0_.*k[TuX%QHk:1Z1Igd<VnT7n/KN9E;/Z8=L,fliU`\UBIFMc!^/U/AZ:>h0]`3[H-fR_ek5Ts2%*sO[<8Ci<]*>X#i/g'd&E'CL!;1OjuOED7-57['b9j0o6FMZJ+goP7W$nrDpU,uej?m;(ERKEWfV&NA0l&/8MY!h;Kngon'&#CQ,%LE^c@,$0A5:409dUJtnkc%P"-U;4[g;\,uXE[pGg&66PlnR+^HICTgW,h'LfI2ADG:9W4YF$A!P)kreAZ2HeO`"/<E)`-GA@'IJn%KKSeln2k2@<U24%"Z<W7i7O/6")!QKQWT*aFX<B6Z9A"sccL.dm<SPlG^FZb`o>tEIbge+qH]2m^c`uBgP[dcX+2EY*qn)?:=#q(%]u;$)%PsZK]tm<e1uY%?gk:$L]m=1d]u\,RP.agMrP=Bs2gG3@kQX)D;,"D0!^TS___gU8$?V9,b)b2n!Q1!>"Di!]Mbd^J>3&Rj%#MtF.6in!&-?TaTji$>[qiA7L=E2QWM'1><cc$6l]o3J[QR1Ch2hphNf,2AC1NeaZlcYW!X\Z7DZ8\g!9n:k_7'@-O+:"7o#]c^a%JE0d0TL-cR8BXId#A/?>Y6MC&7gq>:o;=6cS9$,pBF%7/'4h,5UJWH!$nM/SB4ikK-dJfdLt:C:2b8Dh-k9iJ?B*n%c02mp]Y1c1%?bY<ABA3,:%:r)hK*mUlctF-D``\JCIW%E'A8r5es*;*m7X.KEZf?6qp@2X/k38e)c1"8[8!U&GMNWR80`@q7W@i=B\:@bO>$;CO%SS9d%(BYV.RO-nX<08RR]CW#7d<*.sS%O-Zho)BR)kWRo3C0tH2DPg5r".)g0i6,b6]juXcM%V=@FJa+kn`EXV,d7'"9iYo2\E_)%VOX4>dM=qBiHAce?,E\L&SI;J=,-/_egc["+hnF77-<ES4lUB;Q&gqKk)sD\`W6WDaqGu.&194DNc3dR(jg<@\[Ei@Ngtjm7BsgD%q6:!AMrcQHr:K*5@CoLiOSNn[qkK)nDltiFN7/V1BANuUJ209^;)2E0[6pNa$9[,=S^OKU*,eV[j*5p?R<s%O]dT)[-Q<E@9<u+n%q?uNKiJ?npShfJ@^I$AkS`(_U8W&9WY@s9trOdhTqCjddlU)0!dhh0ifTetVi5B%%%D&DCA"pG6.te1"L%$gVDlQRF@]IofEFaY@%E^",2=`aHPMNI`*_+jat`GWi-R^WNO@\5Qa;bA)+6\/f#k@Cg\S-D2.@AUo)Md]0s'sCs^'Bu0uPc*!?>gWQJfA@mc4FM4D$WkbM%8<T@a`0S[.g8]rkTf.mqpQ-CWSArO)9bYlQ;g*W!S$Lo&QS\c2#Gcr1cJ#0LG1OCTXSq'\bUqB6`\r2>(5`&,M>q(JG\=Cl[Xm(C%5gB5Y&0f!s/?#Oj"39Ps\&O>7Pe;n4A<f%h.Q[1BVg%8<FAmPiS2&7$Pq<1ZP*VDd2\^=hj)9_h.o4G_YDSaQ5e.^hV<Yb<a,"9T%&C=^D0RhDI*Ju$^6d:S"!LWa&7Za1+01W5[O0P$%db-pZ??=Mglq&p&dKG`0/np<@&c53r+,Z%hmV$;?js(U23P'2u&q,uteYuQ(%]StuNjJ1^V7Ufc2`kA\@feM^B+6D"sc&A4m[S7^!D"B@SA/%>?V-pDZ^:,f.)k@`)72-hgPO1SNe-#DE[W?11)1jYjMPg$CA.msR%XjO1Ydgb2u[_G$p$nrYbfrOWF!IAPA!pG^("U_XH-NjO4e&I:_?>bU3iPksd7!f!8PHIl7`ppY@ooE0=Z8aVCI'OTe2$4io"<h3[%O:JJ8J\4Y[I;qYebSA_\T0Vc`e*t[`1/MqNKG)aeK)%oGP\%U:MVsT:RDg54;2-Q9^VafPG9f9Ak"p@AbK)';."5%f78"YWC:@.o%/#3G#c&H)<&O@c;@psa18!('RNUgKeOd#NrofCO>I)pH+^\*j5hk,aB5ZQnK5`I9FER*\M:ReF'--jVFNb][\nQY#.>:.Y/Oki^s%#BN"@dcHn8FeeLqiZsCr/&O_C:3,ToHjYa'TLA\p/['^hS(B#kg493W.N"9Sh/^`*pJBt[.WhVVm\2I7847sqoJ7;IT.Wi`[jZK9%@uhY,f&9LWhGQ1EM\XI^d%%3?r$h&<p;rpTqkPK!Ic2ae;=A95QNV"YVW`B.:5n6Z\82@+MoM/+`*uTH$&s+=LVYZInGc"SYi;m#%A$4JtKIgEK*t;J'[,9R%jZ(T3R7H;!9`b\`PQU'b.Om#b#=U:_\2I(-3)oD*`d>Y_K8\.<UcKXJiVb7)5D%B#%EMDP,>YL62qVsR%P$df<20B0+<$dtUr-d^^UD!?6UV<!!pf?VJXjH$f'fo/9kiWS8nsHZhgIS?ddRGoGL4)3i+]#]!fsd^&UG;jmod(MU[("R[,n9Si%J+-8O7tq*i9<FD1?/c0;Jau6XPYH4SZ?:MW\$@$lm?1=?j=IB@\0[#-TnFLF&,/s3lKdCBmDUo&8Cj(aJ[PUd5KSBZF&!S\]K0uF%W]L!d1Skhu$Kk2()^21B*Zc;>_\gJsZY:R97BUq'%aJ7DDGfY!,it`ZOpH,BGn%qi<B$=,?L<9hL!>a4&mG&UW,($O2;6XFT2q34%XR15!^B@ObbI>rXjD>l")nbsXZL.B5H/mG8[Z#@ZLS?5t:r^)>m?Yd+?rjVcfj90P%(!:mb8EHCY%.]DMCH(F#AR<pRn=#4KK/7\%m9RI%j.RM,a+a?L.342NqrM+Ua'XZ"ARWn(`pTXam*gt@422ae0)XXN.SQA-]X:K2=-.\bS@+HK@)#n\mr@&752U6@@=uRXI(]=`%Q!\:=mPsS24p$p[=uR_BqQbb/Y_oO;.G$iab$/gkIKboUHqp`Sm[l&*hbADH5u1*5*u_otT19qtNgHG"?[FurnOoI&BX-oHR`Af@%QG`K61%ZRHF5Sql)`V33$^)Larf&m:U-IX[/<U:ZY=##/.`X_dYEg=BGkd0"0?kI>EAreihbH2"l=G_[qYuJ240#99'C6V[]@IE7%"&H]B@93VR;(XI6@#efYW-ZA:KCeXa3$4@6^,fM*"qQ8\)t\7H-)741%AaTU9I\QM)53HtNkM2u3fkJ\dlps-+8D;dLo0KVd-ht"%&6pqlS&&e,40#YSdMnls/&kWI[<Wa*:?<G[*\>m1OUI("B$I/\!pEgA\K-qa?s#iJ<2*q\Y'VkgPY<ig';:#aDRe*B08n5jm+A"l%="!]=NlN.<"bh+I)O\>RY<T0[!arjjDo$YIB.Gkr`Wh5L&^5sg-`2HFF@5IC_[^C+N)QhOioG'A7uV)_=q;s-=qDi*F3OJR'%4)Z%<IiJC=p:ML`rsIeM/oP(3J!,IYS,[M_BAOPli2]@Q!S=\>#<WcYA608BIo7CG<6'@[:9=.N5M*_Hho<\.*tbDVAs_Vkr#,35>87H%_7,Y<N&/X!<f\j/<MA?,&4-s#4$[hJ$]<1ABp4dnTaYRY;qYPJXGBK5P1"BUp.ZoD67jTNWE!fQ4QtA+AO+:8_?HBDAO5IS4Y3nQ%IRinI3ies,disV>1gB_9/e/m3(qc1l@+>q3;8m!('ZcI`Ntu0@9pF]MC\c<a1OW1C%f5]AidL\^V*ucN'mCVn$O@\(#IM^0dBHp<%WMh3ne*96M5nl5LbenZbCOllJMnF5jAAgDEZ-.rj'Eo\JL7LTD;R;+@YWsse\?7\./ZB\mEcIXR!fK[3,[[ER$V0^sg5*!=Bd=b$%OdhNNSLQF=P[#@nR<MW[J\gd<XR@hQ/<!f;:rR2p6FCQF*M',WD<k317+*``ZZaT.5$%'1U9CoRD]Il#/rc"oCVIlg_pK7$@j:?s%XLcV6lAtdpdiUKD&Q\7:;C@>=!cuIE9%-^>02?9R@@dA4XL0fl:Z[Of.`uEJdkj)r.l3VBN]PmlZ==0DAo>*$06,1u*V/2F[#U)Q%`Xns(M\>gWk_?DWfb[.S7Cm1'^.=4@:#&\VDt?PFgh^HaiNmsM1P[ijm(\QT]Dk`14ai>]HWPkkE)X>QZd<blngs*!!BLFK9LaUo%a[2o9NTq<@C!&0fBNpd^J6am=aa#-k_',^M'03?XTg[n)fO)[$rC8TNE]0`7I`)som4FY/0?-90aHI!L<2h,P13&4^'F]fgdE`h[%&=)hC6KfLZ3E6Q-*gi853C-1i%X7N<0"I\ZN5T)m[ohN>[VWe$^DX)uH3q?::PFG#<pI/5i352j6jUf)6SVS:X]ILYS8a?SH6@qM%B@#,Dp4Q:_0a*(sUj$s>!62oke9D'`FpG/E+;QNn@lB.u%oZLEkkTQ&$kiI.CT*K*jU"Z@^2gS;0(nM//+8^+6ZG%,a6sL3Eh-oN%D5erDK1F':NHh3%>+q:\p+*0gPu7YZSgQq'jA6Fa@CMn8iEI,-(2Y24\gSJESJ!X'*s>c@9U@[Tr@&ISI\=6MMH`($eG?^_cQV]c%17g.Ul,ci&k2^\`-M85\bVUTC==pS]<DmrD7OLd$`cXc'bdL7^@A`7=+l6`-,P0G>?1jr6&;B';PiET8GNG>(&km:p&r*l#4`Q:'%6"193p8btZ>%*I<J3,baWRr>^0"E&1Q";m(Hc56IY.(NmN!iu\gPHT0_,iX%;ks5ci^hNBM`cV#Gc=/m2fmD3@%d@^bS'9KQ4++R%Lq-$?,S=!L!JM*TOEf(-MJ8mn[l3Y$RSBZ_-63hgE?h.\O*1e]"KfM'%&mL@m9#]3KdY!i8bA]nG]D&4bnZlin1&IQ;AqdJH9^>:%oBP/?TRGF.i7qUk;<9VspYb(<rE@>622X'9Cph?m-Or-MqF50C%(*]8E_`,2c*kML'_"I?:+u$cVYCUQOMq8cFtD[/2oUbnc#N"T%3L75Qaj^8<EReeB639bT+[Q'H&1&m0.o`&:gH3Ihk8`If8]8"L@-l)@C!'+cC`'02aY-tWpHr[V<('5rL2%o_;G]@WTVjlX:#eNl%$W.Q32J8>/(es^$2osjb&ol`V-\:U;>WUhqXOgb1q,J':54.7A6/*7Di##,*Ek78j*MI<_[Y[:$o;1XJiFY4+AWDnq3iTTrJ5h9E%Dd,#\b0=3m(0-/OVWS;V;Y_1#[Rpde<1ZG0<!LpVqA5'#[4S)R;oF>E'18LsZ9-@$4YD(;+lDuu<fMVi9:80C]be\P,=0rEGGhCS%_piBXeLNQSM(+)%Mb'3L]H\gJl:BKB>&75O:QdeQRM<a$N!]Ua,F[Iaf65?6MIA@<m]4HG$`+UeIR3nentn`0b&8PC;RYL\V9VBm%XP*t,+$,>6E(X`=5$9^]%*%>sr*WUsK:i,8MnEknN[cF_TAOKmH4/$EJ,Zb"\*jSsbUNkOc_2Z7G8,-X=>upe/Tk2fIEUXm%rP&l%\AJC.PSYdpF@$sgR2p*]r/`:'kQ<ds^-HZp"i,#=N^Ie"9aHuuFsn;P+I&jgad+mP=Z0398lltap9s#L&+=FHe?AFkjSI5F;c]A;%e-";W3PK;[kR;(hn(3')0'Ls/;Y*]kWe(O=G`DeNU#)4qgk+SW$OAmIQ!(+Y&')CjPYA)PXUBGQ,$_0(0@"_%BqT:Lk7cY-E'E:D%9:dKDB/aiC2^+(.'D?I/HA9.rKB1?\4+VqhB0Tr3Lso"e$??>k5/$;j,GEXg"OoL.*h&EZhq_)Ag.#-_3m3G+2#AOJdb9b9UC'#m%/br`;IS`D;_s.i`oJt)[-8_Mfe>Q1`%k1Y0VtGl'^e]jF)qE(4'k#;qF-(%"d.%FYmbk4uGCehYF]4FWSXA!m-qprp?uRG$fCM]P%o^R=jKiudNa3+u62'U%Y4.i`Cj$g22-aqn,dgjYV4.iaks)IBhY5%'Za]+YDYl*k%.ZYs$:_&qN=WGN+g`2ENhk6FhfNViDS<1J1%r*BbA(c%uMo+'4H"P![.TJ_#`a:tssF&BUU)s9o`nY^RMQq)k`Z\#=$fT'mdGr]Z38hR7Bob^X=YmYJ'Z_7-BGj6Zd54<b%f.\=T%<+!#Pl=#cm4Z[+\o\%RF;dVG%Hg1g\Vc):c87,]L^^]B8[m(R(hX*b@cRa@RNkEa16;$5].5fl9(N`F>$#W\RJTEZ]_iH=+H]C*T%'^h@cC/""!T!RWL//R@0^iO8\lGu'%4m!a3oeMS\r1rJrL\cO#*D')`=9n^/70X'dfgutRbsWERH$Vh>K^H8FS%p9bO*1+BVQ?`W%#n^7eQX$`t<Jr!-MubCfBa(3`I\=XAW0V&D_5PgR,rT40`RG[T[9%e[OVh=<8pXi@?O&'C8/p,]1427jL<BW=DE2K65+d?/=GsSI%*H1KoZ`qRnRkG1JPR=i_lO#Z<Bt[pnUur+"XF,sc3ts\!kN<u_FFM"n7T#V&kl_l23+p]hm69Uk#nN4W<7Pr4S\-C`]U^<$-DTEM%13#mZ'QXY[gsB@;rgU9e+(t!&B/FB_YP5V,n^m5d9q`tE--K?n"oXpl]M0?UK>sb6GP?H5PI]E89.!K<?hBrMdc\7>>mGRc@\m,u%P,T0FaGF#YeA#+l<3'DZaWD"jgjr+U%mct*`GuYWaG8Z3h.C)Xq_pP1rCET4i@M#l9nDD[Hk]RU;tf\VO]VrD2d4:IgrFUX7Kt;*%MKP\K0DY1GJW(ciH`-P;p"o"(YJ9Mc+3_j<)!;IeV0:7%*ff2f%9sG0RhPbjjPSL=?*Urf-#PQ"8'U,Z1HJ2O3L]el%bqa;\FW\^%G<SL>&teRb1(2eMRg&5;bmCO]_"XL<Lc&3DU\rY#rhJ`W@RYhT'O:"2_g]%Q\;?^[eqX.1QK#"Oif=?7-p:MhN(U@EH'G=r>Do^^%PZ&\,^^G.XR#">6akA*m]''T&ZDP9\@LrZU.scol3%3FQV;R3+alIMP]C1D,V@2oMi4So<"V)=`e+Hd9HAtOChSV:XAB`0DY-Uks%f[k3_CPkhb^<FZMp3Am=F,mXFRf=p`:AbEiO!-=5]?AAoJ*?KHiZC?pbki\.KrS>ta)g<J2JaJpVR2ul)/pPh'12a33bdZ/X#>tn%PUq;hZ4^W(8#$\Xe-Mh:]-eR6$]f%k7Pt6*p*$".B/b!'M02p+4l2e50DY<)#^Qhq*km_=`\t7\b&*SIXlsqeR!Nr,:34!B:?\50%*F'7M24Dj'+5VTbQ8e=*d\,L1HC85tg$T)kr/T*9CB(O)cl\KdHRCE5[bJ][]PcK%cgC2_CV0c<I#Tsg'bT@db0W^I]AN5[rS;u"%mp-D!cX3jZ?/>(.+K$NV&4T>#Q\T=g9IE@rVc@<?OK><AOqT$O=KMr0";;\$6-f(>=Xar-%+\?)A>.Q#PU*\df4agl/pBCNmAVJC%hX8&2qM*%/2%Ae7n&#,?/(kDcrXN_G[P6ml[4E.c9a>FN$14Ll5jIpj=_lhe`-c6;gZo9h$H]UrM*^0G<^aXYCE_FW(Ui2e][_?.%a3S9!rmQ?Y(Y@7e,K(&A$r`k(B#bOPMULk]lV[5S2cZ+Rk*R@[-h?PT%+H)i6%/$8-)iu%I8H/<EZc,NF5B6#j&ZgrWhHT:M=4EQ%Zo!eZED-_b]Z&41[F!o>9qFI(b!\uJ@B#>@OCa4tLZA:M7*3gh-NZ`MIYRt.e^99E(C3$R=>""Ucr0DZ'&=U!<bfGGnQO6rXhCe4%:!iTER_(pi"t0%hmg:?(m1_[;BDj6e!HTL115NVAPAmJIp.9H#&_B43&G).J;'N,q$K[eJd.[Dckhu0PpCY?@WP(W$4"9daTMOdH%]T^/E5h>BPp_LmjgSZ]sX;Fr8]f[>&Ho6=JXH5`9D5rKf8fCGRQ$qR3#C('Of9WDEcI^'S?H#Rj/lH:\)=-UEh_f1"35ObuKN0C'%\&n74>O]<'T3c`N1/kg>8M)?:dFB@tnC!q4!P9\q%[uQ\ql87tW8Fs,,1rMf%e:P"b38\":b0#/[:2hP*?j1C\fF?R&[8qaQJlV4%W2l%hXmYW,XRp@ELtY8G*Y=<*f/^*/G0Pb`-iM2Gp)QOa34X61e**UO]jfS^e]WIhl>9[47;Y)l\q>t6e#WVuXL?XpEq^c$mOslh%2jsbf6`Q:W&l7F)[>2iIqN+5UpQj5mOG._s%OV#l-ptd!>8F$(9dYs,;T!f'LhJA'W'DsX0WV6l(Ma?Vi"#E#M=;di&A!FQ^bHn3%R0hr9#!*ta@NQT4E(ZorUhEu-.AN"(T.[^_qlD6Fa;`3o,"Js'DI2&2;pA=7Vsu:C"gn0J,];XkJ^RW]<KV7O+UT>h_;T)Veh+=[%T*:Ud24TC;R8,,<*\+GJTjiBa,!]5F,UJC5eI_?N;)u:GCar<f(cUK4!>9aHP-trA#$H[!:2k1WJ7YWmE%i>nT4Rh(8[T=b@A4+M%#V2Gq<KUKWA7Y>DG;'.5gWXI85#csJUTN<L<T5K%F9srL-IRFGW]8Hu#.roK[`u+1@o'@U*Q%^/GW5Nk:RZW!]p/1%B1FqV$P*m9%F6Co)h21;)Q]^Yg.(PoFcfVbK7jm"Q%.g`2BmWU#J/auhd]0oTYhGpppQ2HW3?12)b(mut6B+?c'QW+i`%-[3=.N/4Vajki(kO*>%@Q4ro<DrU7_dJuue/4WdfZg9^CoX!g<PBb%EAb!b8E)h1.!8ZE@P-2]b\3K0b_BAa]rW'j(5<)/_i>L+Eu3nbfnl8l<2fE5qe,B=%(n22-"$"3+CQ&kA>1hRt+G*l[B1ik>C_LSR9`h6Y`$9f/#bMJm!][[41;^#Sg:#e6!+qlu!%YDb_ag3U(:#BQ^f/l$93RP_(>kBK%?lhU.\2(tI]0.cebI%-"_tI)R$qV!YcB4-TQpiYIaJ6X-;Atj+^B5]UOX+<3#*R0*9V8'5`;VKRTTrGc#\eSga<RC[GR@M&6O9V'%"n^J8Ui8SIN"(qW,LZ"f>,ts5>'.6+e%SG@F0l2;T2q3XVo3p%ZQ4Ui/%LcW0B/f<P5X_-;g6N92TFfiR,0%KlIF(jC`qn>C?C)9%T6l?q+aF"7+o!d4Y+1Ym(p67aLFR.:OQ3J3[6-Pk<o/-1Y04!kl/Tc1QGg`UeO,m,/;jIM+tj4'S.a1ln6#mIrQ'p:\A,F7iT<5Y%./O>UE?-F*"S/J)m,0c;H":31#+V#e6)4fe6BI`sBgm+--kSY12E@ErX<,9%M,CNZ1qX4O?[Fopk"EEP;"8kF>O*<5P@=>$U5]!$%/muB6Jpu\[^"]jM-UuKQe+ZBF_''k!Vq*#+Z;#L+-'Udu*S#\KG,[`:iFhre"m'8YBS`&F2"VHu\6i4]-/P+^!<=Zi)jHS0?,i]F%mQsF_S<m%-_0,Pgm%:3`%shZ_\r;t)0j*)heb@@F79"E`AH?ma9:XA`aMVjth.6n_d'a2q\BVNaL<fU!E*EMc\/p9Di3H]Hj'H?9%[L=4lj>LTn<gL=Vi6)>m>OkSs8H'%-9u$t5cm.9_-I#AFTdU7"rqmoV'C706.RYG:YX/Df7-.imWsiJ1rcX(0q7?MZP)P:k>L909%f)PElN\n>']_Ye80HA3$/RKiqA0c/6S.^Wg:[F-:!c?;Qo*mg[=6+``e^&g0SF>AKFD?j#0/%tFG1=^*hgEM;-A$4b9CDN3m7r);%URs`ZpXeYX#Cbh-%T'$jA(jQbAdu:UdcUbMNtos5SY2]V;=pGWIXGba"R-%0H)HcmTLafU\3Pm?C4i,N"CX'9GkJ^Ras;95Xf!em%>SU!;$KplN0-3a\]\<a0:L2oSG3a&/2`uQT$>5k^PiS7_9(DJ#\IEY@69DBWO'!HG%k"`tciPGGL0g-Qo59[?Dg:ER(RgF#i((o>%o69#Da@_pdn$\nfW@,44DVa^XL<"4\bEtbRE.G-.cp/Xp`&,Cfp`WL"daEMm\`I@s/#]_Gf:QUA46s_U0.Q+'iq7#_`tsSu@R4Ur%H50ST^VePagc-/^'gR)4?1Z^^3?"lVWjdj2+*?S"#^G8A;+MSB!l%\i7[X^k)U%JX+g0]GE7?6@(Ru>P2TUf`]F6$$J5AOP=;0p]%e1ul3/&[*Z#$C`=)?O-teqf9UQZ\<_d.XAR+*NNd6Pf<uNs.lJVWQ0CEdP.=Bu,R_Tq=#ACo[7?;G^j\f"NYSr(d0:PS[J$-_-Ik%[;O&D!Xn@1%CXu`e3^SBlCX.C^%`N?"aq)=OjS$9^OpbM+fgTeBnrMTRom&,6n^cfG[-D`W+K];(Z?;om%JLU*ln"&N,0p7aE"*)%OFu0k^l/>+J^6FAe9F$7I'.Jb/U1U97lJG(XIMs(09.0ALc"KuaUi=Y<=E,S-3D[pb""8TOu:5X;"/F'#m&,c<2Vg_:\(Ae_hj6/%FI#:r,N<P34%,iF$WLpbRJloVT1,pHPh^TrcHAH>i-^Jen[SOg+2?g1%Ur=aUPdqa*ef_u]"eA38$X$EV]MZs=H7YShd4MGoMJIW%jY^kh,HrT>A)?Q?eh]hod6Jmu:=[__Ar0Qg[%fW'\fdcP[$P"Tp0%!)2dcDYX$eK0+5c1j=Pj(EG:G5hk)4"\1VmkTE[I)+3j0_<%e\h.noljDjD#aOORa"_O;b_/<&Bl!l2*_EdprW@^=`@f$kA6kQLm*!LRVdnBgSC_s>"PbWJ]gL1l5#nVJ%C1('JkcUgKs"31HnSG%qr%co^0@Q+Wsbd#jq6LmLBO)q[,d2lM9j5hT/_ak_kB3^`K8l!c1Ts_D\kQn!;R`;7d-qSY!o],=cES:kSDZ]J<3L2PT7(VaJ!LE%8qB<g4%+=#*&IJg<>e+S"?#.Y,<%l6!E@]_A0/9@^T*D-4AtiGWC1W*+pNi(eR/_^=R0BX5"irjrBiYR[2U.ln3m^]#&<%g1.56/%j>hQ#!=O5o_G>B"r%s:s>7^sE[m2&ZP-NB!'I1bim@aW&hCJ>,#)/5XqkFmO8Z4)k]9+91C(``)6?dAIGfrmD2$73tqW$(g1I_%L%OqpIYm`JiF7uU1pM;0Gqirfb7i4e,NKJQIa#^-E[9'R7hAC9$s%]KsST1!B^A!0!:WQ'Grj[o'3Q*p^\cqCI$Z7cE)eLg2.!bc,;%XpreGHPG+UDMYB3J]`V6F4$W8J"FPSGB.`W^:q@<(U54($jN[sdc22CaZ%/U!"P,k,Z-+NaC!P!cIS-EZ3'23I_*/Sf5?Gc&V&IL%Ff+%@]OX7j/KaG,ZR<J%Ch_':b3rWg"S+QiHPU;6h'bu,9j&_\(q?MN2tu>a^NO:c>$k%(*M"d4C`RZ0]TC0/WpSh>52X$6^f6WM%`t$+jU_on'&mnB#'pT,-`2_I>g(>RuJWN`&fdI:1bEs;[r.^'l?6#m$X&o;S?1^&GmqsDi2CURp;0%@FY!k3/k^*1\]G^l@XBT8"%%#*W7P!0O"(5G3f/@2+NU<XGS#U:D1s64E`4:@*#])>f9Y)#gCHicth6QoPb&e:\e*"%W[M%\Zt[N4_LedK)Dci6m4hGBN;W$+/H%!H0@SgidVH!GQNdMD?dA]o&6jP^@Y*\qGURYg0rED-(VJQS#RMrTWa9?b6?`511#LH\o;S+tb@dP-TD`=R>qT-(f*^d]*\ES*=O5%[$kP22`jbX!R*IR5mJ14Mnp;,%LqI>V96/iduaf.RoXL*.8>>RkOFhpi#)@Fm<:YFb-XheJPOHiJ/hpiObbL*ktk>hq+M/3o&Dt"%;@rupF>6rWBXXCjGT'GQ<R\EVI<DioP)S^g?:c>JA9])r:Y:*7.kq:?!Z;#_K?.G)A&#+rfG*eRZ^s>]`W8pYHDS*aH=*t$,s0HA%H<;-d+m3XK)2:@4<?%'%,PS6?-fM&H(\)s^Ej9G<(e.ff/=W@\Zi,"&9q)4]+3d)Ie##t@I4-as.aga+P10O'Zu$S'g,:=ccM.:c%V90Mci_h;).T]^\F]7Ar.[;mZQAn.Ubat+p&Na03mr&Ek%s:&uoY3V&O8dWecl0%B"tC,>j/Xf?@?3eSl0aS(^3VKQVnR^"<?TA`%jt(kLn]uX4h8_b:nr:BTa0NX@KCR;o9ek)`U,jkY;ll)7kB94Oei\R;E#E,-dcI$S=@Lc,::>9D,*CriL);$WDDT4gGhXjB$,tjj%\Jeq=Ok.$Z?8<#4qV*?\#"d[MOHpmk(s3uR2`hGH)kls'bm=:DCu:#1^0#45Yh6n5(+P(S-sUS^3SL+nmeJZk^lQsV)h$gERpPj,%54nB:5L'af)nU)+d*$;X7$BSDGIqi"Vb+*cZc?;L$mp4e!]jACjtESZZ%a*S2#Hf)T5VGb2a.$V-H.i[VC-\?;OUD9Z`&:Q\X8u0%p3J^5R@XRJ7^^:]/,s.#j)&Y_IE7b7>+gO*#sW:Vdf6Qf-k)H%\l?;t82\qX15KM;9!qT[_S]&1h6"cS83O.^7dBf&AYea4ZE.#(%7U+NHe>8r-<iSW^jKMddJtan_c9/k)'0hMNMu6$X^DOOQ7D,W:6[&X!SM78HFEbp#J](YK'B2)$h_)>m2$/=;h<2E=I(oDO_j$4Q%Bt-n/B\C1-V-.p2/nQQaKD`O?W;^pJjnDEq3%-h,7W4O@"9TC>Imn^6o>X"kU@ECbosV"uRi:ZiX9GLr/KKthl=j18WoUOdV/IE2%ial&X<f/B;D!F_R4)J`PZ)Lh%ZDj\OOh5oufV_<c'-),eVb,-[A2!N;AQ!HMH^`IMZQ>FZ`M>u$`DF2b\6o1OHH$ci,Z!5d<"rpJ%CZlY7@^QrOnZ#X6EJrAGLL@]JC;>F3lAF*lGmOGr=:I3idD@gm<^Z6+=p_B7NB/\JF*#<8e<h)P\Ar=eWfheLC'9B5Ad)rQja7Ng%Lup.#ER%sO)D[a/FTuV&a6;iYM>]7h_Tbol=Mn<HPC$8!>r8_SP+1G0FEc'W*sb(fp[futeBK8RfV^1%i"@..hV\3TcSt^W2a$ju%R4[]oJZD#!^""JK14QRF&?&02UO5sDel:aKgd#+p3Q:CV:NuR2q+NU[Cd^r\UlqTL8Bq\+HjWo^@o.#K51_b5+$S8kY'Z12<J3\D%XfT1p1TC[ZT3E6+`"B'XQ;r^Mm#*>qYUWfED`Z8oB,O<1:KuGk2u^ppaB+rEG=*D$;`@o?bI(el`(8L]F;gka2T39Q2'[uX%VqVo%3Tk$;.mUQe\jS8$&sFg)#(Dr7Vn3-./21YY],9/"Xb;_3o`3XrZ>rsS(SP&.;p$O`K&Rp<$r6VkA68QY%0bUt`\]DcI)_,GoEM8)%+(obPOEd#uG**\MT,0t`gnNhhPhj_(HV7"1f:tH=KN%.'%e_W9P)](u:H*Lqq1t$3Q<i@a1e2YbmW^-[FQ/L;W]EY9DG_Ki*?&h&%]Ba61OW^Jg=gu!q1klcf'^O5M4pD^JAp%NLWM&!3<J2*r#,E;M3;5.V;M/PQPj+I4n=WF#(ZHUGOi68C(B8^-D/Tuj8`QMHCTCY2%rR:S5r4A5`V8<+!XA@Uuef6g,6Y/?[LNBqU<3OH4ViCm=6h_7/6!l7XmZoe"pfV52!=QJEdk"6G^Tq$>2/D(*K$?4D;(i*^i`%Kf%;RKDu,Y_Wtb/[l99sLXD'(T_3?1l;_#M,q.gl^WQL'kOq:l2aZpi3h!NA*.#P[)B0]:b%Mro!JGJON(H/TK]b.aIjq,lbl-q5B)9%qB,0.-F$+A!fg'kNnNT4Q7l9`p9`cn8X*ti!k]7>UaK8AXo&r+oW!<MHR+^e.;HRt,S?uT6?;ZVd3loRh;'>+9bHugcr(#@/!lg3%!f<hG0d;IPZFE=9U$.L\N`qQ5O/](l4"HJ=1E_0*B#`jr^M&5<XL!W*VTsU!2^A:cmX@Bi,NQ3Y[W(6N["%5em`+2IQ9U7\nHMa?%/WR?R"=oFUH3m%XnamE`^6Hl40Z/^9O'm\S2^@o&,Ao\s)+ND/">c"H)0':+EUsd$0]KN`B,ko\`A<O!\d2=VnT5AE39&0grRl#D%a.^6B#kg7;ZC0&.g<FSd]"@.OAcpr7o'Ra4KG2,ppHII*BBUQglEiFS1XrAa7J_]g$C?ja'XKtNiiAS(`X.O<CV0Ajh&Uu/dnE05%aLB?4g2'bV?dhJAPKF0'+$VZE^&s^_2(2KcX[AH'-Fc%5_?bk+5Y[I=88:\)L&IqZR2:c'!aa<13bWZq,G\G;8NsfVT8S3WDP5Nq%fNTUu4lnAr'&P.gmSI]NA`PXpor)IcO`0NLY*H8RXMKLPL5K_IM#TZ_cdU]Zm#qW$OG3\bV,/a?1UoSU3>V<)JRM+K$skoZ@>dQs%8`N`<_tRr[E2-"3JZ7>5(NUYO?)$-Sa-b\TfKZ$HcnSl*".TkC\Z:3f".-hYYPrWba.JF>==+l*]OFY&rW2#9l3d(ZDDU25f08)>%mB`n[lL[Ho^L:u&gX"%1#V9!^%tKfYAQPN1]rU8%=qAP;VKYjSc4^[\HZ9OqZ1.bTSc?>2o5.d(L,jsr6uY*.SA#9UKl<8;SENd0%CmMV`Yg?19QFVUO8(ha#Zo"CCCj6l]JBf6J1X6_G`(,8<b,953DEMqK:?1+rRka?Nq=_P#EPB0Q@J*lao0V?kA%0bHc[JjZI&gX;%Xn,Q/GZs9C"lj<eY6r:u31gqEVhqkt/1fP'@Adsk6Djmn?+KV)<PWi/poB#:<7A8_`mZtU'o]&54t@Ig`oGB7^OI6fdl?5X".-=*%Ya_?cFEbKlNVkujpoS)tB%B3<Bm4'+F3?LDmI1%#rp+cXn]S[A^\O@Kq8_[Url95ts7#"'?i7n#rUukuqhO)/pAb-ah='8"o=t:u%hnOO<gOK#8meko@e,SP.5QC_pJ,Qk6rVjG's8%6Dmf*ITQcu*%`F&PfJ,,_or==%>f#I~>%AI9_PrivateDataEnd